# データフロー構造情報抽出

以下のセクション情報に基づいて、システムのデータフロー構造を抽出してください。

## 概要セクション
```
{overview}
```

## ディレクトリ構造セクション
```
{directory_structure}
```

## 用語集セクション
```
{glossary}
```

## 抽出要求

以下の構造化情報を抽出してください：

1. **データソースとシンク**
   - システムへの入力データの発生源
   - データの最終的な保存先や出力先
   - 外部システムとのインテグレーションポイント

2. **データ処理ステップ**
   - 入力から出力までのデータ変換段階
   - 各処理ステップで行われる変換の内容
   - 処理の順序と条件分岐

3. **データエンティティ**
   - システム内で扱われる主要なデータ構造
   - エンティティ間の関係
   - データの状態や形式の変化

4. **データフローパターン**
   - 同期/非同期処理パターン
   - ストリーム処理/バッチ処理
   - イベント駆動型フロー
   - リクエスト/レスポンスパターン

5. **主要コンポーネント**
   - データ処理を行う主要なコンポーネント
   - コンポーネント間のデータの流れ
   - 各コンポーネントの役割

## 出力形式

Markdownフォーマットで、以下のような構造で情報を整理してください：

```markdown
## データフロー構造

### 主要コンポーネント
- **コンポーネント1**: 役割と処理内容
- **コンポーネント2**: 役割と処理内容
...

### 主要データパス
1. **入力データソース** → **処理ステップ1** → **処理ステップ2** → **データ出力先**
2. **別の入力元** → **別の処理パス** → **出力先**
...

### データエンティティと変換
- **入力データX**: 形式と内容
  - 処理1で変換: 変換内容
  - 処理2で結合: 結合対象と方法
  - 最終形式: 説明

### 同期/非同期パターン(該当する場合のみ記載)
- 同期処理: コンポーネントAとBの間の処理
- 非同期処理: コンポーネントCとDの間のメッセージング

### APIとインターフェース(該当する場合のみ記載)
- API1: 入力/出力と用途
- API2: 入力/出力と用途
...
```

可能な限り具体的な情報を抽出し、推測は最小限に抑えてください。情報が不明確な場合は「情報なし」と記載してください。抽出した主要コンポーネントは、後続のアーキテクチャ図で参照されることを考慮して、一貫性のある命名と役割定義を行ってください。
