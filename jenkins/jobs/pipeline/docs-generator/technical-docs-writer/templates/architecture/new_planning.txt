# アーキテクチャ図セクション新規作成 - 計画立案段階

以下の情報に基づいて、システムのアーキテクチャ図セクション作成計画を立ててください。

## 前のセクションから抽出された構造化情報
```
{structured_info}
```

## アーキテクチャ図セクションの役割

このセクションではC4モデルの考え方に基づき、システム全体の構成を視覚的に階層的に示すことを目的とします。
Mermaidのflowchartを使って、以下の3階層のC4モデル図を作成します：

1. **Level 1: システムコンテキスト図 (System Context Diagram)**  
   - システムと外部アクター（ユーザー種別、外部システム）との関係を俯瞰
   - エンジニア以外の人にも理解できる抽象度で表現
   - 「誰が」「どのシステムを」「どのように使うか」を明確に

2. **Level 2: コンテナ図 (Container Diagram)**  
   - システム内部を主要コンテナ（アプリケーション、DB等）に分解
   - 各コンテナ間でやり取りされる情報の流れを表現
   - 技術的選択（データベース種別、アプリケーションフレームワーク等）を明記

3. **Level 3: コンポーネント図 (Component Diagram)**  
   - 各コンテナ（アプリケーション）内の主要コンポーネント（モジュール）構造
   - コンポーネント間の依存関係と責任範囲
   - インターフェースと実装の区別

## Mermaidのflowchart記法について

- `flowchart TB` (上から下)、`flowchart LR` (左から右) などで方向を指定
- ノード定義: `id[ラベル]`, `id(ラベル)`, `id((ラベル))`, `id{ラベル}` など多様な形状
- サブグラフ: `subgraph タイトル ... end` でコンポーネントをグループ化
- 関係定義: `-->`, `---`, `-.->`, `==>` などの矢印や線でノード間の関係を表現
- スタイル: `style id fill:#f9f,stroke:#333` や `classDef` でスタイル定義
- 改行: `</br>` で改行 ※`\n`では改行が表現されないので利用しない

### C4モデルにおけるMermaid活用ポイント
- **レベル1（コンテキスト図）**: 
  - 人物は((User))など円形で表現
  - システムは[System]など四角形で表現
  - 外部システムは異なる色や形で区別
  - 関係線にはシステム利用目的を明記

- **レベル2（コンテナ図）**: 
  - データベースは[(Database)]で表現
  - Webアプリは[WebApp]で表現
  - APIは[API Server]や(API)で表現
  - 通信プロトコルや技術をラベルに記載

- **レベル3（コンポーネント図）**: 
  - コンポーネントは[Component]で表現
  - サブグラフを使って論理的な境界やモジュール単位を表現
  - 関係線にはAPIやメソッド呼び出しの情報を付与

- 図が横に広がりすぎないよう適切な方向設定を選択
- 複雑なシステムは複数の図に分割して表現
- 一つの図に表示するノード数を制限し可読性を確保

## 計画立案のタスク

1. **情報の過不足を分析**
   - C4モデルの各レベルに必要な情報の有無
   - ユーザー種別、外部システム情報
   - コンテナ（アプリケーション）構成情報
   - コンポーネント（モジュール）構成情報
   - 不足情報がある場合の対処法（省略）

2. **事実として確認できる情報の特定**
   - レベル1: 確認できるユーザー種別と外部システム
   - レベル2: 確認できるコンテナ（アプリ、DB等）とその技術
   - レベル3: 確認できるコンポーネント構成と責任範囲

3. **取るべきアプローチを決定**
   - 各C4レベルの図の詳細度
   - 不足情報が多い場合は該当レベルを省略
   - レベル3は確実な情報がある部分のみ作成

4. **実装コードとの整合性確認**
   - ディレクトリやソースコードから実在が確認できる要素のみ図示
   - 存在が未確認のものは図示しない

## 出力形式

以下の項目を含めて計画をまとめてください：

1. **C4モデル各レベルの情報過不足分析結果**
   - レベル1: コンテキスト図に必要な情報の過不足
   - レベル2: コンテナ図に必要な情報の過不足
   - レベル3: コンポーネント図に必要な情報の過不足
   - 不足している情報と対処方針（省略）
   
2. **事実として確認できる情報のリスト**
   - 各C4レベルで確認できる要素や関係性
   - 確認できない情報は含めない

3. **取るべきアプローチの決定**
   - 作成する各C4レベル図の詳細度
   - 各図の役割と焦点
   - 図の詳細度の方針（確実な情報のみ）
   
4. **実装コードとの整合性確認方法**
   - 検証すべき要素
   - 整合性確保の手段

**重要**: 事実に基づかない要素や関係性は図に含めないでください。情報が不足している場合は、そのC4レベルを省略するか、非常に基本的な概要のみを表示してください。図は確実な情報に基づいて作成され、信頼性が高いものである必要があります。
