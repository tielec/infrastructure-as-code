# アーキテクチャ図セクション更新

以下の情報に基づいて、システムのアーキテクチャ図セクションを更新してください。

## 現在のアーキテクチャ図セクション
```markdown
{current_content}
```

## 前のセクションから抽出された構造化情報
```
{structured_info}
```

## 既存のダイアグラム
```
{existing_diagrams}
```

## アーキテクチャ図セクションの重要事項

このセクションは「システムがどのように構成されているか」を視覚的に表現することに特化します。詳細な定義や説明は用語集に任せ、このセクションは構造と関係性の視覚化に集中してください。

### 最重要指針

1. **情報の正確性を最優先**
   - **前のセクションから抽出された構造化情報を優先して使用する**
   - 不確かな情報に基づく推測は絶対に避ける
   - 情報が不十分な場合は、既存の正確なダイアグラムを維持し、変更しない

2. **図表主体の構成**
   - セクション内容の70%以上をダイアグラムが占めるようにする
   - 各ダイアグラムには1-2文の簡潔な説明のみを付ける
   - 各コンポーネントの説明は1行以内に制限

3. **詳細な定義は避ける**
   - コンポーネントの詳細な説明・定義は用語集セクションの役割
   - ここでは関係性とデータの流れを視覚化することに集中

## 更新の観点

1. **コンポーネント変更の反映**
   - 構造化情報から識別できる新しいコンポーネントの追加と既存コンポーネントの更新
   - 構造化情報から識別できるコンポーネント間の関係性の変更
   - 不要になったことが明確に示されているコンポーネントの削除

2. **ダイアグラムの明確さ向上**
   - 既存の図表をより明確で理解しやすく改善
   - 同じ情報をより効果的に伝える図表の構造
   - 過剰な説明文の削減と視覚要素の強化

3. **図表と説明のバランス改善**
   - 詳細な説明よりダイアグラムを中心に
   - 各要素の説明は1行程度に抑える
   - 用語集的な説明文は削除または大幅に簡略化

## 更新のガイドライン

- 既存のダイアグラムで正確な部分は維持し、構造化情報から明確に変更が必要な部分のみを更新
- ダイアグラムは7-8個以内の主要コンポーネントに抑える
- 長い説明文は短縮し、図表の理解に必要な情報のみに絞る
- コンポーネント名やラベルは構造化情報との一貫性を保つ
- 詳細な機能説明ではなく、構造と関係性の視覚化に注力

Mermaid記法では、以下の点に厳密に従ってください：
- 空白、カッコ、ハイフンなどの特殊文字を含むテキストは必ず二重引用符で囲む
- 例: A["フロントエンド (React)"] の形式で必ず二重引用符を使用する
- 例: B["バックエンド (FastAPI)"] のように各単語の間の空白も引用符の対象となる
- ❌ A[フロントエンド (React)] → ✅ A["フロントエンド (React)"]

## 情報不足時の対応

アーキテクチャの変更に関する情報が不足している場合は、以下のアプローチを取ってください：

1. 既存の正確なダイアグラムはそのまま維持する

2. 部分的に情報がある場合は、明確な部分のみを更新し、不明確な部分は変更しない

3. 更新情報があまりにも少ない場合は、既存のダイアグラムを維持する

## 出力の要件

- 更新されたアーキテクチャ図セクション全体をMarkdownで出力
- 見出しは「# システムアーキテクチャ図」で始める
- 視覚化を最優先し、説明文は最小限にする
- ダイアグラムは更新内容を正確に反映する
- 全体で図表が占める割合を70%以上に
- マーメイドダイアグラムのコード品質を高く保つ

更新は前のセクションから抽出された構造化情報に基づき、過度な推測は避けてください。不明確な部分はダイアグラムから省くか、既存のダイアグラムをそのまま維持してください。
