AWSTemplateFormatVersion: '2010-09-09'
Description: 'Minimal Bootstrap EC2 Instance for Pulumi Management'

Parameters:
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: Must be the name of an existing EC2 KeyPair.

  InstanceType:
    Description: EC2 instance type
    Type: String
    Default: t3.micro
    AllowedValues:
      - t3.micro
      - t3.small
      - t3.medium
    ConstraintDescription: Must be a valid EC2 instance type.

  AllowedIP:
    Description: The IP address range that can be used to SSH to the EC2 instance
    Type: String
    Default: 0.0.0.0/0
    ConstraintDescription: Must be a valid IP CIDR range of the form x.x.x.x/x.

  LatestAmiId:
    Description: Latest Amazon Linux 2 AMI ID
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: Bootstrap-VPC

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: Bootstrap-IGW

  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.0.0/24
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: Bootstrap-Public-Subnet

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: Bootstrap-Public-RT

  DefaultPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet
      RouteTableId: !Ref PublicRouteTable

  BootstrapSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable SSH access
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !Ref AllowedIP
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: Bootstrap-SG

  BootstrapIAMRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess
      Tags:
        - Key: Name
          Value: Bootstrap-IAM-Role

  BootstrapInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: "/"
      Roles:
        - !Ref BootstrapIAMRole

  BootstrapInstance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceType
      SecurityGroupIds:
        - !Ref BootstrapSecurityGroup
      KeyName: !Ref KeyName
      ImageId: !Ref LatestAmiId
      SubnetId: !Ref PublicSubnet
      IamInstanceProfile: !Ref BootstrapInstanceProfile
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeSize: 20
            VolumeType: gp3
            DeleteOnTermination: true
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash -xe
          yum update -y
          yum install -y git jq

          # Install Node.js
          curl -sL https://rpm.nodesource.com/setup_16.x | bash -
          yum install -y nodejs

          # Install Pulumi
          curl -fsSL https://get.pulumi.com | sh
          echo 'export PATH=$PATH:/root/.pulumi/bin' >> /root/.bashrc
          echo 'export PATH=$PATH:/home/ec2-user/.pulumi/bin' >> /home/ec2-user/.bashrc
          chown -R ec2-user:ec2-user /home/ec2-user/.pulumi
          
          # Install AWS CLI v2
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          ./aws/install
          
          # Bootstrap complete message
          echo "Bootstrap complete! You can now SSH into this instance and use Pulumi to manage your AWS resources."
      Tags:
        - Key: Name
          Value: Bootstrap-Instance

Outputs:
  BootstrapInstanceId:
    Description: ID of the bootstrap EC2 instance
    Value: !Ref BootstrapInstance

  BootstrapPublicIP:
    Description: Public IP address of the bootstrap EC2 instance
    Value: !GetAtt BootstrapInstance.PublicIp

  BootstrapPublicDnsName:
    Description: Public DNS name of the bootstrap EC2 instance
    Value: !GetAtt BootstrapInstance.PublicDnsName

  VPCID:
    Description: VPC ID
    Value: !Ref VPC

  PublicSubnetID:
    Description: Public Subnet ID
    Value: !Ref PublicSubnet
