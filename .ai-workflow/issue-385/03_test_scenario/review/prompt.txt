# テストシナリオフェーズ - レビュープロンプト

## レビュー対象
テストシナリオをクリティカルシンキングの観点からレビューしてください。

### テストシナリオ
@.ai-workflow/issue-385/03_test_scenario/output/test-scenario.md

### 設計書（参考）
@.ai-workflow/issue-385/02_design/output/design.md

### 要件定義書（参考）
@.ai-workflow/issue-385/01_requirements/output/requirements.md

### テスト戦略（Phase 2で決定）
**INTEGRATION_ONLY**

## 品質ゲート（Phase 3）

テストシナリオは以下の品質ゲートをクリアする必要があります：

- [ ] **Phase 2の戦略に沿ったテストシナリオである**
- [ ] **主要な正常系がカバーされている**
- [ ] **主要な異常系がカバーされている**
- [ ] **期待結果が明確である**

## レビュー姿勢

このレビューは「**80点で十分**」の原則に基づいて実施してください：

1. **完璧ではなく、十分を目指す**
   - テストシナリオが次フェーズ（実装）に進める状態であれば合格
   - すべてのエッジケースをカバーする必要はない
   - 主要なテストケースがカバーされていればOK

2. **ブロッカーと改善提案を明確に区別**
   - ブロッカー: 次フェーズ（実装）に進めない重大な問題
   - 改善提案: 次フェーズに進めるが、改善が望ましい事項

3. **実用的でバランスの取れた判断**
   - プロジェクトを前に進めることを最優先
   - 実装フェーズで補完可能な問題はブロッカーにしない

4. **建設的なフィードバック**
   - 「不足」ではなく「追加するとより良い」という表現
   - 具体的な改善案を提示

## レビュー観点

### 1. テスト戦略との整合性（最重要）

- Phase 2で決定されたテスト戦略に沿っているか
  - UNIT_ONLY → Unitテストシナリオのみ存在するか
  - BDD_ONLY → BDDシナリオのみ存在するか
  - UNIT_BDD → 両方のシナリオが存在するか
  - 等
- 戦略に含まれないテスト種別が含まれていないか

### 2. 正常系のカバレッジ

- 主要な機能の正常系がカバーされているか
- クリティカルパスがテストされているか
- ハッピーパスが明確に定義されているか

### 3. 異常系のカバレッジ

- 主要なエラーケースがカバーされているか
- 境界値テストがあるか
- 想定されるエラーハンドリングがテストされているか

### 4. 期待結果の明確性

- 各テストケースの期待結果が具体的か
- 検証可能（テスト実行可能）な形で記述されているか
- 曖昧な表現がないか

### 5. 要件との対応

- 要件定義書の受け入れ基準がテストシナリオに反映されているか
- 機能要件がすべてテスト対象に含まれているか

### 6. 実行可能性

- テストシナリオが実際に実装・実行可能か
- テストデータが具体的に定義されているか
- 前提条件が明確か

## ブロッカー（BLOCKER）と改善提案（SUGGESTION）の区別

### ブロッカー（BLOCKER）: 次フェーズに進めない重大な問題

**ブロッカーの例**:
- テスト戦略と完全に不一致（例: UNIT_ONLYなのにBDDシナリオのみ）
- 主要な正常系が全くカバーされていない
- 期待結果が全く記載されていない
- テストシナリオが実装不可能

### 改善提案（SUGGESTION）: 次フェーズに進めるが、改善が望ましい事項

**改善提案の例**:
- 追加のエッジケーステスト
- より詳細なテストデータ
- テストカバレッジの拡大
- テストケースの追加
- ドキュメントの充実

## 出力フォーマット

以下の形式で出力してください：

```markdown
## 品質ゲート評価

- [x/  ] **Phase 2の戦略に沿ったテストシナリオである**: PASS/FAIL - （コメント）
- [x/  ] **主要な正常系がカバーされている**: PASS/FAIL - （コメント）
- [x/  ] **主要な異常系がカバーされている**: PASS/FAIL - （コメント）
- [x/  ] **期待結果が明確である**: PASS/FAIL - （コメント）

## 詳細レビュー

### 1. テスト戦略との整合性

**良好な点**:
- （具体的な良い点）

**懸念点**:
- （懸念があれば記載）

### 2. 正常系のカバレッジ

**良好な点**:
- （具体的な良い点）

**懸念点**:
- （懸念があれば記載）

### 3. 異常系のカバレッジ

**良好な点**:
- （具体的な良い点）

**改善の余地**:
- （改善提案があれば記載）

### 4. 期待結果の明確性

**良好な点**:
- （具体的な良い点）

**懸念点**:
- （懸念があれば記載）

### 5. 要件との対応

**良好な点**:
- （具体的な良い点）

**改善の余地**:
- （改善提案があれば記載）

### 6. 実行可能性

**良好な点**:
- （具体的な良い点）

**懸念点**:
- （懸念があれば記載）

## ブロッカー（BLOCKER）

**次フェーズに進めない重大な問題**

（ブロッカーがある場合のみ記載）
1. **（ブロッカー1のタイトル）**
   - 問題: （具体的な問題）
   - 影響: （次フェーズにどう影響するか）
   - 対策: （どう修正すべきか）

## 改善提案（SUGGESTION）

**次フェーズに進めるが、改善が望ましい事項**

（改善提案がある場合のみ記載）
1. **（提案1のタイトル）**
   - 現状: （現在の状態）
   - 提案: （こうすればより良い）
   - 効果: （改善による効果）

## 総合評価

（テストシナリオ全体の総合的な評価）

**主な強み**:
- （良い点をまとめる）

**主な改善提案**:
- （改善提案をまとめる）

（総括コメント）

---
**判定: PASS / PASS_WITH_SUGGESTIONS / FAIL**
```

## レビュー実施

上記フォーマットに従って、テストシナリオのクリティカルシンキングレビューを実施してください。

## ⚠️ 重要: 判定の出力は必須

**レビュー結果の最後に、必ず以下のいずれかの形式で判定を出力してください：**

```
---
**判定: PASS**
```

または

```
---
**判定: PASS_WITH_SUGGESTIONS**
```

または

```
---
**判定: FAIL**
```

**この判定がないと、レビュー結果が正しく処理されません。必ず3つのいずれかの判定を、上記の正確な形式で明示的に出力してください。**
