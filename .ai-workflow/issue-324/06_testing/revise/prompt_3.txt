# テスト実行フェーズ - 修正プロンプト

## タスク概要
レビューで指摘された問題を修正し、テストを再実行してください。

**重要**: Phase 5でテストが失敗した場合、**Phase 4（実装）に戻って実装を修正**する必要があります。

## レビュー結果
この問題を分析しました。

テスト実行結果を確認したところ、Phase 6（testing）は**テストファイルが存在しないために実行できない状態**であり、根本原因はPhase 4で実装された`TestImplementationPhase`クラスの設計に問題があることが判明しています。

test-result.mdには詳細な問題分析と修正指示が既に記載されており、以下の点が明確になっています：

## 問題の本質

1. **Phase 5の実行結果**: test-implementation.md（ログファイル）のみが生成され、実際のテストファイル（`tests/unit/phases/test_test_implementation.py`）が生成されていない

2. **Phase 4の設計上の欠陥**:
   - `execute()`メソッドが**test-implementation.mdの存在のみを確認**している
   - **実際のテストファイル（test_*.py）の存在確認をしていない**
   - Phase 5のexecuteプロンプトはテストファイル作成とログ作成の両方を指示しているが、execute()メソッドはログのみを検証

3. **影響**: Phase 6（testing）が実行不可能（ブロッカー）

## レビュー結果
レビュー結果が既に作成されていることを確認しました。

## Phase 6（testing）のレビュー結果サマリー

レビュー結果ファイル（`/tmp/jenkins-66c1fee5/workspace/AI_Workflow/ai_workflow_orchestrator/.ai-workflow/issue-324/06_testing/review/result.md`）が既に作成されており、判定は**FAIL**となっています。

### 主な発見事項

**ブロッカー（Phase 7に進めない重大な問題）**:

1. **テストファイルが存在しない**
   - `tests/unit/phases/test_test_implementation.py`が実際には作成されていない
   - Phase 5の成果物として、test-implementation.md（ログファイル）のみが生成されている

2. **Phase 4の設計上の欠陥**
   - `TestImplementationPhase`クラスの`execute()`メソッドが、test-implementation.mdの存在のみを確認
   - 実際のテストコードファイル（test_*.py）の存在確認をしていない
   - Phase 5の品質ゲート「テストコードが実行可能である」を検証していない

3. **Phase 5のレビュー機能が機能しなかった**
   - Phase 5のレビューでこの問題が検出されなかった

### 必要なアクション

test-result.mdに詳細な修正指示が記載されています：

1. **Phase 4のrevise()を実行**して、以下を修正:
   - `execute()`メソッドにテストファイル存在確認を追加
   - executeプロンプトを改善（テストファイル作成が最優先タスクであることを明記）
   - `review()`メソッドにテストファイル存在確認を追加

2. **Phase 5（test_implementation）を再実行**

3. **Phase 6（testing）を再実行**

### レビュー結果の品質

test-result.mdとreview/result.mdの両方で、問題の根本原因が正確に特定されており、具体的な修正案が提示されています。レビュー分析は優れていますが、テストが実行できないため、**Phase 6の品質ゲートは満たされていません**。

---

**判定: FAIL** - Phase 4に戻って修正が必要です（ブロッカー）

## 参考情報

### テスト結果
@.ai-workflow/issue-324/06_testing/output/test-result.md

### 実装ログ
@.ai-workflow/issue-324/04_implementation/output/implementation.md

### テストシナリオ
@.ai-workflow/issue-324/03_test_scenario/output/test-scenario.md

## 修正指示

### ブロッカー（BLOCKER）の解消

レビュー結果の「ブロッカー」セクションに記載された問題は、**次フェーズに進めない重大な問題**です。

**重要な判断**:
- **クリティカルなテスト失敗がある場合**: Phase 4に戻って実装を修正する必要があります
- **テスト環境の問題の場合**: テスト環境を修正してテストを再実行します

**Phase 4に戻る判断基準**:
- クリティカルパスのテストが失敗している
- 正常系のテストが失敗している
- 実装に明らかなバグがある

**Phase 5内で対応できる問題**:
- テスト環境の設定ミス
- テストデータの準備不足
- テスト実行コマンドの誤り

### 修正方針の決定

レビュー結果を確認し、以下のいずれかを選択してください：

#### 選択肢1: Phase 4に戻って実装を修正

実装に問題がある場合は、このプロンプトでは対応できません。
**Phase 4のrevise()を実行する必要があります**。

この場合、以下を記録してください：

```markdown
# テスト失敗による実装修正の必要性

## 修正が必要な理由
（なぜPhase 4に戻る必要があるか）

## 失敗したテスト
（どのテストが失敗したか）

## 必要な実装修正
（実装のどこをどう修正すべきか）
```

これを `.ai-workflow/issue-324/05_testing/output/test-result.md` に追記してください。

#### 選択肢2: テスト環境を修正してテストを再実行

テスト環境に問題がある場合は、環境を修正してテストを再実行してください。

**修正手順**:
1. テスト環境の問題を特定
2. 環境を修正（依存パッケージのインストール、設定ファイルの修正等）
3. テストを再実行
4. テスト結果を記録

## 修正後の確認事項

修正完了後、以下を確認してください：

1. **ブロッカーが解消されたか**
   - レビューで指摘されたすべてのブロッカーに対応したか

2. **主要なテストが成功しているか**
   - クリティカルパスのテストが成功しているか

3. **次フェーズへの準備**
   - Phase 6（ドキュメント作成）に進めるか
   - またはPhase 4に戻る必要があるか

## テスト結果の更新

テストを再実行した場合、結果を `.ai-workflow/issue-324/05_testing/output/test-result.md` に追記してください：

```markdown
## 再実行結果

### 再実行1: YYYY-MM-DD HH:MM:SS
- **修正内容**: （何を修正したか）
- **成功**: Y個
- **失敗**: Z個
- **変更**: （前回からの変化）
```

## 出力形式

修正後のテスト結果を `.ai-workflow/issue-324/05_testing/output/test-result.md` として**上書き保存**してください。

## 修正開始

上記を踏まえ、適切な対応を実施してください。
