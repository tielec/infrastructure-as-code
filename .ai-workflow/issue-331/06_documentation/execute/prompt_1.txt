# ドキュメント更新フェーズ - 実行プロンプト

## タスク概要
今回の変更により影響を受けるプロジェクトドキュメントを特定し、更新してください。

## 入力情報

### 各フェーズの成果物
- Phase 1: @.ai-workflow/issue-331/01_requirements/output/requirements.md
- Phase 2: @.ai-workflow/issue-331/02_design/output/design.md
- Phase 3: @.ai-workflow/issue-331/03_test_scenario/output/test-scenario.md
- Phase 4: @.ai-workflow/issue-331/04_implementation/output/implementation.md
- Phase 5: @.ai-workflow/issue-331/05_testing/output/test-result.md

## ドキュメント更新手順

### ステップ1: プロジェクトのドキュメント構造を探索

まず、プロジェクトにどのようなドキュメントが存在するか調査してください：

**調査すべき場所**:
- プロジェクトルート直下の.mdファイル
- サブディレクトリ内の.mdファイル（.ai-workflowディレクトリは除く）
- docsディレクトリ（存在する場合）

**各ドキュメントを読んで把握すべきこと**:
- 誰が読むか（エンドユーザー、開発者、運用担当者等）
- 何が書かれているか（使い方、設計思想、トラブルシューティング等）
- どのような構成か（セクション構成、フォーマットスタイル）

### ステップ2: 変更内容の影響を分析

Phase 2（設計）とPhase 4（実装）から、以下を抽出してください：

**機能面の変更**:
- 新しく追加された機能は何か？
- 既存の動作が変わった部分は何か？
- 削除・非推奨になった機能は何か？

**インターフェースの変更**:
- 新しいCLIコマンド・オプションは？
- APIや設定ファイルの変更は？
- ユーザーの使い方が変わる点は？

**内部構造の変更**:
- アーキテクチャの変更は？
- 新しいコンポーネント・クラス・関数は？
- 設計思想や実装パターンの変更は？

### ステップ3: 影響を受けるドキュメントを特定

各ドキュメントに対して、以下の質問に答えてください：

1. **このドキュメントの読者は、今回の変更を知る必要があるか？**
2. **知らないと、読者が困るか？誤解するか？**
3. **ドキュメントの内容が古くなっていないか？**

→ **1つでもYesなら、更新対象**

### ステップ4: 更新の実施

更新が必要なドキュメントについて：

**原則**:
- 既存のスタイル・フォーマットを維持する
- 適切なセクションに追加する（新規セクションが必要なら作成）
- 簡潔に、必要な情報のみ記載する
- 既存の内容と矛盾しないようにする
- ドキュメント全体の整合性を保つ

**注意**:
- 過度な説明は避ける
- コードをそのままコピーしない
- ユーザー視点で必要な情報に絞る

### ステップ5: 更新結果の記録

documentation-update-log.mdを `.ai-workflow/issue-331/06_documentation/output/documentation-update-log.md` として作成し、以下の内容を記載してください：

```markdown
# プロジェクトドキュメント更新ログ

## 調査したドキュメント

（全ての.mdファイルを相対パスでリストアップ）
- `相対パス1`
- `相対パス2`
- ...

## 更新したドキュメント

### `相対パス`
**更新理由**: （1行で説明）

**主な変更内容**:
- （変更点1）
- （変更点2）
- ...

### `相対パス`
...

## 更新不要と判断したドキュメント

- `相対パス`: 理由（1行）
- `相対パス`: 理由（1行）
- ...
```

## 品質ゲート（Phase 6: Documentation）

ドキュメント更新は以下の品質ゲートを満たす必要があります：

- [ ] **影響を受けるドキュメントが特定されている**
- [ ] **必要なドキュメントが更新されている**
- [ ] **更新内容が記録されている**

これらの品質ゲートは**必須要件**です。作成後、クリティカルシンキングレビューが実施されます。

## 出力形式

1. プロジェクトドキュメントを直接更新（README.md、ARCHITECTURE.md等）
2. 更新ログを `.ai-workflow/issue-331/06_documentation/output/documentation-update-log.md` として保存

## 注意事項

1. **探索の徹底**: すべての.mdファイルを調査すること（.ai-workflowディレクトリは除く）

2. **判断基準の明確化**: 各ドキュメントについて、なぜ更新したか/しなかったかを記録

3. **既存スタイルの維持**: ドキュメントのフォーマットや書き方を変えないこと

4. **レビューされることを意識**: ドキュメントはクリティカルシンキングレビューが実施されます
   - 品質ゲート（3つの必須要件）を満たすこと
   - 更新が必要なドキュメントをすべて特定していること

## ドキュメント更新開始

上記を踏まえ、プロジェクトドキュメントの更新を開始してください。
