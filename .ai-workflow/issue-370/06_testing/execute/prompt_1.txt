# テスト実行フェーズ - 実行プロンプト

## タスク概要
Phase 5で実装したテストコードを実行し、結果を記録してください。

## 入力情報

### Planning Phase成果物
- Planning Document: @.ai-workflow/issue-370/00_planning/output/planning.md

**注意**: Planning Phaseが実行されている場合、開発計画（実装戦略、テスト戦略、リスク、スケジュール）を必ず確認してください。

### テスト実装ログ
@.ai-workflow/issue-370/05_test_implementation/output/test-implementation.md

### 実装ログ（参考）
@.ai-workflow/issue-370/04_implementation/output/implementation.md

### テストシナリオ（参考）
@.ai-workflow/issue-370/03_test_scenario/output/test-scenario.md

## テスト実行手順

### 1. テストコードの確認

テスト実装ログに記載されたテストファイルを確認してください：
- 実装されたテストファイルのパス
- テストフレームワーク（pytest, unittest, behave等）
- テスト実行コマンド

### 2. テストの実行

適切なテストコマンドを実行してください：

**Pytestの場合**:
```bash
pytest tests/
```

**Unittestの場合**:
```bash
python -m unittest discover tests/
```

**Behave（BDD）の場合**:
```bash
behave tests/features/
```

**プロジェクト固有のテストコマンド**:
- @README.md や@CONTRIBUTION.md にテスト実行方法が記載されている場合があります
- 既存のテストスクリプトがあれば参考にしてください

### 3. テスト結果の記録

テスト結果を以下の形式で記録してください：

```markdown
# テスト実行結果

## 実行サマリー
- **実行日時**: YYYY-MM-DD HH:MM:SS
- **テストフレームワーク**: pytest/unittest/behave等
- **総テスト数**: X個
- **成功**: Y個
- **失敗**: Z個
- **スキップ**: W個

## テスト実行コマンド
\```bash
（実行したコマンド）
\```

## 成功したテスト

### テストファイル1: path/to/test_xxx.py
- ✅ test_function1: （テスト内容）
- ✅ test_function2: （テスト内容）

## 失敗したテスト

（失敗がある場合のみ記載）

### テストファイル1: path/to/test_xxx.py
- ❌ test_function3: （テスト内容）
  - **エラー内容**: （エラーメッセージ）
  - **原因分析**: （なぜ失敗したか）
  - **対処方針**: （どう修正すべきか）

## テスト出力

\```
（テスト実行の完全な出力）
\```

## 判定

- [ ] **すべてのテストが成功**
- [ ] **一部のテストが失敗**
- [ ] **テスト実行自体が失敗**

## 次のステップ

- すべて成功: Phase 7（ドキュメント作成）へ進む
- 一部失敗: Phase 5（テストコード実装）に戻って修正が必要
- 実行失敗: テスト環境の確認が必要
```

このログを `.ai-workflow/issue-370/06_testing/output/test-result.md` として保存してください。

## 品質ゲート（Phase 6）

テスト実行は以下の品質ゲートを満たす必要があります：

- [ ] **テストが実行されている**
- [ ] **主要なテストケースが成功している**
- [ ] **失敗したテストは分析されている**

これらの品質ゲートは**必須要件**です。テスト実行後、クリティカルシンキングレビューが実施されます。

## 注意事項

1. **テスト環境**: 適切なテスト環境で実行
   - 必要な依存パッケージがインストールされているか確認
   - テストデータが準備されているか確認

2. **失敗の分析**: テストが失敗した場合は詳細に分析
   - エラーメッセージを記録
   - 原因を特定
   - 修正方針を明記

3. **完全性**: すべてのテストを実行
   - 一部だけでなく、すべてのテストを実行
   - スキップされたテストがある場合は理由を記載

4. **客観性**: 結果を正直に記録
   - 失敗を隠さない
   - 成功・失敗を正確に報告

5. **レビューされることを意識**: テスト結果はクリティカルシンキングレビューが実施されます
   - 品質ゲート（3つの必須要件）を満たすこと
   - テスト失敗時は原因分析と対処方針を明記

## テスト実行開始

上記を踏まえ、テストを実行し、結果を記録してください。
