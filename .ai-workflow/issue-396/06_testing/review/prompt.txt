# テスト実行フェーズ - レビュープロンプト

## レビュー対象

### テスト結果
@.ai-workflow/issue-396/06_testing/output/test-result.md

### 実装ログ（参考）
@.ai-workflow/issue-396/04_implementation/output/implementation.md

### テストシナリオ（参考）
@.ai-workflow/issue-396/03_test_scenario/output/test-scenario.md

## 品質ゲート（Phase 5）

テスト実行は以下の品質ゲートをクリアする必要があります：

- [ ] **テストが実行されている**
- [ ] **主要なテストケースが成功している**
- [ ] **失敗したテストは分析されている**

## ⚠️ 重要: Planning Phaseチェックリストとの照合（必須）

### 1. Planning.mdの読み込み

以下のファイルを読み込んでください：
- {planning_document_path}

### 2. 該当フェーズのチェックリストを抽出

Planning.mdから、現在のフェーズ（"### Phase 6:" または "## Phase 6:"）のセクションを見つけ、タスクチェックリストを抽出してください。

**注意**: チェックリストが見つからない場合は、このチェックをスキップしてください。

### 3. テスト実行内容との照合

テスト結果（test-result.md）と照合し、各タスクが完了しているかチェックしてください。

**完了の判定基準**:
- Task記載のテストが実行されているか
- Task記載のテストケースが検証されているか
- サブタスクがすべて完了しているか

### 4. Planning.mdの更新

照合結果に基づき、planning.mdのチェックボックスを更新してください：

- 完了したタスク: `- [ ]` → `- [x]`
- 未完了のタスク: `- [ ]` のまま

**Editツールを使用**して、該当フェーズのセクションを更新してください。

### 5. レビュー判定への反映

- **すべてのタスクが完了**（全て `[x]`）: PASS または PASS_WITH_SUGGESTIONS
- **未完了タスクがある**（`[ ]` が残っている）: FAIL
  - レビューフィードバックに未完了タスクをリストアップ
  - 具体的に何が不足しているか説明

**例（FAIL時のフィードバック）**:
```
## Planning Phaseチェックリスト照合結果: FAIL

以下のタスクが未完了です：

- [ ] Task 6-2: 統合テストの実行
  - 不足: 統合テストが実行されていません
- [ ] Task 6-3: パフォーマンステストの実行
  - 不足: パフォーマンステスト結果が記録されていません

これらのタスクを完了してから再提出してください。
```

## レビュー姿勢

このレビューは「**80点で十分**」の原則に基づいて実施してください：

1. **完璧ではなく、十分を目指す**
   - すべてのテストが成功する必要はない
   - 主要なテストケースが成功していれば合格
   - エッジケースの失敗は改善提案として記載

2. **ブロッカーと改善提案を明確に区別**
   - ブロッカー: 次フェーズ（ドキュメント作成）に進めない重大な問題
   - 改善提案: 次フェーズに進めるが、改善が望ましい事項

3. **実用的でバランスの取れた判断**
   - プロジェクトを前に進めることを最優先
   - クリティカルな機能が動作していれば合格

4. **建設的なフィードバック**
   - テスト失敗を責めない
   - 具体的な改善案を提示

## レビュー観点

### 1. テスト実行の確認（最重要）

- テストが実際に実行されたか
- テスト実行コマンドが記録されているか
- テスト出力が記録されているか

### 2. 主要テストケースの成功

- クリティカルパスのテストが成功しているか
- 正常系のテストが成功しているか
- 基本的な機能が動作しているか

### 3. 失敗したテストの分析

- 失敗したテストがある場合、原因が分析されているか
- 対処方針が明記されているか
- 失敗の重大度が評価されているか

### 4. テスト範囲

- テストシナリオでカバーすべき範囲がテストされているか
- 主要な機能がテストに含まれているか

## ブロッカー（BLOCKER）と改善提案（SUGGESTION）の区別

### ブロッカー（BLOCKER）: 次フェーズに進めない重大な問題

**ブロッカーの例**:
- テストが全く実行されていない
- すべてのテストが失敗している
- クリティカルな機能のテストが失敗している
- テスト失敗の原因が全く分析されていない

### 改善提案（SUGGESTION）: 次フェーズに進めるが、改善が望ましい事項

**改善提案の例**:
- エッジケースのテスト失敗
- 一部の非クリティカルな機能のテスト失敗
- テストカバレッジの拡大
- テスト失敗の追加調査

## 出力フォーマット

以下の形式で出力してください：

```markdown
## 品質ゲート評価

- [x/  ] **テストが実行されている**: PASS/FAIL - （コメント）
- [x/  ] **主要なテストケースが成功している**: PASS/FAIL - （コメント）
- [x/  ] **失敗したテストは分析されている**: PASS/FAIL - （コメント）

## 詳細レビュー

### 1. テスト実行の確認

**良好な点**:
- （具体的な良い点）

**懸念点**:
- （懸念があれば記載）

### 2. 主要テストケースの成功

**良好な点**:
- （具体的な良い点）

**懸念点**:
- （懸念があれば記載）

### 3. 失敗したテストの分析

**良好な点**:
- （具体的な良い点）

**改善の余地**:
- （改善提案があれば記載）

### 4. テスト範囲

**良好な点**:
- （具体的な良い点）

**改善の余地**:
- （改善提案があれば記載）

## ブロッカー（BLOCKER）

**次フェーズに進めない重大な問題**

（ブロッカーがある場合のみ記載）
1. **（ブロッカー1のタイトル）**
   - 問題: （具体的な問題）
   - 影響: （次フェーズにどう影響するか）
   - 対策: （どう修正すべきか - Phase 4に戻る必要があるか）

## 改善提案（SUGGESTION）

**次フェーズに進めるが、改善が望ましい事項**

（改善提案がある場合のみ記載）
1. **（提案1のタイトル）**
   - 現状: （現在の状態）
   - 提案: （こうすればより良い）
   - 効果: （改善による効果）

## 総合評価

（テスト結果全体の総合的な評価）

**主な強み**:
- （良い点をまとめる）

**主な改善提案**:
- （改善提案をまとめる）

（総括コメント）

---
**判定: PASS / PASS_WITH_SUGGESTIONS / FAIL**
```

## レビュー実施

上記フォーマットに従って、テスト結果のクリティカルシンキングレビューを実施してください。

## ⚠️ 重要: 判定の出力は必須

**レビュー結果の最後に、必ず以下のいずれかの形式で判定を出力してください：**

```
---
**判定: PASS**
```

または

```
---
**判定: PASS_WITH_SUGGESTIONS**
```

または

```
---
**判定: FAIL**
```

**この判定がないと、レビュー結果が正しく処理されません。必ず3つのいずれかの判定を、上記の正確な形式で明示的に出力してください。**
