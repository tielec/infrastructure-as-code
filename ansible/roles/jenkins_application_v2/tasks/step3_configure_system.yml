---
# Step 3: システム設定とクレデンシャル（冪等）

# 必要な設定情報をSSMから取得
- name: Get configuration parameters from SSM
  block:
    - name: Get EC2 Fleet ID
      ansible.builtin.include_role:
        name: ssm_parameter_store
        tasks_from: get_parameter
      vars:
        parameter_name: "/jenkins-infra/{{ env_name }}/agent/spotFleetRequestId"
        store_as: "ec2_fleet_id"
        default_value: ""

    - name: Get Workterminal Host IP
      ansible.builtin.include_role:
        name: ssm_parameter_store
        tasks_from: get_parameter
      vars:
        parameter_name: "/bootstrap/workterminal/public-ip"
        store_as: "workterminal_host"
        default_value: ""

    - name: Get ALB DNS name
      ansible.builtin.include_role:
        name: ssm_parameter_store
        tasks_from: get_parameter
      vars:
        parameter_name: "/jenkins-infra/{{ env_name }}/loadbalancer/alb-dns"
        store_as: "alb_dns_name"
        default_value: "localhost:8080"

    - name: Get EFS File System ID
      ansible.builtin.include_role:
        name: ssm_parameter_store
        tasks_from: get_parameter
      vars:
        parameter_name: "/jenkins-infra/{{ env_name }}/storage/efs-file-system-id"
        store_as: "efs_file_system_id"

# 環境変数をSSMパラメータに設定（スクリプトで使用）
- name: Set environment variables in SSM
  ansible.builtin.include_role:
    name: ssm_parameter_store
    tasks_from: put_parameter
  vars:
    parameter_name: "/jenkins-infra/{{ env_name }}/application/jenkins-url"
    parameter_value: "http://{{ alb_dns_name }}/"
    parameter_type: "String"
    parameter_description: "Jenkins URL"

# JCasC設定を適用（セキュリティ以外）
- name: Apply JCasC system configuration via SSM
  ansible.builtin.include_tasks: ../jenkins_application/tasks/execute_ssm_command.yml
  vars:
    ssm_document_name: "{{ execute_script_document_name }}"
    ssm_parameters: "ScriptPath=scripts/jenkins/v2/configure-system.sh"
    ssm_comment: "Configuring Jenkins system settings"
    instance_id: "{{ jenkins_instance_id }}"
  register: system_config_result

- name: Check if configuration changed
  ansible.builtin.set_fact:
    config_changed: "{{ 'CONFIG_CHANGED' in system_config_result.stdout }}"

# クレデンシャルの設定
- name: Setup credentials via SSM
  ansible.builtin.include_tasks: ../jenkins_application/tasks/execute_ssm_command.yml
  vars:
    ssm_document_name: "{{ execute_script_document_name }}"
    ssm_parameters: "ScriptPath=scripts/jenkins/v2/setup-credentials.sh"
    ssm_comment: "Setting up Jenkins credentials"
    instance_id: "{{ jenkins_instance_id }}"
  register: credentials_result

- name: Check if credentials were created
  ansible.builtin.set_fact:
    credentials_changed: "{{ 'CREDENTIALS_CHANGED' in credentials_result.stdout }}"

# 管理者ユーザーの作成（セキュリティ無効状態で作成）
- name: Create admin user via SSM
  ansible.builtin.include_tasks: ../jenkins_application/tasks/execute_ssm_command.yml
  vars:
    ssm_document_name: "{{ execute_script_document_name }}"
    ssm_parameters: "ScriptPath=scripts/jenkins/v2/create-admin-user.sh"
    ssm_comment: "Creating admin user"
    instance_id: "{{ jenkins_instance_id }}"
  register: admin_user_result

- name: Parse admin user creation result
  ansible.builtin.set_fact:
    admin_created: "{{ 'ADMIN_CREATED' in admin_user_result.stdout }}"
    admin_password: "{{ admin_user_result.stdout | regex_search('ADMIN_PASSWORD: (.+)', '\\1') | first | default('') }}"

# 管理者パスワードをSSMに保存（新規作成時のみ）
- name: Store admin password in SSM
  when: admin_created and admin_password != ''
  ansible.builtin.include_role:
    name: ssm_parameter_store
    tasks_from: put_parameter
  vars:
    parameter_name: "/jenkins-infra/{{ env_name }}/credentials/admin-password"
    parameter_value: "{{ admin_password }}"
    parameter_type: "SecureString"
    parameter_description: "Jenkins admin password"

# 設定変更があった場合のみ再起動
- name: Restart Jenkins if configuration changed
  when: config_changed or credentials_changed
  block:
    - name: Restart Jenkins
      ansible.builtin.include_tasks: ../jenkins_application/tasks/execute_ssm_command.yml
      vars:
        ssm_document_name: "{{ execute_script_document_name }}"
        ssm_parameters: "ScriptPath=scripts/jenkins/v2/restart-jenkins.sh"
        ssm_comment: "Restarting Jenkins after configuration"
        instance_id: "{{ jenkins_instance_id }}"

# フェーズを更新
- name: Update phase to system_configured
  ansible.builtin.include_role:
    name: ssm_parameter_store
    tasks_from: put_parameter
  vars:
    parameter_name: "/jenkins-infra/{{ env_name }}/application/phase"
    parameter_value: "system_configured"
    parameter_type: "String"
    parameter_description: "Jenkins application configuration phase"

- name: Step 3 completed
  ansible.builtin.debug:
    msg: |
      Step 3 - System configuration completed
      Admin user: {{ 'Created' if admin_created else 'Already exists' }}
      Configuration: {{ 'Updated' if config_changed else 'No changes' }}
      Credentials: {{ 'Updated' if credentials_changed else 'No changes' }}