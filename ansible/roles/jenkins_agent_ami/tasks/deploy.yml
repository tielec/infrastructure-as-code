---
# Jenkins Agent AMI Builder deployment tasks

- name: Display deployment start
  ansible.builtin.debug:
    msg: "Deploying Jenkins Agent AMI Builder for {{ env_name }} environment"

- name: Deploy Agent AMI Builder Infrastructure with Pulumi
  block:
    - name: Set deployment variables
      ansible.builtin.set_fact:
        pulumi_dir: "{{ pulumi_path }}/jenkins-agent-ami"
        env: "{{ env_name }}"
    
    
    # Pulumi stack init
    - name: Initialize Pulumi stack for Jenkins Agent AMI
      ansible.builtin.include_role:
        name: pulumi_helper
        tasks_from: init_stack
      vars:
        pulumi_project_path: "{{ pulumi_dir }}"
        stack_name: "{{ env }}"
    
    # Pulumi configuration
    - name: Configure agent AMI stack - AWS region
      ansible.builtin.include_role:
        name: pulumi_helper
        tasks_from: set_config
      vars:
        pulumi_project_path: "{{ pulumi_dir }}"
        config_key: "aws:region"
        config_value: "{{ aws_region_name }}"
    
    
    # Pulumi preview
    - name: Preview agent AMI deployment
      ansible.builtin.include_role:
        name: pulumi_helper
        tasks_from: preview
      vars:
        pulumi_project_path: "{{ pulumi_dir }}"
    
    # Pulumi deploy
    - name: Deploy Jenkins Agent AMI Builder infrastructure
      ansible.builtin.include_role:
        name: pulumi_helper
        tasks_from: deploy
      vars:
        pulumi_project_path: "{{ pulumi_dir }}"
    
    # Get pipeline ARNs for triggering (only if needed)
    - name: Get pipeline ARNs from SSM Parameter Store
      when: (trigger_ami_build | default(true)) | bool
      block:
        - name: Get pipeline x86 ARN from SSM Parameter Store
          ansible.builtin.include_role:
            name: ssm_parameter_store
            tasks_from: get_parameter
          vars:
            parameter_name: "/jenkins-infra/{{ env }}/agent-ami/pipeline-x86-arn"
            store_as: "pipeline_x86_arn"

        - name: Get pipeline ARM ARN from SSM Parameter Store
          ansible.builtin.include_role:
            name: ssm_parameter_store
            tasks_from: get_parameter
          vars:
            parameter_name: "/jenkins-infra/{{ env }}/agent-ami/pipeline-arm-arn"
            store_as: "pipeline_arm_arn"
    
    - name: Display deployment summary
      ansible.builtin.debug:
        msg: "Jenkins Agent AMI Builder deployed successfully for {{ env }} environment"
    
    # パイプラインを自動トリガー（デフォルトで有効）
    - name: Trigger Image Builder pipelines
      when: (trigger_ami_build | default(true)) | bool
      block:
        - name: Start x86_64 pipeline execution
          when: pipeline_x86_arn is defined
          ansible.builtin.include_role:
            name: aws_cli_helper
            tasks_from: execute
          vars:
            aws_command: "aws imagebuilder start-image-pipeline-execution --image-pipeline-arn {{ pipeline_x86_arn }}"
            operation_name: "Start x86_64 Image Builder pipeline"
            parse_output: true
        
        - name: Start ARM64 pipeline execution
          when: pipeline_arm_arn is defined
          ansible.builtin.include_role:
            name: aws_cli_helper
            tasks_from: execute
          vars:
            aws_command: "aws imagebuilder start-image-pipeline-execution --image-pipeline-arn {{ pipeline_arm_arn }}"
            operation_name: "Start ARM64 Image Builder pipeline"
            parse_output: true
        
        - name: Display pipeline trigger status
          ansible.builtin.debug:
            msg: "Image Builder pipelines triggered. AMI builds typically take 30-45 minutes."
    
    # SSMパラメータの更新（最新のAMI IDを登録）
    - name: Update SSM parameters with built AMI IDs
      when: (update_ssm_with_ami | default(true)) | bool
      ansible.builtin.include_tasks: update_ssm_parameters.yml
    
    # 古いAMIのクリーンアップ
    - name: Clean up old AMIs
      when: (cleanup_old_amis | default(true)) | bool
      block:
        - name: Include AMI cleanup tasks
          ansible.builtin.include_tasks: cleanup_amis.yml
          vars:
            retention_count: 1  # 保持するAMIの数（最新1つを保持）
            ami_prefix: "{{ project_name }}-agent"
    
  
  rescue:
    - name: Display deployment failure message
      ansible.builtin.debug:
        msg: "ERROR: Agent AMI Builder deployment failed. See error details above."
    
    - name: Fail the playbook
      ansible.builtin.fail:
        msg: "Agent AMI Builder deployment failed"