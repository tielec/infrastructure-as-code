---
# Jenkins設定タスク

- name: Display jenkins configuration information
  ansible.builtin.debug:
    msg: |
      Configuring Jenkins Controller:
      - Project: {{ project_name }}
      - Config Pulumi Project: {{ config_project_name }}
      - Environment: {{ env_name }}
      - Jenkins Instance ID: {{ jenkins_instance_id }}
      - Jenkins Color: {{ jenkins_color }}

# ファイル権限設定
- name: Ensure aws-env.sh has execute permissions
  ansible.builtin.file:
    path: "{{ scripts_dir }}/aws-env.sh"
    mode: '0755'
  register: aws_env_script_permission
  
- name: Report permission update
  ansible.builtin.debug:
    msg: "aws-env.sh スクリプトに実行権限を付与しました"
  when: aws_env_script_permission.changed

# 設定Pulumiスタックのデプロイ
- name: Deploy Jenkins Configuration with Pulumi
  block:
    # Pulumiヘルパータスクを呼び出す
    - name: Initialize config stack
      ansible.builtin.include_role:
        name: pulumi_helper
        tasks_from: init_stack
      vars:
        pulumi_project_path: "{{ pulumi_path }}/jenkins-config"
        stack_name: "{{ env_name }}"
    
    - name: Configure config stack
      ansible.builtin.shell: |
        cd {{ pulumi_path }}/jenkins-config
        source {{ scripts_dir }}/aws-env.sh 
        eval $({{ scripts_dir }}/aws-env.sh)
        
        sudo -E /root/.pulumi/bin/pulumi config set aws:region {{ aws_region_name }}
        sudo -E /root/.pulumi/bin/pulumi config set {{ config_project_name }}:projectName {{ project_name }}
        sudo -E /root/.pulumi/bin/pulumi config set {{ config_project_name }}:jenkinsVersion {{ jenkins_version }}
        sudo -E /root/.pulumi/bin/pulumi config set {{ config_project_name }}:recoveryMode {{ recovery_mode | string | lower }}
      register: pulumi_config_result
      changed_when: pulumi_config_result.rc == 0
    
    # Pulumiプレビュー
    - name: Preview config deployment
      ansible.builtin.include_role:
        name: pulumi_helper
        tasks_from: preview
      vars:
        pulumi_project_path: "{{ pulumi_path }}/jenkins-config"
    
    # Pulumiデプロイ
    - name: Deploy config stack
      ansible.builtin.include_role:
        name: pulumi_helper
        tasks_from: deploy
      vars:
        pulumi_project_path: "{{ pulumi_path }}/jenkins-config"
    
    # デプロイ後に少し待機してスタックが完全に更新されるのを待つ
    - name: Wait for stack outputs to be available
      ansible.builtin.pause:
        seconds: 10
      when: not ansible_check_mode
    
    # SSMドキュメント名の取得
    - name: Get SSM document names
      ansible.builtin.include_role:
        name: pulumi_helper
        tasks_from: get_outputs
      vars:
        pulumi_project_path: "{{ pulumi_path }}/jenkins-config"
        output_name: "ssmDocuments"
        mock_output: '{\"install\":\"mock-install-doc\",\"mountEfs\":\"mock-mount-doc\",\"configure\":\"mock-config-doc\",\"startup\":\"mock-startup-doc\"}'
    
    - name: Set SSM document names
      ansible.builtin.set_fact:
        ssm_documents: "{{ stack_output_result.stdout | from_json }}"
      
    - name: Display SSM document names
      ansible.builtin.debug:
        msg: |
          SSM Documents available:
          - Install: {{ ssm_documents.install }}
          - Mount EFS: {{ ssm_documents.mountEfs }}
          - Configure: {{ ssm_documents.configure }}
          - Startup: {{ ssm_documents.startup }}
  
  rescue:
    - name: Display error on config deployment
      ansible.builtin.debug:
        msg: "Failed to deploy Jenkins configuration resources. See error details above."
      
    - name: Fail the playbook
      ansible.builtin.fail:
        msg: "Jenkins configuration deployment failed."

# インスタンスの設定処理
- name: Wait for SSM agent to be operational
  ansible.builtin.pause:
    seconds: 30
  when: not ansible_check_mode

- name: Execute SSM commands to setup Jenkins
  block:
    # Gitリポジトリの更新を最初に実行
    - name: Run Git repository update SSM document
      ansible.builtin.shell: |
        cd {{ pulumi_path }}/jenkins-config
        source {{ scripts_dir }}/aws-env.sh
        eval $({{ scripts_dir }}/aws-env.sh)
        
        aws ssm send-command \
          --region {{ aws_region_name }} \
          --document-name "{{ ssm_documents.updateRepo }}" \
          --targets "Key=instanceids,Values={{ jenkins_instance_id }}" \
          --parameters "ProjectName={{ project_name }},Environment={{ env_name }},GitBranch={{ git_branch }},GitRepo={{ git_repo }}" \
          --comment "Updating Git repository" \
          --output json
      register: ssm_update_repo_result
      changed_when: true
      when: not ansible_check_mode
      
    - name: Wait for Git repository update to complete
      ansible.builtin.pause:
        seconds: 15
      when: not ansible_check_mode

    - name: Run EFS mount SSM document
      ansible.builtin.shell: |
        cd {{ pulumi_path }}/jenkins-config
        source {{ scripts_dir }}/aws-env.sh
        eval $({{ scripts_dir }}/aws-env.sh)
        
        aws ssm send-command \
          --region {{ aws_region_name }} \
          --document-name "{{ ssm_documents.mountEfs }}" \
          --targets "Key=instanceids,Values={{ jenkins_instance_id }}" \
          --parameters "ProjectName={{ project_name }},Environment={{ env_name }},EfsId={{ efs_file_system_id }},Region={{ aws_region_name }}" \
          --comment "Mounting EFS" \
          --output json
      register: ssm_mount_result
      changed_when: true
      when: not ansible_check_mode
      
    - name: Wait for EFS mount to complete
      ansible.builtin.pause:
        seconds: 30
      when: not ansible_check_mode
      
    - name: Run Jenkins install SSM document
      ansible.builtin.shell: |
        cd {{ pulumi_path }}/jenkins-config
        source {{ scripts_dir }}/aws-env.sh
        eval $({{ scripts_dir }}/aws-env.sh)
        
        aws ssm send-command \
          --region {{ aws_region_name }} \
          --document-name "{{ ssm_documents.install }}" \
          --targets "Key=instanceids,Values={{ jenkins_instance_id }}" \
          --parameters "ProjectName={{ project_name }},Environment={{ env_name }},JenkinsVersion={{ jenkins_version }},JenkinsColor={{ jenkins_color }}" \
          --comment "Installing Jenkins" \
          --output json
      register: ssm_install_result
      changed_when: true
      when: not ansible_check_mode
      
    - name: Wait for Jenkins install to complete
      ansible.builtin.pause:
        seconds: 30
      when: not ansible_check_mode
      
    - name: Run Jenkins configure SSM document
      ansible.builtin.shell: |
        cd {{ pulumi_path }}/jenkins-config
        source {{ scripts_dir }}/aws-env.sh
        eval $({{ scripts_dir }}/aws-env.sh)
        
        aws ssm send-command \
          --region {{ aws_region_name }} \
          --document-name "{{ ssm_documents.configure }}" \
          --targets "Key=instanceids,Values={{ jenkins_instance_id }}" \
          --parameters "ProjectName={{ project_name }},Environment={{ env_name }},JenkinsMode={{ recovery_mode | ternary('recovery', 'normal') }},JenkinsColor={{ jenkins_color }}" \
          --comment "Configuring Jenkins" \
          --output json
      register: ssm_configure_result
      changed_when: true
      when: not ansible_check_mode
      
    - name: Wait for Jenkins configuration to complete
      ansible.builtin.pause:
        seconds: 30
      when: not ansible_check_mode
      
    - name: Run Jenkins startup SSM document
      ansible.builtin.shell: |
        cd {{ pulumi_path }}/jenkins-config
        source {{ scripts_dir }}/aws-env.sh
        eval $({{ scripts_dir }}/aws-env.sh)
        
        aws ssm send-command \
          --region {{ aws_region_name }} \
          --document-name "{{ ssm_documents.startup }}" \
          --targets "Key=instanceids,Values={{ jenkins_instance_id }}" \
          --parameters "ProjectName={{ project_name }},Environment={{ env_name }},JenkinsColor={{ jenkins_color }}" \
          --comment "Starting Jenkins" \
          --output json
      register: ssm_startup_result
      changed_when: true
      when: not ansible_check_mode
      
    - name: Display SSM execution status
      ansible.builtin.debug:
        msg: "Jenkins setup sequence executed via SSM commands"
      when: not ansible_check_mode
  
  # これらの処理はチェックモードでは実行しない
  when: 
    - not ansible_check_mode
    - jenkins_instance_id is defined and jenkins_instance_id != "mock-jenkins-instance-id"
  
  rescue:
    - name: Display SSM execution error
      ansible.builtin.debug:
        msg: "Failed to execute Jenkins setup via SSM. Check AWS console for details."
