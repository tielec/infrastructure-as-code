---
# アプリケーション設定デプロイタスク

- name: Display application deployment information
  ansible.builtin.debug:
    msg: |
      Deploying Jenkins Application Configuration:
      - Project: {{ project_name }}
      - Application Pulumi Project: {{ application_project_name }}
      - Environment: {{ env_name }}
      - Jenkins Version: {{ jenkins_version }}
      - Install Plugins: {{ install_plugins }}
      - Update Repository: {{ update_repo }}

# ファイル権限設定
- name: Ensure aws-env.sh has execute permissions
  ansible.builtin.file:
    path: "{{ scripts_dir }}/aws/aws-env.sh"
    mode: '0755'
  register: aws_env_script_permission
  no_log: true

# Pulumiデプロイ
- name: Deploy Application Configuration with Pulumi
  block:
    # Pulumiヘルパータスクを呼び出す
    - name: Initialize application stack
      ansible.builtin.include_role:
        name: pulumi_helper
        tasks_from: init_stack
      vars:
        pulumi_project_path: "{{ pulumi_path }}/jenkins-application"
        stack_name: "{{ env_name }}"
    
    - name: Configure application stack - AWS region
      ansible.builtin.include_role:
        name: pulumi_helper
        tasks_from: set_config
      vars:
        pulumi_project_path: "{{ pulumi_path }}/jenkins-application"
        config_key: "aws:region"
        config_value: "{{ aws_region_name }}"
    
    # SSMパラメータの確認
    - name: Get project name from SSM Parameter Store
      ansible.builtin.include_role:
        name: ssm_parameter_store
        tasks_from: get_parameter
      vars:
        parameter_name: "/jenkins-infra/{{ env_name }}/config/project-name"
        store_as: "ssm_project_name"
    
    - name: Get Jenkins version from SSM Parameter Store
      ansible.builtin.include_role:
        name: ssm_parameter_store
        tasks_from: get_parameter
      vars:
        parameter_name: "/jenkins-infra/{{ env_name }}/config/jenkins-version"
        store_as: "ssm_jenkins_version"
    
    - name: Display configuration from SSM
      ansible.builtin.debug:
        msg: |
          Using configuration from SSM:
          - Project Name: {{ ssm_project_name }}
          - Jenkins Version: {{ ssm_jenkins_version }}
    
    # Pulumiプレビュー
    - name: Preview application deployment
      ansible.builtin.include_role:
        name: pulumi_helper
        tasks_from: preview
      vars:
        pulumi_project_path: "{{ pulumi_path }}/jenkins-application"
    
    # Pulumiデプロイ
    - name: Deploy application stack
      ansible.builtin.include_role:
        name: pulumi_helper
        tasks_from: deploy
      vars:
        pulumi_project_path: "{{ pulumi_path }}/jenkins-application"
    
    # SSMドキュメント名の取得（SSMパラメータから）
    - name: Get execute script document name from SSM Parameter Store
      ansible.builtin.include_role:
        name: ssm_parameter_store
        tasks_from: get_parameter
      vars:
        parameter_name: "/jenkins-infra/{{ env_name }}/application/execute-script-document-name"
        store_as: "execute_script_document_name"
    
    - name: Get restart document name from SSM Parameter Store
      ansible.builtin.include_role:
        name: ssm_parameter_store
        tasks_from: get_parameter
      vars:
        parameter_name: "/jenkins-infra/{{ env_name }}/application/restart-document-name"
        store_as: "restart_document_name"
    
    - name: Set SSM document names
      ansible.builtin.set_fact:
        ssm_documents:
          executeScript: "{{ execute_script_document_name }}"
          restart: "{{ restart_document_name }}"
    
    # jenkins_configのSSMドキュメントも取得（SSMパラメータから）
    - name: Get config update repo document name from SSM Parameter Store
      ansible.builtin.include_role:
        name: ssm_parameter_store
        tasks_from: get_parameter
      vars:
        parameter_name: "/jenkins-infra/{{ env_name }}/config/update-repo-document-name"
        store_as: "config_update_repo_document_name"
    
    - name: Set config SSM document names
      ansible.builtin.set_fact:
        config_ssm_documents:
          updateRepo: "{{ config_update_repo_document_name }}"
      
    - name: Display SSM document names
      ansible.builtin.debug:
        msg: |
          SSM Documents available:
          - Execute Script: {{ ssm_documents.executeScript }}
          - Restart: {{ ssm_documents.restart }}
          - Update Repo: {{ config_ssm_documents.updateRepo }}
  
  rescue:
    - name: Display error on application deployment
      ansible.builtin.debug:
        msg: "Failed to deploy Jenkins application configuration. See error details above."
      
    - name: Fail the playbook
      ansible.builtin.fail:
        msg: "Jenkins application deployment failed."

# Jenkinsインスタンスの取得（Parameter Storeから）
- name: Get active Jenkins instance
  block:
    - name: Get Jenkins instance ID from SSM Parameter Store
      ansible.builtin.include_role:
        name: ssm_parameter_store
        tasks_from: get_parameter
      vars:
        parameter_name: "/jenkins-infra/{{ env_name }}/controller/instance-id"
        store_as: "jenkins_instance_id"
    
    - name: Verify Jenkins instance ID
      ansible.builtin.fail:
        msg: "Invalid Jenkins instance ID format: {{ jenkins_instance_id }}"
      when: not (jenkins_instance_id | regex_search('^i-[a-f0-9]+$'))
    
    - name: Display Jenkins instance ID
      ansible.builtin.debug:
        msg: "Using Jenkins Instance ID: {{ jenkins_instance_id }}"

# アプリケーション設定の実行
- name: Execute application configuration tasks
  block:
    # 0. Gitリポジトリ更新（既存のSSMドキュメントを使用）
    - name: Update Git repository
      when: update_repo | bool
      block:
        - name: Execute Git repository update
          ansible.builtin.include_tasks: execute_ssm_command.yml
          vars:
            ssm_document_name: "{{ config_ssm_documents.updateRepo }}"
            ssm_parameters: "ProjectName={{ project_name }},Environment={{ env_name }},GitBranch={{ git_branch }},GitRepo={{ git_repo }}"
            ssm_comment: "Updating Git repository"
            instance_id: "{{ jenkins_instance_id }}"
    
    # 1. Jenkinsバージョン更新
    - name: Update Jenkins version if required
      when: jenkins_version != 'latest' or update_jenkins | default(false) | bool
      block:
        - name: Execute Jenkins version update
          ansible.builtin.include_tasks: execute_ssm_command.yml
          vars:
            ssm_document_name: "{{ ssm_documents.executeScript }}"
            ssm_parameters: "ScriptPath=scripts/jenkins/shell/application-update-version.sh"
            ssm_comment: "Updating Jenkins version"
            instance_id: "{{ jenkins_instance_id }}"
    
    # 2. プラグインインストール
    - name: Install/Update Jenkins plugins
      when: install_plugins | bool
      block:
        - name: Execute plugin installation
          ansible.builtin.include_tasks: execute_ssm_command.yml
          vars:
            ssm_document_name: "{{ ssm_documents.executeScript }}"
            ssm_parameters: "ScriptPath=scripts/jenkins/shell/application-install-plugins.sh"
            ssm_comment: "Installing Jenkins plugins"
            instance_id: "{{ jenkins_instance_id }}"
        
        # プラグインインストール後にJenkinsを再起動
        - name: Restart Jenkins after plugin installation
          ansible.builtin.include_tasks: execute_ssm_command.yml
          vars:
            ssm_document_name: "{{ ssm_documents.restart }}"
            ssm_parameters: ""  # 空文字列に設定
            ssm_comment: "Restarting Jenkins after plugin installation"
            instance_id: "{{ jenkins_instance_id }}"
    
    # 3. CLIユーザーとクレデンシャル設定（統合版）
    - name: Setup CLI user and credentials
      when: setup_cli_user | default(true) | bool
      block:
        - name: Create CLI user and setup credentials
          ansible.builtin.include_tasks: execute_ssm_command.yml
          vars:
            ssm_document_name: "{{ ssm_documents.executeScript }}"
            ssm_parameters: "ScriptPath=scripts/jenkins/shell/application-setup-cli-user-and-credentials.sh"
            ssm_comment: "Setting up CLI user and credentials"
            instance_id: "{{ jenkins_instance_id }}"
    
    # 4. SSHクレデンシャルの設定（パラメータストアから）
    - name: Setup SSH credentials from Parameter Store
      when: setup_ssh_credentials | default(true) | bool
      block:
        - name: Execute SSH credentials setup
          ansible.builtin.include_tasks: execute_ssm_command.yml
          vars:
            ssm_document_name: "{{ ssm_documents.executeScript }}"
            ssm_parameters: "ScriptPath=scripts/jenkins/shell/application-setup-ssh-credentials.sh"
            ssm_comment: "Setting up SSH credentials from Parameter Store"
            instance_id: "{{ jenkins_instance_id }}"
    
    # 5. JCasCによる統合設定（EC2 Fleet、Shared Library、セキュリティ、Workterminalノード）
    - name: Configure Jenkins using JCasC
      when: configure_with_casc | default(true) | bool
      block:
        - name: Execute JCasC configuration
          ansible.builtin.include_tasks: execute_ssm_command.yml
          vars:
            ssm_document_name: "{{ ssm_documents.executeScript }}"
            ssm_parameters: "ScriptPath=scripts/jenkins/shell/application-configure-with-casc.sh"
            ssm_comment: "Configuring Jenkins with JCasC"
            instance_id: "{{ jenkins_instance_id }}"
    
    # 6. シードジョブの作成（JCasC後に実行）
    - name: Create seed job
      when: create_seed_job | default(true) | bool
      block:
        - name: Execute seed job creation
          ansible.builtin.include_tasks: execute_ssm_command.yml
          vars:
            ssm_document_name: "{{ ssm_documents.executeScript }}"
            ssm_parameters: "ScriptPath=scripts/jenkins/shell/application-create-seed-job.sh"
            ssm_comment: "Creating Jenkins seed job"
            instance_id: "{{ jenkins_instance_id }}"
    
    # 7. Jenkins再起動
    - name: Restart Jenkins if required
      when: restart_jenkins | bool
      block:
        - name: Execute Jenkins restart
          ansible.builtin.include_tasks: execute_ssm_command.yml
          vars:
            ssm_document_name: "{{ ssm_documents.restart }}"
            ssm_parameters: ""  # 空文字列に設定
            ssm_comment: "Restarting Jenkins"
            instance_id: "{{ jenkins_instance_id }}"

# 設定完了を示す変数設定
- name: Set application deployment status
  ansible.builtin.set_fact:
    application_deployed: true

# 設定結果のサマリー表示
- name: Display application deployment summary
  ansible.builtin.debug:
    msg: |
      Jenkins Application Configuration Summary:
      - Repository Updated: {{ update_repo }}
      - Jenkins Version: {{ jenkins_version }}
      - Plugins Installed: {{ install_plugins }}
      - CLI User Setup: {{ setup_cli_user | default(true) }}
      - SSH Credentials Setup: {{ setup_ssh_credentials | default(true) }}
      - JCasC Configuration Applied: {{ configure_with_casc | default(true) }}
      - Seed Job Created: {{ create_seed_job | default(true) }}
      - Jenkins Restarted: {{ restart_jenkins }}
      - Configuration Status: {{ application_deployed | ternary('Success', 'Failed') }}
