---
# SSMコマンド実行用の共通タスク

- name: Execute SSM command - {{ ssm_comment }}
  ansible.builtin.shell: |
    eval $({{ scripts_dir }}/aws/aws-env.sh)
    aws ssm send-command \
      --region {{ aws_region }} \
      --document-name "{{ ssm_document_name }}" \
      --targets "Key=instanceids,Values={{ instance_id }}" \
      {% if ssm_parameters | default('') %}--parameters "{{ ssm_parameters }}" {% endif %}\
      --comment "{{ ssm_comment }}" \
      --output json
  register: ssm_command
  changed_when: true

- name: Parse command response
  ansible.builtin.set_fact:
    command_data: "{{ ssm_command.stdout | from_json }}"
  when: 
    - ssm_command.rc == 0
    - ssm_command.stdout | length > 0

- name: Wait for command completion
  ansible.builtin.shell: |
    eval $({{ scripts_dir }}/aws/aws-env.sh)
    aws ssm list-commands \
      --region {{ aws_region }} \
      --command-id "{{ command_data.Command.CommandId }}" \
      --query "Commands[0].Status" \
      --output text
  register: command_status_result
  until: command_status_result.stdout in ['Success', 'Failed', 'Cancelled', 'TimedOut']
  retries: 60
  delay: 10
  when: command_data is defined

- name: Get command output
  ansible.builtin.shell: |
    eval $({{ scripts_dir }}/aws/aws-env.sh)
    aws ssm get-command-invocation \
      --region {{ aws_region }} \
      --command-id "{{ command_data.Command.CommandId }}" \
      --instance-id "{{ instance_id }}" \
      --output json
  register: command_output_raw
  when: command_data is defined

- name: Parse command output
  ansible.builtin.set_fact:
    command_output: "{{ command_output_raw.stdout | from_json }}"
  when: 
    - command_output_raw is defined
    - command_output_raw.stdout is defined

- name: Display command output
  ansible.builtin.debug:
    msg: |
      === SSM Command Output for {{ ssm_comment }} ===
      Status: {{ command_status_result.stdout }}
      
      Standard Output:
      {{ command_output.StandardOutputContent | default('No output') }}
      
      {% if command_output.StandardErrorContent | default('') %}
      Standard Error:
      {{ command_output.StandardErrorContent }}
      {% endif %}
  when: command_output is defined

- name: Check command result
  ansible.builtin.fail:
    msg: |
      SSM command failed with status: {{ command_status_result.stdout }}
      Error output: {{ command_output.StandardErrorContent | default('No error output available') }}
  when: 
    - command_data is defined
    - command_status_result.stdout != 'Success'
