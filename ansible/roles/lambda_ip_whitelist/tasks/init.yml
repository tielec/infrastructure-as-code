---
# IP Whitelist初期化タスク

- name: Set secret name
  ansible.builtin.set_fact:
    secret_name: "{{ lambda_api.ip_whitelist.secret_name_pattern | replace('{environment}', env_name) }}"

- name: Display initialization information
  ansible.builtin.debug:
    msg: |
      Initializing IP Whitelist:
      - Environment: {{ env_name }}
      - Secret Name: {{ secret_name }}

- name: Ensure init script has execute permissions
  ansible.builtin.file:
    path: "{{ scripts_dir }}/init-ip-whitelist.sh"
    mode: '0755'
  when: use_init_script | default(false) | bool

- name: Check if secret already exists
  ansible.builtin.shell: |
    eval $({{ scripts_dir }}/aws/aws-env.sh)
    aws secretsmanager describe-secret \
      --secret-id {{ secret_name }} \
      --region {{ aws_region_name }} 2>/dev/null
  register: secret_check
  failed_when: false
  changed_when: false

- name: Create initial IP whitelist structure
  ansible.builtin.set_fact:
    initial_whitelist:
      version: "1.0"
      lastUpdated: "{{ ansible_date_time.iso8601 }}"
      clients: []

- name: Create secret if not exists
  ansible.builtin.shell: |
    eval $({{ scripts_dir }}/aws/aws-env.sh)
    aws secretsmanager create-secret \
      --name {{ secret_name }} \
      --description "IP Whitelist for Lambda API {{ env_name }} environment" \
      --secret-string '{{ initial_whitelist | to_json }}' \
      --region {{ aws_region_name }}
  when: secret_check.rc != 0
  register: secret_creation

- name: Display secret creation result
  ansible.builtin.debug:
    msg: "Secret created successfully: {{ secret_name }}"
  when: secret_creation is defined and secret_creation.changed

- name: Display secret already exists message
  ansible.builtin.debug:
    msg: "Secret already exists: {{ secret_name }}. Use 'list' operation to view current IPs."
  when: secret_check.rc == 0
