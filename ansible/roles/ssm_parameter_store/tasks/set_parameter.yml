---
# SSMパラメータを設定/更新するタスク

- name: Validate required variables
  ansible.builtin.assert:
    that:
      - parameter_name is defined
      - parameter_value is defined
    fail_msg: "Required variables 'parameter_name' and 'parameter_value' must be defined"

# パラメータタイプの決定
- name: Determine parameter type
  ansible.builtin.set_fact:
    parameter_type: >-
      {%- if parameter_type is defined -%}
        {{ parameter_type }}
      {%- elif is_secure | default(false) or (ssm_parameter_store_auto_secure and 
              parameter_name | lower | regex_search('(' + ssm_parameter_store_all_secure_keywords | join('|') + ')') is not none) -%}
        SecureString
      {%- else -%}
        String
      {%- endif -%}

- name: Set parameter
  block:
    # タグの準備
    - name: Prepare tags
      ansible.builtin.set_fact:
        tag_list: >-
          {%- set tag_items = [] -%}
          {%- for key, value in (tags | default({})).items() -%}
            {%- set _ = tag_items.append('Key=' + key + ',Value=' + value) -%}
          {%- endfor -%}
          {{ tag_items | join(' ') }}
      when: tags is defined

    - name: Create or update parameter using AWS CLI
      ansible.builtin.shell: |
        aws ssm put-parameter \
          --name "{{ parameter_name }}" \
          --value "{{ parameter_value }}" \
          --type "{{ parameter_type }}" \
          --region {{ ssm_parameter_store_region }} \
          {% if overwrite | default(true) %}--overwrite{% endif %} \
          {% if description is defined %}--description "{{ description | default('Managed by Ansible') }}"{% endif %} \
          {% if parameter_type == 'SecureString' and kms_key_id is defined %}--key-id "{{ kms_key_id }}"{% endif %} \
          {% if tier is defined %}--tier "{{ tier }}"{% endif %} \
          {% if tags is defined and tag_list %}--tags {{ tag_list }}{% endif %} \
          --output json
      register: set_result
      no_log: "{{ parameter_type == 'SecureString' }}"
      changed_when: true

    - name: Parse set result
      ansible.builtin.set_fact:
        set_response: "{{ set_result.stdout | from_json if set_result.stdout else {} }}"
      when: set_result.rc == 0

    - name: Set success status
      ansible.builtin.set_fact:
        ssm_operation_success: true
        ssm_parameter_version: "{{ set_response.Version | default(1) }}"
      when: set_result.rc == 0

    # キャッシュの更新
    - name: Update cache
      when: 
        - ssm_parameter_store_cache.enabled | bool
        - set_result.rc == 0
      ansible.builtin.set_fact:
        ssm_parameter_cache: >-
          {{
            ssm_parameter_cache | combine({
              parameter_name: parameter_value
            })
          }}
        ssm_parameter_cache_timestamps: >-
          {{
            ssm_parameter_cache_timestamps | combine({
              parameter_name: ansible_date_time.epoch | int
            })
          }}
      no_log: "{{ parameter_type == 'SecureString' }}"

  rescue:
    - name: Handle set failure
      ansible.builtin.set_fact:
        ssm_operation_error: "{{ set_result.stderr | default(set_result.stdout | default('Failed to set parameter')) }}"
        ssm_operation_success: false

# デバッグ出力
- name: Display operation result
  ansible.builtin.debug:
    msg: |
      Parameter: {{ parameter_name }}
      Type: {{ parameter_type }}
      Operation: {{ 'Success' if ssm_operation_success else 'Failed' }}
      Version: {{ ssm_parameter_version | default('Unknown') }}
      {% if not ssm_operation_success %}
      Error: {{ ssm_operation_error }}
      {% endif %}
  when: ssm_parameter_store_verbose
