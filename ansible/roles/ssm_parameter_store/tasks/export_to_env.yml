---
# SSMパラメータを環境変数としてエクスポートするタスク

- name: Validate prerequisites
  ansible.builtin.assert:
    that:
      - ssm_parameters is defined
      - ssm_parameters | length > 0
    fail_msg: "No parameters available to export. Run get_parameters tasks first."

# 環境変数マッピングの準備
- name: Prepare environment variable mappings
  when: ssm_env_mappings is defined
  block:
    - name: Process custom mappings
      ansible.builtin.set_fact:
        env_exports: {}

    - name: Build environment exports from mappings
      ansible.builtin.set_fact:
        env_exports: >-
          {{
            env_exports | combine({
              item.env_name: ssm_parameters[item.ssm_path] | default(item.default | default(''))
            })
          }}
      loop: "{{ ssm_env_mappings }}"
      when: 
        - item.ssm_path in ssm_parameters or not (item.required | default(false))
      no_log: "{{ item.secure | default(false) }}"

# 自動環境変数名の生成
- name: Auto-generate environment variable names
  when: ssm_env_mappings is not defined
  block:
    - name: Build environment exports
      ansible.builtin.set_fact:
        env_exports: >-
          {%- set exports = {} -%}
          {%- for param_name, param_value in ssm_parameters.items() -%}
            {%- set env_name = param_name.split('/')[-1] -%}
            {%- if ssm_parameter_store_env_uppercase -%}
              {%- set env_name = env_name.upper() -%}
            {%- endif -%}
            {%- set env_name = env_name.replace('-', ssm_parameter_store_env_separator) -%}
            {%- set env_name = env_name.replace('.', ssm_parameter_store_env_separator) -%}
            {%- if ssm_parameter_store_env_prefix -%}
              {%- set env_name = ssm_parameter_store_env_prefix + env_name -%}
            {%- endif -%}
            {%- set _ = exports.update({env_name: param_value}) -%}
          {%- endfor -%}
          {{ exports }}

# 環境変数をfactとして設定
- name: Set environment variables as facts
  ansible.builtin.set_fact:
    "{{ item.key }}": "{{ item.value }}"
  loop: "{{ env_exports | dict2items }}"
  no_log: >-
    {{
      ssm_parameter_store_auto_secure and
      item.key | lower | regex_search('(' + ssm_parameter_store_all_secure_keywords | join('|') + ')') is not none
    }}

# エクスポートスクリプトの生成（オプション）
- name: Generate export script
  when: generate_export_script | default(false)
  block:
    - name: Create export script content
      ansible.builtin.set_fact:
        export_script_content: |
          #!/bin/bash
          # Generated by Ansible SSM Parameter Store role
          # Generated at: {{ ansible_date_time.iso8601 }}
          
          {% for env_name, env_value in env_exports.items() %}
          {% set is_secure = ssm_parameter_store_auto_secure and env_name | lower | regex_search('(' + ssm_parameter_store_all_secure_keywords | join('|') + ')') is not none %}
          {% if not is_secure %}
          export {{ env_name }}="{{ env_value }}"
          {% else %}
          # {{ env_name }} is a secure parameter - value hidden
          export {{ env_name }}="***SECURE***"
          {% endif %}
          {% endfor %}

    - name: Write export script
      ansible.builtin.copy:
        content: "{{ export_script_content }}"
        dest: "{{ export_script_path | default('/tmp/ssm_exports.sh') }}"
        mode: '0600'
      when: not ansible_check_mode

# 結果のサマリー
- name: Set export summary
  ansible.builtin.set_fact:
    ssm_exported_vars: "{{ env_exports.keys() | list }}"
    ssm_export_count: "{{ env_exports | length }}"

# デバッグ出力
- name: Display export summary
  ansible.builtin.debug:
    msg: |
      Exported {{ ssm_export_count }} environment variables:
      {% for var_name in ssm_exported_vars %}
      - {{ var_name }}
      {% endfor %}
  when: ssm_parameter_store_verbose
