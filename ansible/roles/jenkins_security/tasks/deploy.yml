---
# セキュリティグループデプロイタスク

- name: Display security deployment information
  ansible.builtin.debug:
    msg: |
      Deploying Security Groups:
      - Project: {{ project_name }}
      - Security Pulumi Project: {{ security_project_name }}
      - Network Pulumi Project: {{ network_project_name }}
      - Environment: {{ env_name }}

# ファイル権限設定
- name: Ensure aws-env.sh has execute permissions
  ansible.builtin.file:
    path: "{{ scripts_dir }}/aws/aws-env.sh"
    mode: '0755'
  register: aws_env_script_permission
  no_log: true  # 詳細なログを抑制
  
- name: Report permission update
  ansible.builtin.debug:
    msg: "aws-env.sh スクリプトに実行権限を付与しました"
  when: aws_env_script_permission.changed

# Pulumiデプロイ
- name: Deploy Security Groups with Pulumi
  block:
    # Pulumiヘルパータスクを呼び出す
    - name: Initialize security stack
      ansible.builtin.include_role:
        name: pulumi_helper
        tasks_from: init_stack
      vars:
        pulumi_project_path: "{{ pulumi_path }}/jenkins-security"
        stack_name: "{{ env_name }}"
    
    - name: Configure security stack
      ansible.builtin.shell: |
        {{ scripts_dir }}/aws/aws-env.sh
        cd {{ pulumi_path }}/jenkins-security
        pulumi config set aws:region {{ aws_region_name }}
        pulumi config set {{ security_project_name }}:projectName {{ project_name }}
        pulumi config set {{ security_project_name }}:networkStackName {{ network_project_name }}
      register: pulumi_config_result
      changed_when: pulumi_config_result.rc == 0
    
    # VPC IDの確認
    - name: Get VPC ID from network stack
      ansible.builtin.include_role:
        name: pulumi_helper
        tasks_from: get_outputs
      vars:
        pulumi_project_path: "{{ pulumi_path }}/jenkins-network"
        stack_name: "{{ env_name }}"
        output_name: "vpcId"
        mock_output: "mock-vpc-id-for-check-mode"
    
    - name: Display VPC ID
      ansible.builtin.debug:
        msg: "Using VPC ID: {{ stack_output_result.stdout | trim }}"
    
    # Pulumiプレビュー
    - name: Preview security deployment
      ansible.builtin.include_role:
        name: pulumi_helper
        tasks_from: preview
      vars:
        pulumi_project_path: "{{ pulumi_path }}/jenkins-security"
    
    # Pulumiデプロイ
    - name: Deploy security stack
      ansible.builtin.include_role:
        name: pulumi_helper
        tasks_from: deploy
      vars:
        pulumi_project_path: "{{ pulumi_path }}/jenkins-security"
    
    # セキュリティグループIDの取得
    - name: Get ALB security group ID
      ansible.builtin.include_role:
        name: pulumi_helper
        tasks_from: get_outputs
      vars:
        pulumi_project_path: "{{ pulumi_path }}/jenkins-security"
        stack_name: "{{ env_name }}"
        output_name: "albSecurityGroupId"
        mock_output: "mock-alb-sg-id"
    
    - name: Set ALB security group ID
      ansible.builtin.set_fact:
        alb_sg_id: "{{ stack_output_result.stdout | trim }}"
    
    - name: Get Jenkins security group ID
      ansible.builtin.include_role:
        name: pulumi_helper
        tasks_from: get_outputs
      vars:
        pulumi_project_path: "{{ pulumi_path }}/jenkins-security"
        stack_name: "{{ env_name }}"
        output_name: "jenkinsSecurityGroupId"
        mock_output: "mock-jenkins-sg-id"
    
    - name: Set Jenkins security group ID
      ansible.builtin.set_fact:
        jenkins_sg_id: "{{ stack_output_result.stdout | trim }}"
    
    - name: Get Jenkins agent security group ID
      ansible.builtin.include_role:
        name: pulumi_helper
        tasks_from: get_outputs
      vars:
        pulumi_project_path: "{{ pulumi_path }}/jenkins-security"
        stack_name: "{{ env_name }}"
        output_name: "jenkinsAgentSecurityGroupId"
        mock_output: "mock-agent-sg-id"
    
    - name: Set Jenkins agent security group ID
      ansible.builtin.set_fact:
        jenkins_agent_sg_id: "{{ stack_output_result.stdout | trim }}"
    
    - name: Get EFS security group ID
      ansible.builtin.include_role:
        name: pulumi_helper
        tasks_from: get_outputs
      vars:
        pulumi_project_path: "{{ pulumi_path }}/jenkins-security"
        stack_name: "{{ env_name }}"
        output_name: "efsSecurityGroupId"
        mock_output: "mock-efs-sg-id"
    
    - name: Set EFS security group ID
      ansible.builtin.set_fact:
        efs_sg_id: "{{ stack_output_result.stdout | trim }}"
    
    - name: Set security facts for use in other playbooks
      ansible.builtin.set_fact:
        security_deployed: true
      
    - name: Summary of security groups deployment
      ansible.builtin.debug:
        msg: |
          Security Groups Deployed Successfully:
          ALB Security Group ID: {{ alb_sg_id }}
          Jenkins Security Group ID: {{ jenkins_sg_id }}
          Jenkins Agent Security Group ID: {{ jenkins_agent_sg_id }}
          EFS Security Group ID: {{ efs_sg_id }}
  
  rescue:
    - name: Set security deployment status on failure
      ansible.builtin.set_fact:
        security_deployed: false
      
    - name: Display error
      ansible.builtin.debug:
        msg: "Failed to deploy security groups. See error details above."
      
    - name: Fail the playbook
      ansible.builtin.fail:
        msg: "Security deployment failed."
