---
# Lambda API VPCエンドポイントのデプロイタスク

- name: Display VPC endpoints deployment information
  ansible.builtin.debug:
    msg: |
      Deploying Lambda API VPC Endpoints:
      - Project: {{ project_name }}
      - VPC Endpoints Pulumi Project: {{ vpce_project_name }}
      - Environment: {{ env_name }}
      - Endpoints to create: {{ vpc_endpoints | join(', ') }}

# Pulumiデプロイ
- name: Deploy VPC Endpoints with Pulumi
  block:
    # Pulumiヘルパータスクを呼び出す
    - name: Initialize VPC endpoints stack
      ansible.builtin.include_role:
        name: pulumi_helper
        tasks_from: init_stack
      vars:
        pulumi_project_path: "{{ pulumi_path }}/lambda-vpce"
        stack_name: "{{ env_name }}"
    
    - name: Configure VPC endpoints stack - AWS region
      ansible.builtin.include_role:
        name: pulumi_helper
        tasks_from: set_config
      vars:
        pulumi_project_path: "{{ pulumi_path }}/lambda-vpce"
        config_key: "aws:region"
        config_value: "{{ aws_region_name }}"

    - name: Configure VPC endpoints stack - project name
      ansible.builtin.include_role:
        name: pulumi_helper
        tasks_from: set_config
      vars:
        pulumi_project_path: "{{ pulumi_path }}/lambda-vpce"
        config_key: "{{ vpce_project_name }}:projectName"
        config_value: "{{ project_name }}"

    - name: Configure VPC endpoints stack - network stack name
      ansible.builtin.include_role:
        name: pulumi_helper
        tasks_from: set_config
      vars:
        pulumi_project_path: "{{ pulumi_path }}/lambda-vpce"
        config_key: "{{ vpce_project_name }}:networkStackName"
        config_value: "{{ network_project_name }}"

    - name: Configure VPC endpoints stack - security stack name
      ansible.builtin.include_role:
        name: pulumi_helper
        tasks_from: set_config
      vars:
        pulumi_project_path: "{{ pulumi_path }}/lambda-vpce"
        config_key: "{{ vpce_project_name }}:securityStackName"
        config_value: "{{ security_project_name }}"

    - name: Configure VPC endpoints - S3 endpoint
      ansible.builtin.include_role:
        name: pulumi_helper
        tasks_from: set_config
      vars:
        pulumi_project_path: "{{ pulumi_path }}/lambda-vpce"
        config_key: "{{ vpce_project_name }}:vpcEndpoints.s3"
        config_value: "{{ ('s3' in vpc_endpoints) | string | lower }}"

    - name: Configure VPC endpoints - Secrets Manager endpoint
      ansible.builtin.include_role:
        name: pulumi_helper
        tasks_from: set_config
      vars:
        pulumi_project_path: "{{ pulumi_path }}/lambda-vpce"
        config_key: "{{ vpce_project_name }}:vpcEndpoints.secretsManager"
        config_value: "true"
      when: "'secretsmanager' in vpc_endpoints"

    - name: Configure VPC endpoints - KMS endpoint
      ansible.builtin.include_role:
        name: pulumi_helper
        tasks_from: set_config
      vars:
        pulumi_project_path: "{{ pulumi_path }}/lambda-vpce"
        config_key: "{{ vpce_project_name }}:vpcEndpoints.kms"
        config_value: "true"
      when: "'kms' in vpc_endpoints"

    - name: Configure VPC endpoints - DynamoDB endpoint
      ansible.builtin.include_role:
        name: pulumi_helper
        tasks_from: set_config
      vars:
        pulumi_project_path: "{{ pulumi_path }}/lambda-vpce"
        config_key: "{{ vpce_project_name }}:vpcEndpoints.dynamodb"
        config_value: "true"
      when: "'dynamodb' in vpc_endpoints"
    
    # Pulumiプレビュー
    - name: Preview VPC endpoints deployment
      ansible.builtin.include_role:
        name: pulumi_helper
        tasks_from: preview
      vars:
        pulumi_project_path: "{{ pulumi_path }}/lambda-vpce"
      when: preview_only | default(false) | bool
    
    # Pulumiデプロイ
    - name: Deploy VPC endpoints stack
      ansible.builtin.include_role:
        name: pulumi_helper
        tasks_from: deploy
      vars:
        pulumi_project_path: "{{ pulumi_path }}/lambda-vpce"
      when: not preview_only | default(false) | bool
    
    # VPCエンドポイント情報の取得
    - name: Get VPC endpoints outputs
      ansible.builtin.shell: |
        cd {{ pulumi_path }}/lambda-vpce
        export PULUMI_ACCESS_TOKEN="{{ lookup('env', 'PULUMI_ACCESS_TOKEN') }}"
        pulumi stack output --json
      register: vpce_outputs_raw
      changed_when: false
      when: not preview_only | default(false) | bool
    
    - name: Parse VPC endpoints outputs
      ansible.builtin.set_fact:
        vpce_outputs: "{{ vpce_outputs_raw.stdout | from_json }}"
      when: 
        - not preview_only | default(false) | bool
        - vpce_outputs_raw.stdout is defined
    
    # デプロイ成功を示す変数設定
    - name: Set VPC endpoints deployment status
      ansible.builtin.set_fact:
        vpce_deployed: true
      when: not preview_only | default(false) | bool
    
    # VPCエンドポイント情報の表示
    - name: Display VPC endpoints deployment summary
      ansible.builtin.debug:
        msg: |
          VPC Endpoints deployment successful:
          {% for endpoint in vpc_endpoints %}
          - {{ endpoint | upper }} Endpoint: {{ vpce_outputs[endpoint + 'EndpointId'] | default('N/A') }}
          {% endfor %}
      when: 
        - vpce_deployed is defined and vpce_deployed
        - vpce_outputs is defined
  
  rescue:
    - name: Display error on VPC endpoints deployment
      ansible.builtin.debug:
        msg: "Failed to deploy Lambda API VPC endpoints. See error details above."
      
    - name: Set VPC endpoints deployment failure
      ansible.builtin.set_fact:
        vpce_deployed: false
      
    - name: Fail the playbook
      ansible.builtin.fail:
        msg: "Lambda API VPC endpoints deployment failed."
