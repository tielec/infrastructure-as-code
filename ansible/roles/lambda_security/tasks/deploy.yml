---
# Lambda APIセキュリティグループのデプロイタスク

# SSMからPhase設定を取得
- name: Get database security groups flag from SSM
  ansible.builtin.include_role:
    name: ssm_parameter_store
    tasks_from: get_parameter
  vars:
    parameter_name: "/{{ project_name }}/{{ env_name }}/phase/database-sg-enabled"
    store_as: "database_sg_param"
    default_value: "false"
    ssm_parameter_store_fail_on_missing: false

- name: Set database security groups flag
  ansible.builtin.set_fact:
    enable_database: "{{ ssm_parameter_store_database_sg_param | default('false') | bool }}"

- name: Display security deployment information
  ansible.builtin.debug:
    msg: |
      Deploying Lambda API Security Infrastructure:
      - Project: {{ project_name }}
      - Security Pulumi Project: {{ security_project_name }}
      - Environment: {{ env_name }}
      - Phase: {{ 'Phase 2' if enable_database else 'Phase 1' }}

# Pulumiデプロイ
- name: Deploy Security Infrastructure with Pulumi
  block:
    # Pulumiヘルパータスクを呼び出す
    - name: Initialize security stack
      ansible.builtin.include_role:
        name: pulumi_helper
        tasks_from: init_stack
      vars:
        pulumi_project_path: "{{ pulumi_path }}/lambda-security"
        stack_name: "{{ env_name }}"
    
    - name: Configure security stack - AWS region
      ansible.builtin.include_role:
        name: pulumi_helper
        tasks_from: set_config
      vars:
        pulumi_project_path: "{{ pulumi_path }}/lambda-security"
        config_key: "aws:region"
        config_value: "{{ aws_region_name }}"

    - name: Configure security stack - project name
      ansible.builtin.include_role:
        name: pulumi_helper
        tasks_from: set_config
      vars:
        pulumi_project_path: "{{ pulumi_path }}/lambda-security"
        config_key: "{{ security_project_name }}:projectName"
        config_value: "{{ project_name }}"

    - name: Configure security stack - network stack name
      ansible.builtin.include_role:
        name: pulumi_helper
        tasks_from: set_config
      vars:
        pulumi_project_path: "{{ pulumi_path }}/lambda-security"
        config_key: "{{ security_project_name }}:networkStackName"
        config_value: "{{ network_project_name }}"

    - name: Configure security stack - enable database security groups
      ansible.builtin.include_role:
        name: pulumi_helper
        tasks_from: set_config
      vars:
        pulumi_project_path: "{{ pulumi_path }}/lambda-security"
        config_key: "{{ security_project_name }}:enableDatabaseSecurityGroups"
        config_value: "{{ enable_database | string | lower }}"
    
    # Pulumiプレビュー
    - name: Preview security deployment
      ansible.builtin.include_role:
        name: pulumi_helper
        tasks_from: preview
      vars:
        pulumi_project_path: "{{ pulumi_path }}/lambda-security"
      when: preview_only | default(false) | bool
    
    # Pulumiデプロイ
    - name: Deploy security stack
      ansible.builtin.include_role:
        name: pulumi_helper
        tasks_from: deploy
      vars:
        pulumi_project_path: "{{ pulumi_path }}/lambda-security"
      when: not preview_only | default(false) | bool
    
    # セキュリティグループ情報の取得
    # SSMからセキュリティグループIDを取得（Pulumiスタックのoutputは最小限のため）
    - name: Get Lambda Security Group ID from SSM
      ansible.builtin.include_role:
        name: ssm_parameter_store
        tasks_from: get_parameter
      vars:
        parameter_name: "/{{ project_name }}/{{ env_name }}/security/lambda-sg-id"
        store_as: "lambda_sg_id"
      when: not preview_only | default(false) | bool
    
    - name: Get VPC Endpoint Security Group ID from SSM
      ansible.builtin.include_role:
        name: ssm_parameter_store
        tasks_from: get_parameter
      vars:
        parameter_name: "/{{ project_name }}/{{ env_name }}/security/vpce-sg-id"
        store_as: "vpce_sg_id"
      when: not preview_only | default(false) | bool
    
    - name: Set security outputs from SSM
      ansible.builtin.set_fact:
        security_outputs:
          lambdaSecurityGroupId: "{{ ssm_parameter_store_lambda_sg_id | default('N/A') }}"
          vpceSecurityGroupId: "{{ ssm_parameter_store_vpce_sg_id | default('N/A') }}"
          deploymentComplete: true
      when: not preview_only | default(false) | bool
    
    # デプロイ成功を示す変数設定
    - name: Set security deployment status
      ansible.builtin.set_fact:
        security_deployed: true
      when: not preview_only | default(false) | bool
    
    # セキュリティグループ情報の表示
    - name: Display security deployment summary
      ansible.builtin.debug:
        msg: |
          Security deployment successful:
          - Lambda Security Group: {{ security_outputs.lambdaSecurityGroupId | default('N/A') }}
          - VPC Endpoint Security Group: {{ security_outputs.vpceSecurityGroupId | default('N/A') }}
          - NAT Security Group: {{ security_outputs.natSecurityGroupId | default('N/A') }}
          - DLQ Security Group: {{ security_outputs.dlqSecurityGroupId | default('N/A') }}
          {% if enable_database %}
          - Database Security Group: {{ security_outputs.databaseSecurityGroupId | default('N/A') }}
          {% endif %}
      when: 
        - security_deployed is defined and security_deployed
        - security_outputs is defined
  
  rescue:
    - name: Display error on security deployment
      ansible.builtin.debug:
        msg: "Failed to deploy Lambda API security infrastructure. See error details above."
      
    - name: Set security deployment failure
      ansible.builtin.set_fact:
        security_deployed: false
      
    - name: Fail the playbook
      ansible.builtin.fail:
        msg: "Lambda API security deployment failed."
