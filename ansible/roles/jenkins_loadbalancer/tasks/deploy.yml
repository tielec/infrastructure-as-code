---
# ロードバランサーデプロイタスク

- name: Display loadbalancer deployment information
  ansible.builtin.debug:
    msg: |
      Deploying LoadBalancer Infrastructure:
      - Project: {{ project_name }}
      - LoadBalancer Pulumi Project: {{ loadbalancer_project_name }}
      - Network Pulumi Project: {{ network_project_name }}
      - Security Pulumi Project: {{ security_project_name }}
      - Environment: {{ env_name }}

# ファイル権限設定
- name: Ensure aws-env.sh has execute permissions
  ansible.builtin.file:
    path: "{{ scripts_dir }}/aws/aws-env.sh"
    mode: '0755'
  register: aws_env_script_permission
  no_log: true  # 詳細なログを抑制
  
- name: Report permission update
  ansible.builtin.debug:
    msg: "aws-env.sh スクリプトに実行権限を付与しました"
  when: aws_env_script_permission.changed

# Pulumiデプロイ
- name: Deploy LoadBalancer Infrastructure with Pulumi
  block:
    # Pulumiヘルパータスクを呼び出す
    - name: Initialize loadbalancer stack
      ansible.builtin.include_role:
        name: pulumi_helper
        tasks_from: init_stack
      vars:
        pulumi_project_path: "{{ pulumi_path }}/jenkins-loadbalancer"
        stack_name: "{{ env_name }}"
    
    - name: Configure loadbalancer stack - AWS region
      ansible.builtin.include_role:
        name: pulumi_helper
        tasks_from: set_config
      vars:
        pulumi_project_path: "{{ pulumi_path }}/jenkins-loadbalancer"
        config_key: "aws:region"
        config_value: "{{ aws_region_name }}"

    # SSMパラメータの確認
    - name: Get project name from SSM Parameter Store
      ansible.builtin.include_role:
        name: ssm_parameter_store
        tasks_from: get_parameter
      vars:
        parameter_name: "/jenkins-infra/{{ env_name }}/config/project-name"
        store_as: "ssm_project_name"
    
    - name: Get VPC ID from SSM Parameter Store
      ansible.builtin.include_role:
        name: ssm_parameter_store
        tasks_from: get_parameter
      vars:
        parameter_name: "/jenkins-infra/{{ env_name }}/network/vpc-id"
        store_as: "ssm_vpc_id"
    
    - name: Get ALB security group ID from SSM Parameter Store
      ansible.builtin.include_role:
        name: ssm_parameter_store
        tasks_from: get_parameter
      vars:
        parameter_name: "/jenkins-infra/{{ env_name }}/security/alb-sg-id"
        store_as: "ssm_alb_sg_id"
    
    - name: Display configuration from SSM
      ansible.builtin.debug:
        msg: |
          Using configuration from SSM:
          - Project Name: {{ ssm_project_name }}
          - VPC ID: {{ ssm_vpc_id }}
          - ALB Security Group ID: {{ ssm_alb_sg_id }}
    
    
    # Pulumiプレビュー
    - name: Preview loadbalancer deployment
      ansible.builtin.include_role:
        name: pulumi_helper
        tasks_from: preview
      vars:
        pulumi_project_path: "{{ pulumi_path }}/jenkins-loadbalancer"
    
    # Pulumiデプロイ
    - name: Deploy loadbalancer stack
      ansible.builtin.include_role:
        name: pulumi_helper
        tasks_from: deploy
      vars:
        pulumi_project_path: "{{ pulumi_path }}/jenkins-loadbalancer"
    
    # デプロイ後に少し待機してスタックが完全に更新されるのを待つ
    - name: Wait for stack outputs to be available
      ansible.builtin.pause:
        seconds: 10
      when: not ansible_check_mode
    
    # ALB DNSの取得
    - name: Get ALB DNS name from SSM Parameter Store
      ansible.builtin.include_role:
        name: ssm_parameter_store
        tasks_from: get_parameter
      vars:
        parameter_name: "/jenkins-infra/{{ env_name }}/loadbalancer/alb-dns-name"
        store_as: "alb_dns_name"
    
    # ALB ARNの取得
    - name: Get ALB ARN from SSM Parameter Store
      ansible.builtin.include_role:
        name: ssm_parameter_store
        tasks_from: get_parameter
      vars:
        parameter_name: "/jenkins-infra/{{ env_name }}/loadbalancer/alb-arn"
        store_as: "alb_arn"
    
    # Blue ターゲットグループARNの取得
    - name: Get Blue target group ARN from SSM Parameter Store
      ansible.builtin.include_role:
        name: ssm_parameter_store
        tasks_from: get_parameter
      vars:
        parameter_name: "/jenkins-infra/{{ env_name }}/loadbalancer/blue-target-group-arn"
        store_as: "blue_target_group_arn"
    
    # Green ターゲットグループARNの取得
    - name: Get Green target group ARN from SSM Parameter Store
      ansible.builtin.include_role:
        name: ssm_parameter_store
        tasks_from: get_parameter
      vars:
        parameter_name: "/jenkins-infra/{{ env_name }}/loadbalancer/green-target-group-arn"
        store_as: "green_target_group_arn"
    
    # Jenkins URLの取得
    - name: Get Jenkins URL from SSM Parameter Store
      ansible.builtin.include_role:
        name: ssm_parameter_store
        tasks_from: get_parameter
      vars:
        parameter_name: "/jenkins-infra/{{ env_name }}/loadbalancer/jenkins-url"
        store_as: "jenkins_url"
    
    - name: Set loadbalancer facts for use in other playbooks
      ansible.builtin.set_fact:
        loadbalancer_deployed: true
        # スタック参照情報も保存
        loadbalancer_stack_name: "{{ loadbalancer_project_name }}"
      
    - name: Summary of loadbalancer deployment
      ansible.builtin.debug:
        msg: |
          LoadBalancer Infrastructure Deployed Successfully:
          - ALB DNS Name: {{ alb_dns_name }}
          - ALB ARN: {{ alb_arn }}
          - Blue Target Group ARN: {{ blue_target_group_arn }}
          - Green Target Group ARN: {{ green_target_group_arn }}
          - Jenkins URL: {{ jenkins_url }}
  
  rescue:
    - name: Set loadbalancer deployment status on failure
      ansible.builtin.set_fact:
        loadbalancer_deployed: false
      
    - name: Display error
      ansible.builtin.debug:
        msg: "Failed to deploy loadbalancer infrastructure. See error details above."
      
    - name: Fail the playbook
      ansible.builtin.fail:
        msg: "LoadBalancer deployment failed."
