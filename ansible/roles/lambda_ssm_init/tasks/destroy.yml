---
# lambda_ssm_init/tasks/destroy.yml
# Lambda APIインフラのSSMパラメータ削除タスク

- name: Set project variables for destroy
  ansible.builtin.set_fact:
    lambda_ssm_init_project: "lambda-ssm-init"
    lambda_ssm_init_path: "{{ pulumi_path }}/lambda-ssm-init"
    param_prefix: "/{{ project_name }}/{{ env_name }}"

- name: Display SSM parameter destruction info
  ansible.builtin.debug:
    msg: |
      Lambda SSM Parameter Destruction
      ================================
      Project: {{ lambda_ssm_init_project }}
      Environment: {{ env_name }}
      Region: {{ aws_region_name }}
      Parameter Prefix: {{ param_prefix }}
      
      ⚠️  WARNING: This will delete all SSM parameters for this environment!

- name: Confirm destruction
  ansible.builtin.pause:
    prompt: "Press ENTER to confirm deletion of SSM parameters, or Ctrl+C to cancel"
  when: 
    - force_destroy is not defined or not force_destroy
    - not preview_only | default(false)

- name: Check if Pulumi stack exists
  ansible.builtin.command:
    cmd: pulumi stack ls --json
    chdir: "{{ lambda_ssm_init_path }}"
  register: stack_list
  changed_when: false
  failed_when: false

- name: Parse stack list
  ansible.builtin.set_fact:
    existing_stacks: "{{ stack_list.stdout | from_json | map(attribute='name') | list }}"
  when: stack_list.rc == 0

- name: Check if target stack exists
  ansible.builtin.set_fact:
    stack_exists: "{{ env_name in existing_stacks }}"
  when: existing_stacks is defined

# Pulumiスタックを使用した削除
- name: Destroy SSM parameters using Pulumi
  block:
    - name: Select the stack
      ansible.builtin.command:
        cmd: pulumi stack select {{ env_name }}
        chdir: "{{ lambda_ssm_init_path }}"
      when: stack_exists | default(false)

    - name: Preview destruction
      ansible.builtin.include_role:
        name: pulumi_helper
      vars:
        pulumi_action: "preview"
        pulumi_stack_name: "{{ env_name }}"
        pulumi_project_path: "{{ lambda_ssm_init_path }}"
        pulumi_destroy: true
      when: 
        - preview_only | default(false)
        - stack_exists | default(false)

    - name: Destroy SSM parameters
      ansible.builtin.include_role:
        name: pulumi_helper
      vars:
        pulumi_action: "destroy"
        pulumi_stack_name: "{{ env_name }}"
        pulumi_project_path: "{{ lambda_ssm_init_path }}"
        pulumi_skip_preview: true
      when: 
        - not preview_only | default(false)
        - stack_exists | default(false)

    - name: Remove the stack
      ansible.builtin.command:
        cmd: pulumi stack rm {{ env_name }} --yes
        chdir: "{{ lambda_ssm_init_path }}"
      when: 
        - not preview_only | default(false)
        - stack_exists | default(false)
        - remove_stack | default(true)
      register: stack_removal

  rescue:
    - name: Display error message
      ansible.builtin.debug:
        msg: "Failed to destroy using Pulumi. Will attempt manual cleanup if forced."

# Pulumiで管理されていない残存パラメータのクリーンアップ
- name: Clean up remaining SSM parameters not managed by Pulumi
  block:
    - name: List all SSM parameters for the Lambda project
      ansible.builtin.include_role:
        name: aws_cli_helper
        tasks_from: execute
      vars:
        aws_command: |
          aws ssm describe-parameters \
            --parameter-filters "Key=Name,Option=BeginsWith,Values=/lambda-api/{{ env_name }}/" \
            --max-results 50 \
            --output json
        operation_name: "List remaining SSM parameters"
        parse_output: true
    
    - name: Save parameter list
      ansible.builtin.set_fact:
        remaining_params: "{{ aws_cli_data.Parameters | default([]) }}"
      when: aws_cli_success | default(false)
    
    - name: Display remaining parameters
      ansible.builtin.debug:
        msg: "Found {{ remaining_params | default([]) | length }} remaining SSM parameter(s) to delete"
      when: 
        - remaining_params is defined
        - remaining_params | length > 0
    
    - name: Delete each remaining parameter
      ansible.builtin.include_role:
        name: aws_cli_helper
        tasks_from: execute
      vars:
        aws_command: "aws ssm delete-parameter --name \"{{ item.Name }}\""
        operation_name: "Delete parameter {{ item.Name }}"
        parse_output: false
      loop: "{{ remaining_params | default([]) }}"
      loop_control:
        label: "{{ item.Name }}"
      when: 
        - remaining_params is defined
        - remaining_params | length > 0
        - not preview_only | default(false)
    
    - name: Set complete cleanup flag
      ansible.builtin.set_fact:
        ssm_fully_cleaned: true
        
  rescue:
    - name: Cleanup failed
      ansible.builtin.debug:
        msg: "Some SSM parameters may not have been deleted"
    
    - name: Set cleanup failure flag
      ansible.builtin.set_fact:
        ssm_fully_cleaned: false
        
  when: 
    - not preview_only | default(false)
    - (stack_exists | default(false) or force_manual_cleanup | default(false))

- name: Verify deletion
  ansible.builtin.include_role:
    name: ssm_parameter_store
    tasks_from: get_parameter
  vars:
    parameter_name: "{{ param_prefix }}/common/init-complete"
    store_as: "deletion_check"
    ignore_errors: true
  register: deletion_verification
  when: not preview_only | default(false)

- name: Display SSM destruction summary
  ansible.builtin.debug:
    msg: |
      ========================================
      Lambda SSM Parameter Store Deletion Complete
      ========================================
      Project: lambda-api
      Environment: {{ env_name }}
      
      Pulumi Stack Status:
        - Stack Exists: {{ 'Yes' if stack_exists | default(false) else 'No' }}
        - Stack Destroyed: {{ 'Yes' if stack_removal.changed | default(false) else 'N/A' }}
      
      SSM Cleanup Status:
        - Pulumi-managed params: {{ 'DESTROYED' if stack_exists | default(false) else 'N/A' }}
        - Remaining params cleanup: {{ 'SUCCESS' if ssm_fully_cleaned | default(false) else 'PARTIAL' }}
        - Total params deleted: {{ remaining_params | default([]) | length }}
      
      Final Status: {{ 'SUCCESS' if (deletion_verification.failed | default(false) or ssm_fully_cleaned | default(false)) else 'FAILED' }}
      ========================================
  when: not preview_only | default(false)

- name: Set destruction fact
  ansible.builtin.set_fact:
    ssm_init_destroyed: "{{ deletion_verification.failed | default(false) or ssm_fully_cleaned | default(false) }}"
  when: not preview_only | default(false)