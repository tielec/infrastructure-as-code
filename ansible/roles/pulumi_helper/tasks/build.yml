# Pulumiプロジェクトのビルドを実行するヘルパータスク

# 共通変数の読み込み（ビルドには最小限の変数のみ必要）
- name: Load common variables
  ansible.builtin.include_tasks: common_vars.yml

- name: Build Pulumi TypeScript project
  block:
    # package.jsonの存在確認
    - name: Verify package.json exists
      ansible.builtin.stat:
        path: "{{ pulumi_project_path }}/package.json"
      register: package_json
      failed_when: not package_json.stat.exists
    
    # ビルドスクリプトの存在確認とビルド実行
    - name: Build project
      ansible.builtin.shell: |
        cd {{ pulumi_project_path }}
        # package.jsonにbuildスクリプトがあるか確認
        if grep -q '"build"' package.json; then
          npm run build
        else
          # buildスクリプトがない場合は直接tscを実行
          npx tsc
        fi
      register: build_result
      changed_when: build_result.rc == 0
      when: not ansible_check_mode
    
    # 構文チェック
    - name: Run TypeScript syntax check
      ansible.builtin.shell: |
        cd {{ pulumi_project_path }}
        npx tsc --noEmit
      register: syntax_check
      changed_when: false
      when: not ansible_check_mode
    
    # ビルド成功メッセージ
    - name: Display success message
      ansible.builtin.debug:
        msg: "TypeScript build completed successfully"
      when: not ansible_check_mode and ansible_verbosity > 0
      
  rescue:
    - name: Display error message
      ansible.builtin.debug:
        msg: |
          ========== TypeScript Build Failed ==========
          Failed to build TypeScript project
          {% if build_result is defined and build_result.stdout is defined %}
          Build output:
          {{ build_result.stdout }}
          {% endif %}
          {% if build_result is defined and build_result.stderr is defined and build_result.stderr %}
          Build errors:
          {{ build_result.stderr }}
          {% endif %}
          {% if syntax_check is defined and syntax_check.stdout is defined %}
          Syntax check output:
          {{ syntax_check.stdout }}
          {% endif %}
          ============================================
    
    - name: Set failure status
      ansible.builtin.set_fact:
        pulumi_build_failed: true
    
    # エラー時にAnsibleの実行を停止
    - name: Fail the playbook
      ansible.builtin.fail:
        msg: |
          TypeScript build failed.
          {% if 'error TS' in build_result.stdout | default('') or 'error TS' in build_result.stderr | default('') %}
          TypeScript compilation errors detected. Please fix the TypeScript errors and try again.
          {% else %}
          Check the output above for details.
          {% endif %}

# チェックモード
- name: Mock build (check mode)
  ansible.builtin.debug:
    msg: "Would build TypeScript project in {{ pulumi_project_path }} (check mode active)"
  when: ansible_check_mode
