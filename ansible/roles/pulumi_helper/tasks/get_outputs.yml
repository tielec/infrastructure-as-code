# Pulumiスタックの出力を取得するヘルパータスク

- name: Get stack outputs
  block:
    # スタックが選択されているか確認
    - name: Check if stack is selected
      ansible.builtin.shell: |
        cd {{ pulumi_project_path }}
        export PULUMI_ACCESS_TOKEN="{{ lookup('env', 'PULUMI_ACCESS_TOKEN') }}"
        sudo -E {{ pulumi_bin_path }} stack --show-name 2>/dev/null || echo "NO_STACK_SELECTED"
      register: current_stack_check
      changed_when: false
      when: not ansible_check_mode
    
    # スタックが選択されていない場合の処理
    - name: Select stack if not selected
      when:
        - not ansible_check_mode
        - current_stack_check.stdout == "NO_STACK_SELECTED"
      block:
        # stack_nameが指定されている場合は、それを使用
        - name: Select specified stack
          ansible.builtin.shell: |
            cd {{ pulumi_project_path }}
            export PULUMI_ACCESS_TOKEN="{{ lookup('env', 'PULUMI_ACCESS_TOKEN') }}"
            
            # まず単純な名前で試す
            if sudo -E {{ pulumi_bin_path }} stack select {{ stack_name }} 2>/dev/null; then
              echo "Selected stack: {{ stack_name }}"
            else
              # 失敗したら、スタック名を含むものを検索
              MATCHING_STACK=$(sudo -E {{ pulumi_bin_path }} stack ls --json | jq -r '.[].name | select(endswith("/{{ stack_name }}"))' | head -1)
              if [ -n "$MATCHING_STACK" ]; then
                sudo -E {{ pulumi_bin_path }} stack select "$MATCHING_STACK"
                echo "Selected stack: $MATCHING_STACK"
              else
                echo "Stack {{ stack_name }} not found" >&2
                exit 1
              fi
            fi
          when: stack_name is defined
          register: stack_selection_by_name
          failed_when: false
        
        # stack_nameが未指定の場合は、警告を出して最初のスタックを選択
        - name: Select first available stack (fallback)
          ansible.builtin.shell: |
            cd {{ pulumi_project_path }}
            export PULUMI_ACCESS_TOKEN="{{ lookup('env', 'PULUMI_ACCESS_TOKEN') }}"
            
            echo "WARNING: No stack_name specified, selecting first available stack" >&2
            
            # 利用可能なスタックをリスト
            STACKS=$(sudo -E {{ pulumi_bin_path }} stack ls --json)
            FIRST_STACK=$(echo "$STACKS" | jq -r '.[0].name // empty')
            
            if [ -n "$FIRST_STACK" ]; then
              sudo -E {{ pulumi_bin_path }} stack select "$FIRST_STACK"
              echo "Selected first available stack: $FIRST_STACK"
            else
              echo "No stacks available" >&2
              exit 1
            fi
          when: 
            - stack_name is not defined
            - (stack_selection_by_name is not defined or stack_selection_by_name.rc | default(0) != 0)
          register: stack_selection_fallback
    
    # スタック出力を取得
    - name: Get stack output
      ansible.builtin.shell: |
        cd {{ pulumi_project_path }}
        export PULUMI_ACCESS_TOKEN="{{ lookup('env', 'PULUMI_ACCESS_TOKEN') }}"
        
        # 再度スタックが選択されているか確認
        if ! sudo -E {{ pulumi_bin_path }} stack --show-name >/dev/null 2>&1; then
          echo "ERROR: No stack selected" >&2
          exit 1
        fi
        
        # 出力を取得
        if [ -n "{{ output_name | default('') }}" ]; then
          sudo -E {{ pulumi_bin_path }} stack output {{ output_name }}
        else
          sudo -E {{ pulumi_bin_path }} stack output --json
        fi
      register: stack_output_result
      changed_when: false
      when: not ansible_check_mode
      
    - name: Set output success status
      ansible.builtin.set_fact:
        stack_output_succeeded: true
        
  rescue:
    - name: Handle output retrieval failure
      ansible.builtin.debug:
        msg: "Failed to retrieve stack outputs. Using fallback value."
    
    - name: Set fallback output
      ansible.builtin.set_fact:
        stack_output_result:
          stdout: "{{ mock_output | default('mock-output-for-error') }}"
          rc: 1
        stack_output_failed: true

# チェックモード用のモック出力
- name: Set mock outputs (check mode)
  ansible.builtin.set_fact:
    stack_output_result:
      stdout: "{{ mock_output | default('mock-output-for-check-mode') }}"
      rc: 0
  when: ansible_check_mode
