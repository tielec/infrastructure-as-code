# Pulumiスタックの出力を取得するヘルパータスク

- name: Get stack outputs
  block:
    # スタックが選択されているか確認し、されていない場合は選択
    - name: Ensure stack is selected
      ansible.builtin.shell: |
        cd {{ pulumi_project_path }}
        export PULUMI_ACCESS_TOKEN="{{ lookup('env', 'PULUMI_ACCESS_TOKEN') }}"
        
        # 現在のスタックを確認
        if ! sudo -E {{ pulumi_bin_path }} stack --show-name >/dev/null 2>&1; then
          # スタック名を解決してから選択
          sudo -E {{ pulumi_bin_path }} stack select {{ stack_name }} 2>/dev/null || \
          sudo -E {{ pulumi_bin_path }} stack select $(sudo -E {{ pulumi_bin_path }} stack ls --json | jq -r '.[].name | select(endswith("/{{ stack_name }}"))' | head -1)
        fi
      register: stack_ensure
      changed_when: false
      failed_when: false
      when: not ansible_check_mode
    
    # スタック出力を取得
    - name: Get stack output
      ansible.builtin.shell: |
        cd {{ pulumi_project_path }}
        export PULUMI_ACCESS_TOKEN="{{ lookup('env', 'PULUMI_ACCESS_TOKEN') }}"
        
        if [ -n "{{ output_name | default('') }}" ]; then
          sudo -E {{ pulumi_bin_path }} stack output {{ output_name }}
        else
          sudo -E {{ pulumi_bin_path }} stack output --json
        fi
      register: stack_output_result
      changed_when: false
      when: not ansible_check_mode
      
    - name: Set output success status
      ansible.builtin.set_fact:
        stack_output_succeeded: true
        
  rescue:
    - name: Handle output retrieval failure
      ansible.builtin.debug:
        msg: "Failed to retrieve stack outputs. Using fallback value."
    
    - name: Set fallback output
      ansible.builtin.set_fact:
        stack_output_result:
          stdout: "{{ mock_output | default('mock-output-for-error') }}"
          rc: 1
        stack_output_failed: true

# チェックモード用のモック出力
- name: Set mock outputs (check mode)
  ansible.builtin.set_fact:
    stack_output_result:
      stdout: "{{ mock_output | default('mock-output-for-check-mode') }}"
      rc: 0
  when: ansible_check_mode
