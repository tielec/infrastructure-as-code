# Pulumiのデプロイ実行ヘルパータスク

# ディスク容量チェック（デプロイ前）
- name: Check disk space before deployment
  ansible.builtin.shell: |
    df -h {{ pulumi_project_path }} | tail -1 | awk '{print $5}' | sed 's/%//'
  register: disk_usage_before
  changed_when: false
  failed_when: false

- name: Clean up if disk usage is high
  ansible.builtin.include_tasks: cleanup.yml
  vars:
    pulumi_project_dir: "{{ pulumi_project_path }}"
    cleanup_node_modules: true
    cleanup_npm_cache: true
    cleanup_package_lock: false
    cleanup_build_artifacts: false
    cleanup_global_npm_cache: false
    cleanup_temp_files: false
  when:
    - disk_usage_before.stdout | int > 80
    - auto_cleanup_on_high_disk_usage | default(true)

# 認証処理を実行（既に認証済みの場合はスキップ）
- name: Ensure Pulumi authentication
  ansible.builtin.include_tasks: login.yml
  when: pulumi_authenticated is not defined

# S3バックエンドの場合、プロジェクト別ログイン
- name: Handle S3 backend project login
  ansible.builtin.include_tasks: s3_backend_login.yml

- name: Deploy with Pulumi
  block:
    # ロック状態をチェック
    - name: Check for existing locks
      ansible.builtin.shell: |
        cd {{ pulumi_project_path }}
        {{ pulumi_env_prefix }} && {{ pulumi_sudo_cmd }} cancel --yes 2>&1 || true
      register: lock_check
      changed_when: false
      failed_when: false
      when: not ansible_check_mode

    - name: Report lock cancellation
      ansible.builtin.debug:
        msg: "Previous lock has been cancelled if it existed"
      when:
        - not ansible_check_mode
        - "'the stack is currently locked' in lock_check.stderr | default('')"

    # スタックが選択されているか確認
    - name: Ensure stack is selected
      ansible.builtin.shell: |
        cd {{ pulumi_project_path }}
        {{ pulumi_env_prefix }} && {{ pulumi_sudo_cmd }} stack --show-name || exit 1
      register: current_stack
      changed_when: false
      failed_when: current_stack.rc != 0
      when: not ansible_check_mode

    # AWSリージョンを設定
    - name: Set AWS region in Pulumi config
      ansible.builtin.shell: |
        cd {{ pulumi_project_path }}
        {{ pulumi_env_prefix }} && {{ pulumi_sudo_cmd }} config set aws:region {{ aws_region }} --stack {{ current_stack.stdout }}
      changed_when: false
      when: not ansible_check_mode
    
    - name: Start deployment
      ansible.builtin.debug:
        msg: "Deploying stack '{{ current_stack.stdout }}' in {{ pulumi_project_path | basename }}"
      when: not ansible_check_mode
    
    # Pulumiスタックをリフレッシュ（AWS上のリソースの現在の状態を同期）
    - name: Refresh Pulumi stack state before deployment
      ansible.builtin.shell: |
        cd {{ pulumi_project_path }}
        {{ pulumi_commands.refresh }}
      register: pulumi_refresh_result
      changed_when: false
      when: not ansible_check_mode
      ignore_errors: true
      retries: 2
      delay: 5
      until: "'the stack is currently locked' not in pulumi_refresh_result.stderr | default('')"
    
    - name: Display refresh result
      ansible.builtin.debug:
        msg: "Stack state refreshed successfully"
      when: not ansible_check_mode and pulumi_refresh_result.rc == 0
    
    # デプロイを実行
    - name: Run deployment
      ansible.builtin.shell: |
        cd {{ pulumi_project_path }}
        {{ pulumi_commands.up }}
      register: pulumi_up_result
      changed_when: "'No changes' not in pulumi_up_result.stdout"
      when: not ansible_check_mode
      retries: 2
      delay: 5
      until: "'the stack is currently locked' not in pulumi_up_result.stderr | default('')"
    
    # デプロイ結果は重要なので常に表示
    - name: Display deployment results
      ansible.builtin.debug:
        msg: "{{ pulumi_up_result.stdout_lines }}"
      when: 
        - not ansible_check_mode
        - pulumi_up_result is defined
    
    - name: Set success status
      ansible.builtin.set_fact:
        pulumi_deployment_succeeded: true
    
    # デプロイ成功後のクリーンアップ（オプション）
    - name: Clean up after successful deployment
      ansible.builtin.include_tasks: cleanup.yml
      vars:
        pulumi_project_dir: "{{ pulumi_project_path }}"
        cleanup_node_modules: true
        cleanup_npm_cache: true
        cleanup_package_lock: false
        cleanup_build_artifacts: false
        cleanup_global_npm_cache: false
        cleanup_temp_files: false
      when:
        - cleanup_after_deploy | default(true)
        - not ansible_check_mode
        
  rescue:
    # ロックエラーの場合、再度キャンセルを試みる
    - name: Force cancel lock on failure
      ansible.builtin.shell: |
        cd {{ pulumi_project_path }}
        {{ pulumi_env_prefix }} && {{ pulumi_sudo_cmd }} cancel --yes
      register: force_cancel
      failed_when: false
      changed_when: false
      when: 
        - not ansible_check_mode
        - "'the stack is currently locked' in pulumi_up_result.stderr | default('')"
    
    - name: Report deployment failure
      ansible.builtin.debug:
        msg: |
          ========== Pulumi Deployment Failed ==========
          {% if 'the stack is currently locked' in pulumi_up_result.stderr | default('') %}
          Stack was locked. Attempted to cancel the lock.
          {% elif 'TypeScript' in pulumi_up_result.stdout | default('') %}
          TypeScript compilation errors detected.
          {% elif 'unhandled exception' in pulumi_up_result.stdout | default('') %}
          An unhandled exception occurred during deployment.
          {% else %}
          Deployment failed with error code: {{ pulumi_up_result.rc | default('unknown') }}
          {% endif %}
    
    # エラー詳細は重要なので表示
    - name: Display error output
      ansible.builtin.debug:
        msg: |
          Error details:
          {{ pulumi_up_result.stdout | default('No output available') }}
      when: pulumi_up_result is defined and pulumi_up_result.stdout is defined
    
    - name: Display error stderr
      ansible.builtin.debug:
        msg: |
          Error output:
          {{ pulumi_up_result.stderr }}
      when: pulumi_up_result is defined and pulumi_up_result.stderr is defined and pulumi_up_result.stderr
    
    - name: Set failure status
      ansible.builtin.set_fact:
        pulumi_deployment_failed: true
    
    - name: Fail the playbook
      ansible.builtin.fail:
        msg: "Pulumi deployment failed. See error details above."

# チェックモード
- name: Mock deploy (check mode)
  ansible.builtin.debug:
    msg: "Would deploy with Pulumi (check mode)"
  when: ansible_check_mode
