# Pulumiスタックを削除するヘルパータスク

- name: Destroy Pulumi stack
  block:
    # プロジェクト固有のログインを確認（login.ymlで実行済みでない場合）
    - name: Ensure proper backend login
      ansible.builtin.include_tasks: login.yml
      when: _pulumi_login_needed is not defined
    
    # スタックが選択されているか確認
    - name: Ensure stack is selected
      ansible.builtin.shell: |
        cd {{ pulumi_project_path }}
        {% if pulumi_backend_type == 's3' %}
        export PULUMI_CONFIG_PASSPHRASE="{{ lookup('env', 'PULUMI_CONFIG_PASSPHRASE') }}"
        {% else %}
        export PULUMI_ACCESS_TOKEN="{{ lookup('env', 'PULUMI_ACCESS_TOKEN') }}"
        {% endif %}
        sudo -E {{ pulumi_bin_path }} stack --show-name || exit 1
      register: current_stack
      changed_when: false
      failed_when: current_stack.rc != 0
      when: not ansible_check_mode
    
    # リソースを削除
    - name: Destroy resources
      ansible.builtin.shell: |
        cd {{ pulumi_project_path }}
        {{ pulumi_commands.destroy }}
      register: pulumi_destroy_result
      changed_when: "'No resources' not in pulumi_destroy_result.stdout"
      when: not ansible_check_mode
      async: 600  # 10分のタイムアウト
      poll: 10    # 10秒ごとにポーリング
    
    # 削除結果を表示
    - name: Display destroy results
      ansible.builtin.debug:
        msg: "{{ pulumi_destroy_result.stdout_lines }}"
      when: not ansible_check_mode and ansible_verbosity > 0
        
  rescue:
    # 競合エラーの場合は再試行
    - name: Handle concurrent update error
      when: "'Another update is currently in progress' in pulumi_destroy_result.stderr | default('')"
      block:
        - name: Cancel current operation
          ansible.builtin.shell: |
            cd {{ pulumi_project_path }}
            export PULUMI_ACCESS_TOKEN="{{ lookup('env', 'PULUMI_ACCESS_TOKEN') }}"
            sudo -E {{ pulumi_bin_path }} cancel
          ignore_errors: true
        
        - name: Wait before retry
          ansible.builtin.pause:
            seconds: 30
        
        - name: Retry destroy
          ansible.builtin.shell: |
            cd {{ pulumi_project_path }}
            {{ pulumi_commands.destroy }}
          register: pulumi_destroy_retry_result
    
    - name: Display error message
      ansible.builtin.debug:
        msg: |
          ========== Pulumi Destroy Failed ==========
          Failed to destroy Pulumi stack
          {% if pulumi_destroy_result is defined %}
          Error code: {{ pulumi_destroy_result.rc | default('unknown') }}
          {% endif %}
          ==========================================    
    - name: Set failure status
      ansible.builtin.set_fact:
        pulumi_destroy_failed: true
    
    # エラー時にAnsibleの実行を停止
    - name: Fail the playbook
      ansible.builtin.fail:
        msg: |
          Pulumi destroy operation failed.
          {% if 'Another update is currently in progress' in pulumi_destroy_result.stderr | default('') %}
          Another Pulumi operation is in progress. The retry also failed.
          {% else %}
          Check the output above for details.
          {% endif %}

# チェックモード
- name: Mock destroy (check mode)
  ansible.builtin.debug:
    msg: "Would destroy Pulumi stack (check mode active)"
  when: ansible_check_mode
