# Pulumiプロジェクト操作の共通ヘルパータスク
# 
# このロールは以下の機能を提供します：
# - Pulumiの設定と認証
# - スタックの初期化と選択（init_stack.yml）
# - スタックのプレビュー（preview.yml）
# - スタックのデプロイ（deploy.yml）
# - スタックの削除（destroy.yml）
# - スタックの更新（refresh.yml）
# - スタック設定の管理（set_config.yml）
# - スタック出力の取得（get_outputs.yml）
# - TypeScriptプロジェクトのビルド（build.yml）

# AWS環境の準備
- name: Ensure AWS credential scripts are executable
  ansible.builtin.file:
    path: "{{ playbook_dir }}/../../scripts/aws-env.sh"
    mode: '0755'
  register: aws_env_script_perm
  failed_when: false
  no_log: true

- name: Report AWS script permissions update
  ansible.builtin.debug:
    msg: "aws-env.sh スクリプトに実行権限を付与しました"
  when: aws_env_script_perm.changed | default(false)

- name: Ensure AWS credentials are properly set
  ansible.builtin.include_role:
    name: aws_setup

# Pulumiの確認と準備
- name: Check if Pulumi is installed
  ansible.builtin.stat:
    path: "/root/.pulumi/bin/pulumi"
  register: pulumi_check
  failed_when: false

- name: Check root Pulumi installation
  ansible.builtin.stat:
    path: "/root/.pulumi/bin/pulumi"
  register: pulumi_root_check
  failed_when: false
  when: not pulumi_check.stat.exists

- name: Ensure Pulumi is available
  ansible.builtin.fail:
    msg: "Pulumi is not installed. Please run bootstrap setup first."
  when: not pulumi_check.stat.exists and not pulumi_root_check.stat.exists

# Pulumi認証処理を実行
- name: Handle Pulumi authentication
  ansible.builtin.include_tasks: login.yml

# Pulumiのバージョン確認
- name: Check Pulumi version
  ansible.builtin.command: "{{ pulumi_bin_path }} version"
  register: pulumi_version
  changed_when: false
  
- name: Display Pulumi version
  ansible.builtin.debug:
    msg: "Using Pulumi version: {{ pulumi_version.stdout }}"
  when: ansible_verbosity > 0

# Pulumiコマンド定義（pulumi_env_prefixとpulumi_sudo_cmdを使用）
- name: Set Pulumi standard tasks
  ansible.builtin.set_fact:
    pulumi_commands:
      preview:      "{{ pulumi_env_prefix }} && {{ pulumi_sudo_cmd }} preview"
      up:           "{{ pulumi_env_prefix }} && {{ pulumi_sudo_cmd }} up --yes"
      destroy:      "{{ pulumi_env_prefix }} && {{ pulumi_sudo_cmd }} destroy --yes"
      refresh:      "{{ pulumi_env_prefix }} && {{ pulumi_sudo_cmd }} refresh --yes"
      stack_output: "{{ pulumi_env_prefix }} && {{ pulumi_sudo_cmd }} stack output"
      stack_ls:     "{{ pulumi_env_prefix }} && {{ pulumi_sudo_cmd }} stack ls"
      stack_rm:     "{{ pulumi_env_prefix }} && {{ pulumi_sudo_cmd }} stack rm --yes"
      config_set:   "{{ pulumi_env_prefix }} && {{ pulumi_sudo_cmd }} config set"
      build:        "npm run build"
      tsc:          "npx tsc"

# 結果変数の初期化
- name: Initialize result variables
  ansible.builtin.set_fact:
    pulumi_deployment_succeeded: false
    pulumi_deployment_failed: false
    pulumi_destroy_failed: false
    pulumi_refresh_failed: false
    pulumi_build_failed: false
    pulumi_config_failed: false
    stack_output_succeeded: false
    stack_output_failed: false
    stack_rm_failed: false
    stack_init_failed: false
