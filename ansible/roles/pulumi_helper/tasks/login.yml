# Pulumiの認証とトークン設定を一元管理するタスク
# Pulumi CloudとS3バックエンドの両方に対応

- name: Ensure Pulumi authentication
  block:
    # Pulumiのパス設定
    - name: Set Pulumi binary path if not already set
      ansible.builtin.set_fact:
        pulumi_bin_path: "/usr/local/bin/pulumi"
      when: pulumi_bin_path is not defined

    # S3バックエンド認証の処理（S3バックエンド固定）
    - name: Handle S3 backend authentication
      block:
        # S3バケット名をSSMから取得
        - name: Retrieve S3 bucket name from SSM Parameter Store
          ansible.builtin.include_role:
            name: ssm_parameter_store
            tasks_from: get_parameter
          vars:
            parameter_name: "/bootstrap/pulumi/s3bucket-name"
            decrypt: false
            store_as: "pulumi_s3_bucket_from_ssm"
            ssm_parameter_store_fail_on_missing: false
            default_value: ""

        - name: Set S3 bucket name from SSM
          ansible.builtin.set_fact:
            pulumi_s3_bucket: "{{ pulumi_s3_bucket_from_ssm }}"
          when: pulumi_s3_bucket_from_ssm | length > 0

        - name: Fail if S3 bucket name cannot be determined
          ansible.builtin.fail:
            msg: |
              ERROR: S3 bucket name is not configured in SSM Parameter Store.

              Please run the bootstrap setup to create the S3 bucket:
              1. cd bootstrap/
              2. ./setup-bootstrap.sh

              Or ensure the parameter exists in SSM: /bootstrap/pulumi/s3bucket-name
          when: pulumi_s3_bucket is not defined or pulumi_s3_bucket | length == 0

        # まず環境変数をチェック
        - name: Check for PULUMI_CONFIG_PASSPHRASE in environment
          ansible.builtin.set_fact:
            pulumi_passphrase_from_env: "{{ lookup('env', 'PULUMI_CONFIG_PASSPHRASE') }}"
          no_log: true

        # 環境変数がない場合はSSMから取得を試みる
        - name: Get passphrase from SSM if not in environment
          when: pulumi_passphrase_from_env | length == 0
          block:
            - name: Retrieve PULUMI_CONFIG_PASSPHRASE from SSM Parameter Store
              ansible.builtin.include_role:
                name: ssm_parameter_store
                tasks_from: get_parameter
              vars:
                parameter_name: "/bootstrap/pulumi/config-passphrase"
                decrypt: true
                store_as: "pulumi_config_passphrase_from_ssm"
                ssm_parameter_store_fail_on_missing: false
                default_value: ""

            - name: Set passphrase from SSM
              ansible.builtin.set_fact:
                pulumi_config_passphrase: "{{ pulumi_config_passphrase_from_ssm }}"
              when: pulumi_config_passphrase_from_ssm | length > 0
              no_log: true

        # 環境変数がある場合はそれを優先使用
        - name: Use passphrase from environment variable
          ansible.builtin.set_fact:
            pulumi_config_passphrase: "{{ pulumi_passphrase_from_env }}"
          when: pulumi_passphrase_from_env | length > 0
          no_log: true

        # パスフレーズが設定されているか最終確認
        - name: Check if passphrase is set
          ansible.builtin.set_fact:
            pulumi_passphrase_set: "{{ pulumi_config_passphrase is defined and pulumi_config_passphrase | length > 0 }}"
          no_log: true

        - name: Display passphrase source (debug mode)
          ansible.builtin.debug:
            msg: "PULUMI_CONFIG_PASSPHRASE source: {{ 'environment variable' if pulumi_passphrase_from_env | length > 0 else 'SSM Parameter Store' if pulumi_config_passphrase | length > 0 else 'not found' }}"
          when: ansible_verbosity > 1

        - name: Fail if PULUMI_CONFIG_PASSPHRASE is not available
          ansible.builtin.fail:
            msg: |
              ERROR: PULUMI_CONFIG_PASSPHRASE is not available.
              S3 backend requires a passphrase for encryption.
              
              Option 1: Run setup-bootstrap.sh to configure passphrase in SSM
              Option 2: Set environment variable manually:
                export PULUMI_CONFIG_PASSPHRASE="your-secure-passphrase"
              Option 3: Get from SSM and export if already configured:
                export PULUMI_CONFIG_PASSPHRASE=$(aws ssm get-parameter --name "/bootstrap/pulumi/config-passphrase" --with-decryption --query 'Parameter.Value' --output text)
          when: not pulumi_passphrase_set

        # 環境変数をエクスポートする共通コマンドを定義
        # 注: S3バックエンドのURLはプロジェクトごとに異なるため、
        # 実際のログインは各タスクで行う（init_stack.yml等で処理）
        - name: Set environment prefix
          ansible.builtin.set_fact:
            pulumi_env_prefix: >-
              export PULUMI_CONFIG_PASSPHRASE="{{ pulumi_config_passphrase }}";
              export AWS_REGION="{{ pulumi_s3_region }}";
              export AWS_DEFAULT_REGION="{{ pulumi_s3_region }}";
              source {{ inventory_dir }}/../../scripts/aws/aws-env.sh > /dev/null &&
              eval $({{ inventory_dir }}/../../scripts/aws/aws-env.sh) > /dev/null

    # 共通設定
    - name: Set common Pulumi settings
      block:
        # sudoを使用したPulumiコマンドのプレフィックス
        # S3バックエンドではsudoを使わない
        - name: Set Pulumi sudo command prefix
          ansible.builtin.set_fact:
            pulumi_sudo_cmd: "{{ pulumi_bin_path }}"

        # verbosity > 1 の場合のみ設定状態を表示
        - name: Display Pulumi configuration status
          ansible.builtin.debug:
            msg: |
              S3 backend configured (login will be performed per project)
              S3 bucket: {{ pulumi_s3_bucket }}
              Region: {{ pulumi_s3_region }}
          when: ansible_verbosity > 1

        # S3バケット名のソースを表示
        - name: Display S3 bucket source (debug mode)
          ansible.builtin.debug:
            msg: |
              S3 bucket name: {{ pulumi_s3_bucket }}
              Source: SSM Parameter Store (/bootstrap/pulumi/s3bucket-name)
          when: ansible_verbosity > 1

        # 認証完了フラグを設定（重複チェックを防ぐため）
        - name: Mark authentication as complete
          ansible.builtin.set_fact:
            pulumi_authenticated: true

  rescue:
    - name: Handle authentication failure
      ansible.builtin.fail:
        msg: |
          Failed to authenticate to Pulumi S3 backend.
          Please ensure:
          1. PULUMI_CONFIG_PASSPHRASE is correctly set
          2. AWS credentials are properly configured
          3. S3 bucket '{{ pulumi_s3_bucket }}' exists and is accessible
          4. AWS region is set to '{{ pulumi_s3_region }}'

          Error details: {{ ansible_failed_result.msg | default('Unknown error') }}

# チェックモード用の処理
- name: Set mock authentication for check mode
  when: ansible_check_mode
  block:
    - name: Set mock values for check mode
      ansible.builtin.set_fact:
        pulumi_config_passphrase: "mock-passphrase-for-check-mode"
        pulumi_env_prefix: >-
          export PULUMI_CONFIG_PASSPHRASE='mock-passphrase-for-check-mode';
          export AWS_REGION='{{ pulumi_s3_region }}';
          export AWS_DEFAULT_REGION='{{ pulumi_s3_region }}'
        pulumi_sudo_cmd: "pulumi"
        pulumi_bin_path: "/usr/local/bin/pulumi"
        pulumi_authenticated: true

    - name: Display check mode notice
      ansible.builtin.debug:
        msg: "Running in check mode - Pulumi S3 authentication will be mocked"
      when: ansible_verbosity > 1
