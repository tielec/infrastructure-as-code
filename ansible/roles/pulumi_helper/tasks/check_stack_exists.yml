# ansible/roles/pulumi_helper/tasks/check_stack_exists.yml
# スタックの存在を確認する専用タスク
# 入力: resolved_stack_name, stack_name
# 出力: stack_exists (true/false)

# 共通変数の読み込み（念のため）
- name: Load common variables if needed
  ansible.builtin.include_tasks: common_vars.yml
  when: pulumi_env_export is not defined

- name: List all available stacks
  ansible.builtin.shell: |
    cd {{ pulumi_project_path }}
    {{ pulumi_env_export }}
    {{ pulumi_aws_auth }}
    sudo -E {{ pulumi_bin_path }} stack ls --json 2>/dev/null || echo '[]'
  register: stack_list
  changed_when: false
  when: not ansible_check_mode

- name: Parse stack list output
  ansible.builtin.set_fact:
    stack_list_parsed: >-
      {%- if stack_list.stdout is defined and stack_list.stdout | length > 0 -%}
        {%- set parsed = stack_list.stdout | from_json | default([]) -%}
        {{ parsed }}
      {%- else -%}
        []
      {%- endif -%}
  when: not ansible_check_mode

- name: Check if stack exists
  ansible.builtin.set_fact:
    stack_exists: >-
      {%- set search_name = resolved_stack_name | default(stack_name) -%}
      {%- set found_stacks = [] -%}
      {%- for stack in stack_list_parsed | default([]) -%}
        {%- if stack.name is defined -%}
          {%- if stack.name == search_name or stack.name == stack_name or stack.name.endswith('/' + stack_name) -%}
            {%- set _ = found_stacks.append(stack) -%}
          {%- endif -%}
        {%- endif -%}
      {%- endfor -%}
      {{ found_stacks | length > 0 }}
  when: not ansible_check_mode

- name: Set mock stack existence (check mode)
  ansible.builtin.set_fact:
    stack_exists: false
  when: ansible_check_mode

- name: Display stack existence check result
  ansible.builtin.debug:
    msg: |
      Stack '{{ resolved_stack_name | default(stack_name) }}' exists: {{ stack_exists }}
      Backend: {{ backend_display_name | default(pulumi_backend_type) }}
  when: ansible_verbosity > 0
