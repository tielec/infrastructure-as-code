# Pulumiスタックを削除するヘルパータスク

# 認証処理を実行
- name: Ensure Pulumi authentication
  ansible.builtin.include_tasks: login.yml
  when: pulumi_authenticated is not defined

# S3バックエンドの場合、プロジェクト別ログイン
- name: Handle S3 backend project login
  ansible.builtin.include_tasks: s3_backend_login.yml
  when: pulumi_backend_type == 's3'

- name: Remove Pulumi stack
  block:
    # スタック名の検証
    - name: Verify stack name is provided
      ansible.builtin.fail:
        msg: "Required variable 'stack_name' is not defined"
      when: stack_name is not defined or stack_name | length == 0
    
    # スタック名を解決
    - name: Resolve stack name
      ansible.builtin.include_tasks: resolve_stack_name.yml
    
    # 削除対象のスタックを検索
    - name: Find stack to remove
      ansible.builtin.shell: |
        cd {{ pulumi_project_path }}
        # スタック名で終わるものを検索
        {{ pulumi_env_prefix }} && {{ pulumi_sudo_cmd }} stack ls --json | jq -r '.[].name | select(endswith("/{{ stack_name }}") or . == "{{ stack_name }}")' | head -1
      register: found_stack
      changed_when: false
      when: not ansible_check_mode
    
    # スタックが見つからない場合
    - name: Skip if stack not found
      ansible.builtin.debug:
        msg: "Stack '{{ stack_name }}' not found. Skipping removal."
      when: 
        - not ansible_check_mode
        - found_stack.stdout | default('') | trim == ''
    
    # スタックを削除
    - name: Remove stack
      ansible.builtin.shell: |
        cd {{ pulumi_project_path }}
        source {{ inventory_dir }}/../../scripts/aws/aws-env.sh > /dev/null
        eval $({{ inventory_dir }}/../../scripts/aws/aws-env.sh) > /dev/null
        {{ pulumi_env_prefix }} && {{ pulumi_sudo_cmd }} stack rm --yes "{{ found_stack.stdout | trim }}"
      register: stack_rm_result
      changed_when: stack_rm_result.rc == 0
      when: 
        - not ansible_check_mode
        - found_stack.stdout | default('') | trim != ''
    
    - name: Report removal success
      ansible.builtin.debug:
        msg: "Successfully removed stack '{{ found_stack.stdout | trim }}'"
      when: 
        - not ansible_check_mode
        - stack_rm_result is defined
        - stack_rm_result.rc == 0
  
  rescue:
    - name: Display error message
      ansible.builtin.debug:
        msg: "Failed to remove Pulumi stack '{{ stack_name }}'"

# チェックモード
- name: Mock stack removal (check mode)
  ansible.builtin.debug:
    msg: "Would remove Pulumi stack '{{ stack_name }}' (check mode active)"
  when: ansible_check_mode
