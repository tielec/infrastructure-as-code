---
# コントローラーデプロイタスク

- name: Display controller deployment information
  ansible.builtin.debug:
    msg: |
      Deploying Jenkins Controller Infrastructure:
      - Project: {{ project_name }}
      - Controller Pulumi Project: {{ controller_project_name }}
      - Network Pulumi Project: {{ network_project_name }}
      - Security Pulumi Project: {{ security_project_name }}
      - Storage Pulumi Project: {{ storage_project_name }}
      - LoadBalancer Pulumi Project: {{ loadbalancer_project_name }}
      - Environment: {{ env_name }}
      - Jenkins Version: {{ jenkins_version }}
      - Jenkins Color: {{ jenkins_color }}
      - Recovery Mode: {{ recovery_mode }}

# ファイル権限設定
- name: Ensure aws-env.sh has execute permissions
  ansible.builtin.file:
    path: "{{ scripts_dir }}/aws/aws-env.sh"
    mode: '0755'
  register: aws_env_script_permission
  no_log: true  # 詳細なログを抑制
  
- name: Report permission update
  ansible.builtin.debug:
    msg: "aws-env.sh スクリプトに実行権限を付与しました"
  when: aws_env_script_permission.changed

# Pulumiデプロイ
- name: Deploy Controller Infrastructure with Pulumi
  block:
    # Pulumiヘルパータスクを呼び出す
    - name: Initialize controller stack
      ansible.builtin.include_role:
        name: pulumi_helper
        tasks_from: init_stack
      vars:
        pulumi_project_path: "{{ pulumi_path }}/jenkins-controller"
        stack_name: "{{ env_name }}"
    
    - name: Configure controller stack - AWS region
      ansible.builtin.include_role:
        name: pulumi_helper
        tasks_from: set_config
      vars:
        pulumi_project_path: "{{ pulumi_path }}/jenkins-controller"
        config_key: "aws:region"
        config_value: "{{ aws_region_name }}"

    # SSMパラメータの確認
    - name: Get project name from SSM Parameter Store
      ansible.builtin.include_role:
        name: ssm_parameter_store
        tasks_from: get_parameter
      vars:
        parameter_name: "/jenkins-infra/{{ env_name }}/config/project-name"
        store_as: "ssm_project_name"
    
    - name: Get VPC ID from SSM Parameter Store
      ansible.builtin.include_role:
        name: ssm_parameter_store
        tasks_from: get_parameter
      vars:
        parameter_name: "/jenkins-infra/{{ env_name }}/network/vpc-id"
        store_as: "ssm_vpc_id"
    
    - name: Get Jenkins security group ID from SSM Parameter Store
      ansible.builtin.include_role:
        name: ssm_parameter_store
        tasks_from: get_parameter
      vars:
        parameter_name: "/jenkins-infra/{{ env_name }}/security/jenkins-sg-id"
        store_as: "ssm_jenkins_sg_id"
    
    - name: Get EFS file system ID from SSM Parameter Store
      ansible.builtin.include_role:
        name: ssm_parameter_store
        tasks_from: get_parameter
      vars:
        parameter_name: "/jenkins-infra/{{ env_name }}/storage/efs-file-system-id"
        store_as: "ssm_efs_id"
    
    - name: Get Blue target group ARN from SSM Parameter Store
      ansible.builtin.include_role:
        name: ssm_parameter_store
        tasks_from: get_parameter
      vars:
        parameter_name: "/jenkins-infra/{{ env_name }}/loadbalancer/blue-target-group-arn"
        store_as: "ssm_blue_tg_arn"
    
    - name: Get Green target group ARN from SSM Parameter Store
      ansible.builtin.include_role:
        name: ssm_parameter_store
        tasks_from: get_parameter
      vars:
        parameter_name: "/jenkins-infra/{{ env_name }}/loadbalancer/green-target-group-arn"
        store_as: "ssm_green_tg_arn"
    
    - name: Display configuration from SSM
      ansible.builtin.debug:
        msg: |
          Using configuration from SSM:
          - Project Name: {{ ssm_project_name }}
          - VPC ID: {{ ssm_vpc_id }}
          - Jenkins Security Group ID: {{ ssm_jenkins_sg_id }}
          - EFS File System ID: {{ ssm_efs_id }}
          - Blue Target Group ARN: {{ ssm_blue_tg_arn }}
          - Green Target Group ARN: {{ ssm_green_tg_arn }}
    
    
    # Pulumiプレビュー
    - name: Preview controller deployment
      ansible.builtin.include_role:
        name: pulumi_helper
        tasks_from: preview
      vars:
        pulumi_project_path: "{{ pulumi_path }}/jenkins-controller"
    
    # Pulumiデプロイ
    - name: Deploy controller stack
      ansible.builtin.include_role:
        name: pulumi_helper
        tasks_from: deploy
      vars:
        pulumi_project_path: "{{ pulumi_path }}/jenkins-controller"
    
    # デプロイ後に少し待機してスタックが完全に更新されるのを待つ
    - name: Wait for stack outputs to be available
      ansible.builtin.pause:
        seconds: 10
      when: not ansible_check_mode
    
    # Jenkinsインスタンス情報の取得
    - name: Get Jenkins instance ID from SSM Parameter Store
      ansible.builtin.include_role:
        name: ssm_parameter_store
        tasks_from: get_parameter
      vars:
        parameter_name: "/jenkins-infra/{{ env_name }}/controller/instance-id"
        store_as: "jenkins_instance_id"
    
    - name: Get Jenkins private IP from SSM Parameter Store
      ansible.builtin.include_role:
        name: ssm_parameter_store
        tasks_from: get_parameter
      vars:
        parameter_name: "/jenkins-infra/{{ env_name }}/controller/private-ip"
        store_as: "jenkins_private_ip"
    
    - name: Get deployed Jenkins color from SSM Parameter Store
      ansible.builtin.include_role:
        name: ssm_parameter_store
        tasks_from: get_parameter
      vars:
        parameter_name: "/jenkins-infra/{{ env_name }}/controller/deployed-color"
        store_as: "deployed_jenkins_color"
    
    # SSMエージェントが準備完了になるまで待機
    - name: Wait for SSM agent to be ready on Jenkins instance
      ansible.builtin.include_role:
        name: aws_cli_helper
        tasks_from: wait_for_ssm
      vars:
        instance_id: "{{ jenkins_instance_id }}"
        max_wait_time: 300  # 5分間待機
        check_interval: 10  # 10秒ごとにチェック
        aws_region: "{{ aws_region_name }}"
      when: jenkins_instance_id is defined

    - name: Set controller facts for use in other playbooks
      ansible.builtin.set_fact:
        controller_deployed: true
        jenkins_instance_id: "{{ jenkins_instance_id }}"
        controller_stack_name: "{{ controller_project_name }}"
      
    - name: Summary of controller deployment
      ansible.builtin.debug:
        msg: |
          Jenkins Controller Infrastructure Deployed Successfully:
          - Instance ID: {{ jenkins_instance_id }}
          - Private IP: {{ jenkins_private_ip }}
          - Deployed Jenkins Color: {{ deployed_jenkins_color }}
          - Recovery Mode: {{ recovery_mode }}
          - SSM Agent Status: Ready
  
  rescue:
    - name: Set controller deployment status on failure
      ansible.builtin.set_fact:
        controller_deployed: false
      
    - name: Display error
      ansible.builtin.debug:
        msg: "Failed to deploy controller infrastructure. See error details above."
      
    - name: Fail the playbook
      ansible.builtin.fail:
        msg: "Controller deployment failed."
