---
# API Gatewayのデプロイタスク

- name: Display API Gateway deployment information
  ansible.builtin.debug:
    msg: |
      Deploying API Gateway:
      - Project: {{ project_name }}
      - API Gateway Pulumi Project: {{ api_gateway_project_name }}
      - Environment: {{ env_name }}
      - Rate Limit: {{ api_rate_limit }} req/s

# Pulumiデプロイ
- name: Deploy API Gateway with Pulumi
  block:
    # Pulumiヘルパータスクを呼び出す
    - name: Initialize API Gateway stack
      ansible.builtin.include_role:
        name: pulumi_helper
        tasks_from: init_stack
      vars:
        pulumi_project_path: "{{ pulumi_path }}/lambda-api-gateway"
        stack_name: "{{ env_name }}"
    
    - name: Configure API Gateway stack
      ansible.builtin.shell: |
        {{ scripts_dir }}/aws-env.sh
        cd {{ pulumi_path }}/lambda-api-gateway
        sudo -E /root/.pulumi/bin/pulumi config set aws:region {{ aws_region_name }}
        sudo -E /root/.pulumi/bin/pulumi config set {{ api_gateway_project_name }}:projectName {{ project_name }}
        sudo -E /root/.pulumi/bin/pulumi config set {{ api_gateway_project_name }}:functionsStackName {{ functions_project_name }}.{{ env_name }}
        sudo -E /root/.pulumi/bin/pulumi config set {{ api_gateway_project_name }}:rateLimit {{ api_rate_limit | string }}
        sudo -E /root/.pulumi/bin/pulumi config set {{ api_gateway_project_name }}:stageName v1
      register: pulumi_config_result
      changed_when: pulumi_config_result.rc == 0
    
    # Pulumiプレビュー
    - name: Preview API Gateway deployment
      ansible.builtin.include_role:
        name: pulumi_helper
        tasks_from: preview
      vars:
        pulumi_project_path: "{{ pulumi_path }}/lambda-api-gateway"
      when: preview_only | default(false) | bool
    
    # Pulumiデプロイ
    - name: Deploy API Gateway stack
      ansible.builtin.include_role:
        name: pulumi_helper
        tasks_from: deploy
      vars:
        pulumi_project_path: "{{ pulumi_path }}/lambda-api-gateway"
      when: not preview_only | default(false) | bool
    
    # API Gateway情報の取得
    - name: Get API Gateway outputs
      ansible.builtin.shell: |
        cd {{ pulumi_path }}/lambda-api-gateway
        export PULUMI_ACCESS_TOKEN="{{ lookup('env', 'PULUMI_ACCESS_TOKEN') }}"
        sudo -E /root/.pulumi/bin/pulumi stack output --json
      register: api_outputs_raw
      changed_when: false
      when: not preview_only | default(false) | bool
    
    - name: Parse API Gateway outputs
      ansible.builtin.set_fact:
        api_outputs: "{{ api_outputs_raw.stdout | from_json }}"
      when: 
        - not preview_only | default(false) | bool
        - api_outputs_raw.stdout is defined
    
    # デプロイ成功を示す変数設定
    - name: Set API Gateway deployment status
      ansible.builtin.set_fact:
        api_gateway_deployed: true
        api_endpoint: "{{ api_outputs.apiEndpoint | default('N/A') }}"
      when: not preview_only | default(false) | bool
    
    # API Gateway情報の表示
    - name: Display API Gateway deployment summary
      ansible.builtin.debug:
        msg: |
          API Gateway deployment successful:
          - API ID: {{ api_outputs.apiId | default('N/A') }}
          - API Endpoint: {{ api_outputs.apiEndpoint | default('N/A') }}
          - Stage: {{ api_outputs.stageName | default('N/A') }}
          - API Key Required: Yes
          
          To get API key:
          pulumi stack output apiKeyInfo -C {{ pulumi_path }}/{{ api_gateway_project_name }}
      when: 
        - api_gateway_deployed is defined and api_gateway_deployed
        - api_outputs is defined
  
  rescue:
    - name: Display error on API Gateway deployment
      ansible.builtin.debug:
        msg: "Failed to deploy API Gateway. See error details above."
      
    - name: Set API Gateway deployment failure
      ansible.builtin.set_fact:
        api_gateway_deployed: false
      
    - name: Fail the playbook
      ansible.builtin.fail:
        msg: "API Gateway deployment failed."
