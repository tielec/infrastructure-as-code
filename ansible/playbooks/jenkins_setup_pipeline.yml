---
# jenkins_setup_pipeline.yml
# Jenkins環境構築の全体フローを管理するプレイブック

- name: Jenkins Infrastructure Setup Pipeline
  hosts: localhost
  connection: local
  gather_facts: yes
  
  vars:
    # 環境名はコマンドラインから指定可能
    env_name: "{{ env | default('dev') }}"  
  pre_tasks:
    # all.yml から変数を読み込む
    - name: Include group_vars/all.yml
      ansible.builtin.include_vars:
        file: "{{ playbook_dir }}/../inventory/group_vars/all.yml"
        
    # 必要な変数を設定
    - name: Set required variables from all.yml
      ansible.builtin.set_fact:
        project_name: "{{ infra.project_name }}"
        aws_region_name: "{{ infra.aws.default_region }}"
        network_project_name: "{{ infra.pulumi.network_project }}"
        security_project_name: "{{ infra.pulumi.security_project }}"
        storage_project_name: "{{ infra.pulumi.storage_project }}"
        loadbalancer_project_name: "{{ infra.pulumi.loadbalancer_project }}"
    
  roles:
    - aws_setup
    - pulumi_helper
    
  tasks:
    - name: Check scripts directory exists
      ansible.builtin.stat:
        path: "{{ scripts_dir }}"
      register: scripts_dir_stat
      
    - name: Fail if scripts directory doesn't exist
      ansible.builtin.fail:
        msg: "Scripts directory doesn't exist: {{ scripts_dir }}"
      when: not scripts_dir_stat.stat.exists
    
    - name: Ensure all shell scripts have proper execute permissions
      ansible.builtin.find:
        paths: "{{ scripts_dir }}"
        patterns: "*.sh"
        recurse: yes
      register: script_files
      
    - name: Set execute permissions on shell scripts
      ansible.builtin.file:
        path: "{{ item.path }}"
        mode: "0755"
      loop: "{{ script_files.files }}"
      register: script_perm_updates
      
    - name: Display scripts that needed permission updates
      ansible.builtin.debug:
        msg: "実行権限を付与: {{ item.path }}"
      loop: "{{ script_perm_updates.results }}"
      when: item.changed | default(false)
    
    - name: Display pipeline information
      ansible.builtin.debug:
        msg: |
          Jenkins Infrastructure Setup Pipeline
          ==================================
          Project: {{ project_name }}
          Environment: {{ env_name }}
          AWS Region: {{ aws_region_name }}
          
          Pulumi Projects:
          - Network: {{ network_project_name }}
          - Security: {{ security_project_name }}
          - Storage: {{ storage_project_name }}
          - LoadBalancer: {{ loadbalancer_project_name }}
    
    - name: Check Ansible version
      ansible.builtin.debug:
        msg: "Ansible version: {{ ansible_version.full }}"
    
    # ネットワークインフラのデプロイ
    - name: Deploy Network Infrastructure
      ansible.builtin.include_role:
        name: jenkins_network
      when: run_network | default(true) | bool
      
    # ネットワークデプロイが成功したらセキュリティグループをデプロイ
    - name: Deploy Security Groups
      ansible.builtin.include_role:
        name: jenkins_security
      when: 
        - network_deployed is defined and network_deployed
        - run_security | default(true) | bool
        
    # セキュリティグループデプロイが成功したらストレージ（EFS）をデプロイ
    - name: Deploy Storage Infrastructure (EFS)
      ansible.builtin.include_role:
        name: jenkins_storage
      when: 
        - network_deployed is defined and network_deployed
        - security_deployed is defined and security_deployed
        - run_storage | default(true) | bool
        
    # デプロイメント結果サマリー
    - name: Deployment Summary
      ansible.builtin.debug:
        msg: |
          Jenkins Infrastructure Deployment Summary
          =======================================
          Network: {{ network_deployed | default(false) }}
          Security: {{ security_deployed | default(false) }}
          Storage (EFS): {{ storage_deployed | default(false) }}
          
          # 今後追加予定:
          # Load Balancer: (Not deployed yet)
          # Jenkins Controller: (Not deployed yet)
          # Jenkins Agent: (Not deployed yet)
          # Jenkins Application: (Not deployed yet)
