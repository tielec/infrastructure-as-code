---
# lambda_ip_whitelist.yml
# Lambda API IP Whitelist管理プレイブック

- name: Manage Lambda API IP Whitelist
  hosts: localhost
  connection: local
  gather_facts: yes
  
  vars:
    # 環境名（必須）
    env_name: "{{ env | mandatory('Environment name is required. Use -e env=dev/staging/prod') }}"
    # 操作（必須）
    operation: "{{ op | mandatory('Operation is required. Use -e op=init/list/add/remove/update') }}"
    # パスを明示的に定義（inventory_dirを基準にした相対パス）
    scripts_dir: "{{ inventory_dir }}/../../scripts"
  
  pre_tasks:
    # all.yml から変数を読み込む
    - name: Include group_vars/all.yml
      ansible.builtin.include_vars:
        file: "{{ inventory_dir }}/group_vars/all.yml"
        
    # 必要な変数を設定
    - name: Set required variables from all.yml
      ansible.builtin.set_fact:
        project_name: "{{ lambda_api_infra.project_name }}"
        aws_region_name: "{{ lambda_api_infra.aws.default_region }}"
        lambda_api: "{{ lambda_api }}"
        
    - name: Display operation information
      ansible.builtin.debug:
        msg: |
          Lambda API IP Whitelist Management
          =================================
          Environment: {{ env_name }}
          Operation: {{ operation }}
          Secret Pattern: {{ lambda_api.ip_whitelist.secret_name_pattern }}
          
          Available operations:
          - init: Initialize IP whitelist
          - list: List current IP whitelist
          - add: Add new client (requires: client_id, client_name, ip_addresses)
          - remove: Remove client (requires: client_id)
          - update: Update client (requires: client_id)
          
          Examples:
          # Initialize whitelist
          ansible-playbook playbooks/lambda_ip_whitelist.yml -e "env=dev op=init"
          
          # List current IPs
          ansible-playbook playbooks/lambda_ip_whitelist.yml -e "env=dev op=list"
          
          # Add new client
          ansible-playbook playbooks/lambda_ip_whitelist.yml \
            -e "env=dev op=add client_id=client-001 client_name='External Platform' ip_addresses='192.0.2.0/24,198.51.100.0/24'"
          
          # Remove client
          ansible-playbook playbooks/lambda_ip_whitelist.yml -e "env=dev op=remove client_id=client-001"
          
          # Update client
          ansible-playbook playbooks/lambda_ip_whitelist.yml \
            -e "env=dev op=update client_id=client-001 client_enabled=false"
  
  roles:
    - aws_setup
    
  tasks:
    - name: Execute IP whitelist operation
      ansible.builtin.include_role:
        name: lambda_ip_whitelist
      vars:
        operation: "{{ op }}"
