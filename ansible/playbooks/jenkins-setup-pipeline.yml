---
# jenkins-setup-pipeline.yml
# Jenkins環境構築の全体フローを管理するプレイブック

- name: Jenkins Infrastructure Setup Pipeline
  hosts: localhost
  connection: local
  gather_facts: yes
  
  vars:
    # 固定の値を使用する
    project_name: "jenkins-infra"
    env_name: "{{ env | default('dev') }}"
    aws_region_name: "ap-northeast-1"
    pulumi_path: "{{ playbook_dir }}/../../pulumi"
    
  tasks:
    - name: Display pipeline information
      ansible.builtin.debug:
        msg: |
          Jenkins Infrastructure Setup Pipeline
          ==================================
          Project: {{ project_name }}
          Environment: {{ env_name }}
          AWS Region: {{ aws_region_name }}
    
    - name: Check Ansible version
      ansible.builtin.debug:
        msg: "Ansible version: {{ ansible_version.full }}"
    
    - name: Check AWS credentials
      ansible.builtin.shell: aws sts get-caller-identity
      register: aws_identity
      changed_when: false
      ignore_errors: yes
      
    - name: Display AWS identity
      ansible.builtin.debug:
        msg: "AWS Identity: {{ aws_identity.stdout }}"
      when: aws_identity.rc == 0
      
    - name: Warning about AWS credentials
      ansible.builtin.debug:
        msg: "WARNING: AWS credentials not configured or not working properly"
      when: aws_identity.rc != 0
      
    - name: Check Pulumi installation
      ansible.builtin.shell: pulumi version
      register: pulumi_version
      changed_when: false
      ignore_errors: yes
      
    - name: Display Pulumi version
      ansible.builtin.debug:
        msg: "Pulumi version: {{ pulumi_version.stdout }}"
      when: pulumi_version.rc == 0
      
    - name: Warning about Pulumi installation
      ansible.builtin.debug:
        msg: "WARNING: Pulumi not installed or not in PATH"
      when: pulumi_version.rc != 0
    
    # ネットワークインフラのデプロイ
    - name: Deploy Network Infrastructure
      ansible.builtin.include_tasks: deploy_jenkins_network.yml
      
    # ネットワークデプロイが成功したらセキュリティグループをデプロイ
    - name: Deploy Security Groups
      ansible.builtin.include_tasks: deploy_jenkins_security.yml
      when: network_deployed is defined and network_deployed

    # 以下はコメントアウト - 段階的に実装していく
    # ストレージ（EFS）のデプロイ
    # - name: Deploy Storage (EFS)
    #   ansible.builtin.include_tasks: deploy_jenkins_storage.yml
    #   when: security_deployed | default(false) | bool
    
    # ロードバランサーのデプロイ
    # - name: Deploy Load Balancer
    #   ansible.builtin.include_tasks: deploy_jenkins_loadbalancer.yml
    #   when: security_deployed | default(false) | bool
    
    # Jenkinsコントローラーのデプロイ
    # - name: Deploy Jenkins Controller
    #   ansible.builtin.include_tasks: deploy_jenkins_controller.yml
    #   when: storage_deployed | default(false) | bool and loadbalancer_deployed | default(false) | bool
    
    # Jenkinsエージェントのデプロイ
    # - name: Deploy Jenkins Agent
    #   ansible.builtin.include_tasks: deploy_jenkins_agent.yml
    #   when: controller_deployed | default(false) | bool
    
    # Jenkinsアプリケーション設定のデプロイ
    # - name: Deploy Jenkins Application Configuration
    #   ansible.builtin.include_tasks: deploy_jenkins_application.yml
    #   when: controller_deployed | default(false) | bool
    
    # デプロイメント結果サマリー
    - name: Deployment Summary
      ansible.builtin.debug:
        msg: |
          Jenkins Infrastructure Deployment Summary
          =======================================
          Network: {{ network_deployed | default(false) }}
          Security: {{ security_deployed | default(false) }}
          
          # 今後追加予定:
          # Storage: (Not deployed yet)
          # Load Balancer: (Not deployed yet)
          # Jenkins Controller: (Not deployed yet)
          # Jenkins Agent: (Not deployed yet)
          # Jenkins Application: (Not deployed yet)
