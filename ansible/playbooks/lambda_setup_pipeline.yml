---
# lambda_setup_pipeline.yml
# Lambda API環境構築の全体フローを管理するプレイブック
# 各lambda_*.ymlプレイブックを順番に実行
#
# 使用方法 (ansibleディレクトリから実行):
#   ansible-playbook playbooks/lambda_setup_pipeline.yml -e "env=dev"
#   ansible-playbook playbooks/lambda_setup_pipeline.yml -e "env=dev run_network=true run_security=false"

- name: Lambda API Infrastructure Setup Pipeline - Start
  hosts: localhost
  connection: local
  gather_facts: no
  
  vars:
    # 環境名はコマンドラインから指定可能
    env_name: "{{ env | default('dev') }}"
  
  tasks:
    - name: Display setup information
      ansible.builtin.debug:
        msg: |
          Lambda API Infrastructure Setup Pipeline
          ==================================
          Environment: {{ env_name }}
          Starting infrastructure deployment...

# SSMパラメータストアの初期化（最初に実行）
- import_playbook: lambda/lambda_ssm_init.yml
  vars:
    env: "{{ env | default('dev') }}"
  when: run_ssm_init | default(true) | bool
  tags:
    - ssm-init
    - always

# ネットワークインフラのデプロイ
- import_playbook: lambda/lambda_network.yml
  vars:
    env: "{{ env | default('dev') }}"
  when: run_network | default(true) | bool
  tags:
    - network

# セキュリティグループのデプロイ
- import_playbook: lambda/lambda_security.yml
  vars:
    env: "{{ env | default('dev') }}"
  when: run_security | default(true) | bool
  tags:
    - security

# VPCエンドポイントのデプロイ
- import_playbook: lambda/lambda_vpce.yml
  vars:
    env: "{{ env | default('dev') }}"
  when: run_vpce | default(true) | bool
  tags:
    - vpce

# Lambda関数のデプロイ
- import_playbook: lambda/lambda_functions.yml
  vars:
    env: "{{ env | default('dev') }}"
  when: run_functions | default(true) | bool
  tags:
    - functions

# API Gatewayのデプロイ
- import_playbook: lambda/lambda_api_gateway.yml
  vars:
    env: "{{ env | default('dev') }}"
  when: run_api_gateway | default(true) | bool
  tags:
    - api-gateway

- name: Setup Complete
  hosts: localhost
  connection: local
  gather_facts: no
  
  vars:
    env_name: "{{ env | default('dev') }}"
  
  tasks:
    - name: Display deployment summary
      ansible.builtin.debug:
        msg: |
          Lambda API Infrastructure Deployment Complete
          ==========================================
          
          Environment: {{ env_name }}
          
          All specified components have been processed for deployment.
          
          Next steps:
          1. Access your API through the API Gateway endpoint
          2. Use the API key for authentication
          3. Monitor Lambda functions through CloudWatch
          
          To destroy this infrastructure:
          ansible-playbook playbooks/lambda_teardown_pipeline.yml -e "env={{ env_name }}"