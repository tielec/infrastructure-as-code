---
# deploy_jenkins_storage.yml
# Jenkinsインフラのストレージリソース（EFS）をデプロイ

- name: Deploy Jenkins Storage Infrastructure
  hosts: localhost
  connection: local
  gather_facts: no
  
  vars:
    # 既定値を直接指定 - 再帰的な参照を避ける
    project_name: "{{ lookup('env', 'PROJECT_NAME') | default('jenkins-infra') }}"
    env_name: "{{ lookup('env', 'ENV_NAME') | default(env) | default('dev') }}"
    aws_region_name: "{{ lookup('env', 'AWS_REGION_NAME') | default('ap-northeast-1') }}"
    storage_project_name: "jenkins-storage"
    network_project_name: "jenkins-network"
    security_project_name: "jenkins-security"
    pulumi_path: "{{ playbook_dir }}/../../pulumi"
  
  tasks:
    # 明示的に渡された値がある場合は上書き
    - name: Override variables with explicitly provided values
      ansible.builtin.set_fact:
        project_name: "{{ project_name_value | default(project_name) }}"
        env_name: "{{ env_name_value | default(env_name) }}"
        aws_region_name: "{{ aws_region_name_value | default(aws_region_name) }}"
        storage_project_name: "{{ storage_project_name_value | default(storage_project_name) }}"
        network_project_name: "{{ network_project_name_value | default(network_project_name) }}"
        security_project_name: "{{ security_project_name_value | default(security_project_name) }}"
        pulumi_path: "{{ pulumi_path_value | default(pulumi_path) }}"
      when: project_name_value is defined or env_name_value is defined or aws_region_name_value is defined or storage_project_name_value is defined or network_project_name_value is defined or security_project_name_value is defined or pulumi_path_value is defined

    - name: Display variables to be used
      ansible.builtin.debug:
        msg: |
          Using the following values:
          - project_name: {{ project_name }}
          - env_name: {{ env_name }}
          - aws_region_name: {{ aws_region_name }}
          - storage_project_name: {{ storage_project_name }}
          - network_project_name: {{ network_project_name }}
          - security_project_name: {{ security_project_name }}

    - name: Ensure aws-env.sh has execute permissions
      ansible.builtin.file:
        path: "{{ playbook_dir }}/../../scripts/aws-env.sh"
        mode: '0755'
      register: aws_env_script_permission
      
    - name: Report permission update
      ansible.builtin.debug:
        msg: "aws-env.sh スクリプトに実行権限を付与しました"
      when: aws_env_script_permission.changed

    - name: Deploy Storage Infrastructure with Pulumi
      block:
        - name: Display storage deployment information
          ansible.builtin.debug:
            msg: |
              Deploying Storage Infrastructure:
              - Project: {{ project_name }}
              - Storage Pulumi Project: {{ storage_project_name }}
              - Network Pulumi Project: {{ network_project_name }}
              - Security Pulumi Project: {{ security_project_name }}
              - Environment: {{ env_name }}
        
        # Pulumiヘルパータスクを呼び出す
        - name: Initialize storage stack
          ansible.builtin.include_role:
            name: pulumi_helper
            tasks_from: init_stack
          vars:
            pulumi_project_path: "{{ pulumi_path }}/storage"
            stack_name: "{{ env_name }}"
        
        - name: Configure storage stack
          ansible.builtin.shell: |
            cd {{ pulumi_path }}/storage
            source {{ playbook_dir }}/../../scripts/aws-env.sh 
            eval $({{ playbook_dir }}/../../scripts/aws-env.sh)
            
            sudo -E /root/.pulumi/bin/pulumi config set aws:region {{ aws_region_name }}
            sudo -E /root/.pulumi/bin/pulumi config set {{ storage_project_name }}:projectName {{ project_name }}
            sudo -E /root/.pulumi/bin/pulumi config set {{ storage_project_name }}:networkStackName {{ network_project_name }}
            sudo -E /root/.pulumi/bin/pulumi config set {{ storage_project_name }}:securityStackName {{ security_project_name }}
          register: pulumi_config_result
          changed_when: pulumi_config_result.rc == 0
        
        # 依存関係の確認: NetworkとSecurityがデプロイ済みであることを確認
        - name: Check network stack outputs
          ansible.builtin.include_role:
            name: pulumi_helper
            tasks_from: get_outputs
          vars:
            pulumi_project_path: "{{ pulumi_path }}/network"
            output_name: "vpcId"
            mock_output: "mock-vpc-id-for-check-mode"
        
        - name: Set network VPC ID
          ansible.builtin.set_fact:
            network_vpc_id: "{{ stack_output_result.stdout | trim }}"
        
        - name: Check security stack outputs
          ansible.builtin.include_role:
            name: pulumi_helper
            tasks_from: get_outputs
          vars:
            pulumi_project_path: "{{ pulumi_path }}/security"
            output_name: "efsSecurityGroupId"
            mock_output: "mock-efs-sg-id"
        
        - name: Set EFS security group ID
          ansible.builtin.set_fact:
            efs_sg_id: "{{ stack_output_result.stdout | trim }}"
        
        - name: Display dependency validation
          ansible.builtin.debug:
            msg: |
              Dependency validation:
              VPC ID from network stack: {{ network_vpc_id }}
              EFS Security Group ID from security stack: {{ efs_sg_id }}
        
        # Pulumiプレビュー
        - name: Preview storage deployment
          ansible.builtin.include_role:
            name: pulumi_helper
            tasks_from: preview
          vars:
            pulumi_project_path: "{{ pulumi_path }}/storage"
        
        # Pulumiデプロイ
        - name: Deploy storage stack
          ansible.builtin.include_role:
            name: pulumi_helper
            tasks_from: deploy
          vars:
            pulumi_project_path: "{{ pulumi_path }}/storage"
        
        # デプロイ後に少し待機してスタックが完全に更新されるのを待つ
        - name: Wait for stack outputs to be available
          ansible.builtin.pause:
            seconds: 10
          when: not ansible_check_mode
        
        # EFSファイルシステムIDの取得
        - name: Get EFS file system ID
          ansible.builtin.include_role:
            name: pulumi_helper
            tasks_from: get_outputs
          vars:
            pulumi_project_path: "{{ pulumi_path }}/storage"
            output_name: "efsFileSystemId"
            mock_output: "mock-efs-id"
        
        - name: Set EFS file system ID
          ansible.builtin.set_fact:
            efs_file_system_id: "{{ stack_output_result.stdout | trim }}"
        
        # Jenkins Access Point IDの取得
        - name: Get Jenkins access point ID
          ansible.builtin.include_role:
            name: pulumi_helper
            tasks_from: get_outputs
          vars:
            pulumi_project_path: "{{ pulumi_path }}/storage"
            output_name: "jenkinsAccessPointId"
            mock_output: "mock-jenkins-ap-id"
        
        - name: Set Jenkins access point ID
          ansible.builtin.set_fact:
            jenkins_access_point_id: "{{ stack_output_result.stdout | trim }}"
        
        - name: Set storage facts for use in other playbooks
          ansible.builtin.set_fact:
            storage_deployed: true
            # スタック参照情報も保存
            storage_stack_name: "{{ storage_project_name }}"
          
        - name: Summary of storage deployment
          ansible.builtin.debug:
            msg: |
              Storage Infrastructure Deployed Successfully:
              - EFS File System ID: {{ efs_file_system_id }}
              - Jenkins Access Point ID: {{ jenkins_access_point_id }}
      
      rescue:
        - name: Set storage deployment status on failure
          ansible.builtin.set_fact:
            storage_deployed: false
          
        - name: Display error
          ansible.builtin.debug:
            msg: "Failed to deploy storage infrastructure. See error details above."
          
        - name: Fail the playbook
          ansible.builtin.fail:
            msg: "Storage deployment failed."
