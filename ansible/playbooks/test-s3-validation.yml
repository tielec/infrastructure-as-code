---
- name: Validate test-s3 Pulumi project with S3 backend
  hosts: localhost
  connection: local
  gather_facts: yes
  
  vars:
    # S3バックエンド設定
    pulumi_backend_type: "s3"
    pulumi_s3_bucket: "{{ lookup('env', 'PULUMI_S3_BUCKET') | default('pulumi-state-bucket') }}"
    pulumi_s3_region: "{{ lookup('env', 'PULUMI_S3_REGION') | default('ap-northeast-1') }}"
    
    # プロジェクト設定
    test_project_path: "{{ playbook_dir }}/../../pulumi/test-s3"
    # 変数名を変更して衝突を回避
    test_stack_name: "test-{{ ansible_date_time.epoch[-4:] }}"  # ユニークなスタック名（エポック時間の下4桁）
    
    # テスト設定
    test_project_name: "pulumi-test"
    cleanup_on_failure: true
    remove_stack_on_success: false  # 成功時にスタックを削除するか
    
    # 操作モード
    operation: "{{ op | default('full') }}"  # full, deploy-only, destroy-only
    
  pre_tasks:
    # 共通変数の読み込み
    - name: Include group_vars/all.yml
      ansible.builtin.include_vars:
        file: "{{ playbook_dir }}/../inventory/group_vars/all.yml"
      failed_when: false  # ファイルが存在しない場合も続行
    
    # テスト用の変数設定
    - name: Set test variables
      ansible.builtin.set_fact:
        aws_region: "{{ pulumi_s3_region }}"
        test_timestamp: "{{ ansible_date_time.iso8601_basic_short }}"
        test_run_id: "{{ 999999 | random }}"
  
  tasks:
    # メインの処理をblockで囲み、エラーハンドリングを追加
    - name: Run test-s3 validation
      block:
        # ==================== 準備フェーズ ====================
        - name: "PHASE 1: Preparation and Validation"
          block:
            - name: Display test configuration
              ansible.builtin.debug:
                msg: |
                  ========================================
                  Test-S3 Validation Configuration
                  ========================================
                  Backend Type: {{ pulumi_backend_type }}
                  S3 Bucket: {{ pulumi_s3_bucket }}
                  S3 Region: {{ pulumi_s3_region }}
                  Project Path: {{ test_project_path }}
                  Stack Name: {{ test_stack_name }}
                  Operation Mode: {{ operation }}
                  Test Run ID: {{ test_run_id }}
                  ========================================
            
            - name: Check required environment variables
              ansible.builtin.fail:
                msg: |
                  ERROR: PULUMI_CONFIG_PASSPHRASE environment variable is not set.
                  Please set: export PULUMI_CONFIG_PASSPHRASE="your-passphrase"
              when: lookup('env', 'PULUMI_CONFIG_PASSPHRASE') | length == 0
            
            - name: Verify project directory exists
              ansible.builtin.stat:
                path: "{{ test_project_path }}"
              register: project_dir_check
              failed_when: not project_dir_check.stat.exists
            
            - name: Check package.json exists
              ansible.builtin.stat:
                path: "{{ test_project_path }}/package.json"
              register: package_json_check
              failed_when: not package_json_check.stat.exists
            
            - name: Install npm dependencies
              ansible.builtin.shell: |
                cd {{ test_project_path }}
                npm install
              register: npm_install_result
              changed_when: "'up to date' not in npm_install_result.stdout"
        
        # ==================== S3バケット確認フェーズ ====================
        - name: "PHASE 2: S3 Backend Verification"
          when: operation in ['full', 'deploy-only']
          block:
            - name: Check S3 bucket exists
              ansible.builtin.shell: |
                aws s3api head-bucket --bucket {{ pulumi_s3_bucket }} --region {{ pulumi_s3_region }} 2>/dev/null
              register: s3_bucket_check
              failed_when: false
              changed_when: false
            
            - name: Create S3 bucket if not exists
              when: s3_bucket_check.rc != 0
              ansible.builtin.shell: |
                aws s3api create-bucket \
                  --bucket {{ pulumi_s3_bucket }} \
                  --region {{ pulumi_s3_region }} \
                  {% if pulumi_s3_region != 'us-east-1' %}
                  --create-bucket-configuration LocationConstraint={{ pulumi_s3_region }} \
                  {% endif %}
                  2>&1
              register: s3_bucket_creation
              failed_when: 
                - s3_bucket_creation.rc != 0
                - "'BucketAlreadyOwnedByYou' not in s3_bucket_creation.stderr"
            
            - name: Enable versioning on S3 bucket
              ansible.builtin.shell: |
                aws s3api put-bucket-versioning \
                  --bucket {{ pulumi_s3_bucket }} \
                  --versioning-configuration Status=Enabled \
                  --region {{ pulumi_s3_region }}
              when: s3_bucket_check.rc != 0 or s3_bucket_creation is changed
            
            - name: Test S3 bucket write access
              ansible.builtin.shell: |
                echo "Write test at {{ test_timestamp }}" | \
                aws s3 cp - s3://{{ pulumi_s3_bucket }}/test-write-{{ test_run_id }}.txt \
                  --region {{ pulumi_s3_region }}
              register: s3_write_test
              changed_when: false
            
            - name: Clean up test file
              ansible.builtin.shell: |
                aws s3 rm s3://{{ pulumi_s3_bucket }}/test-write-{{ test_run_id }}.txt \
                  --region {{ pulumi_s3_region }}
              when: s3_write_test is succeeded
              changed_when: false
        
        # ==================== スタック初期化フェーズ ====================
        - name: "PHASE 3: Stack Initialization"
          when: operation in ['full', 'deploy-only']
          block:
            - name: Initialize Pulumi stack
              ansible.builtin.include_role:
                name: pulumi_helper
                tasks_from: init_stack
              vars:
                pulumi_project_path: "{{ test_project_path }}"
                # 明示的に異なる変数名を使用
                stack_name: "{{ test_stack_name }}"
            
            - name: Configure stack - projectName
              ansible.builtin.include_role:
                name: pulumi_helper
                tasks_from: set_config
              vars:
                pulumi_project_path: "{{ test_project_path }}"
                config_key: "projectName"
                config_value: "{{ test_project_name }}"
            
            - name: Configure stack - AWS region
              ansible.builtin.include_role:
                name: pulumi_helper
                tasks_from: set_config
              vars:
                pulumi_project_path: "{{ test_project_path }}"
                config_key: "aws:region"
                config_value: "{{ aws_region }}"
        
        # ==================== デプロイフェーズ ====================
        - name: "PHASE 4: Resource Deployment"
          when: operation in ['full', 'deploy-only']
          block:
            - name: Preview deployment
              ansible.builtin.include_role:
                name: pulumi_helper
                tasks_from: preview
              vars:
                pulumi_project_path: "{{ test_project_path }}"
            
            - name: Deploy resources
              ansible.builtin.include_role:
                name: pulumi_helper
                tasks_from: deploy
              vars:
                pulumi_project_path: "{{ test_project_path }}"
            
            - name: Wait for resources to stabilize
              ansible.builtin.pause:
                seconds: 5
                prompt: "Waiting for resources to stabilize..."
        
        # ==================== 検証フェーズ ====================
        - name: "PHASE 5: Output Validation"
          when: operation in ['full', 'deploy-only']
          block:
            - name: Get bucket name output
              ansible.builtin.include_role:
                name: pulumi_helper
                tasks_from: get_outputs
              vars:
                pulumi_project_path: "{{ test_project_path }}"
                stack_name: "{{ test_stack_name }}"  # 明示的に指定
                output_name: "bucketName"
              register: bucket_name_output
            
            - name: Get bucket ARN output
              ansible.builtin.include_role:
                name: pulumi_helper
                tasks_from: get_outputs
              vars:
                pulumi_project_path: "{{ test_project_path }}"
                stack_name: "{{ test_stack_name }}"  # 明示的に指定
                output_name: "bucketArn"
              register: bucket_arn_output
            
            - name: Get all outputs
              ansible.builtin.include_role:
                name: pulumi_helper
                tasks_from: get_outputs
              vars:
                pulumi_project_path: "{{ test_project_path }}"
                stack_name: "{{ test_stack_name }}"  # 明示的に指定
              register: all_outputs
            
            - name: Display outputs
              ansible.builtin.debug:
                msg: |
                  ========================================
                  Stack Outputs:
                  ========================================
                  Bucket Name: {{ bucket_name_output.stack_output_result.stdout | default('N/A') | trim }}
                  Bucket ARN: {{ bucket_arn_output.stack_output_result.stdout | default('N/A') | trim }}
                  All Outputs:
                  {{ all_outputs.stack_output_result.stdout | default('No outputs available') }}
                  ========================================
            
            - name: Validate bucket exists in AWS
              ansible.builtin.shell: |
                aws s3api head-bucket \
                  --bucket {{ bucket_name_output.stack_output_result.stdout | trim }} \
                  --region {{ aws_region }} 2>&1
              register: deployed_bucket_check
              failed_when: deployed_bucket_check.rc != 0
              changed_when: false
              when: bucket_name_output.stack_output_result is defined
        
        # ==================== 更新テストフェーズ ====================
        - name: "PHASE 6: Update Testing"
          when: operation == 'full'
          block:
            - name: Update project configuration
              ansible.builtin.include_role:
                name: pulumi_helper
                tasks_from: set_config
              vars:
                pulumi_project_path: "{{ test_project_path }}"
                config_key: "projectName"
                config_value: "{{ test_project_name }}-updated"
            
            - name: Preview update
              ansible.builtin.include_role:
                name: pulumi_helper
                tasks_from: preview
              vars:
                pulumi_project_path: "{{ test_project_path }}"
            
            - name: Refresh stack state
              ansible.builtin.include_role:
                name: pulumi_helper
                tasks_from: refresh
              vars:
                pulumi_project_path: "{{ test_project_path }}"
        
        # ==================== クリーンアップフェーズ ====================
        - name: "PHASE 7: Cleanup"
          when: operation in ['full', 'destroy-only'] or remove_stack_on_success
          block:
            - name: Destroy resources
              ansible.builtin.include_role:
                name: pulumi_helper
                tasks_from: destroy
              vars:
                pulumi_project_path: "{{ test_project_path }}"
            
            - name: Remove stack (if requested)
              ansible.builtin.include_role:
                name: pulumi_helper
                tasks_from: remove_stack
              vars:
                pulumi_project_path: "{{ test_project_path }}"
                stack_name: "{{ test_stack_name }}"  # 明示的に指定
              when: remove_stack_on_success | bool
            
            - name: Cleanup S3 backend state files
              ansible.builtin.shell: |
                aws s3 ls s3://{{ pulumi_s3_bucket }}/test-s3/.pulumi/stacks/{{ test_stack_name }}/ \
                  --region {{ pulumi_s3_region }} --recursive 2>/dev/null || echo "No files found"
              register: state_files_list
              when: remove_stack_on_success | bool
              changed_when: false
            
            - name: Delete state files
              ansible.builtin.shell: |
                aws s3 rm s3://{{ pulumi_s3_bucket }}/test-s3/.pulumi/stacks/{{ test_stack_name }}/ \
                  --region {{ pulumi_s3_region }} --recursive
              when: 
                - remove_stack_on_success | bool
                - "'No files found' not in state_files_list.stdout"
              changed_when: true
        
        # ==================== 最終レポート ====================
        - name: "PHASE 8: Final Report"
          block:
            - name: Generate test report
              ansible.builtin.set_fact:
                test_report: |
                  ========================================
                  Test-S3 Validation Report
                  ========================================
                  Test Run ID: {{ test_run_id }}
                  Timestamp: {{ test_timestamp }}
                  Stack Name: {{ test_stack_name }}
                  
                  Results:
                  - S3 Backend: ✓ Connected
                  - Stack Initialization: ✓ Success
                  - Resource Deployment: ✓ Success
                  - Output Validation: ✓ Success
                  - Update Testing: {{ '✓ Success' if operation == 'full' else 'Skipped' }}
                  - Cleanup: {{ '✓ Success' if operation in ['full', 'destroy-only'] else 'Skipped' }}
                  
                  Backend Details:
                  - S3 Bucket: {{ pulumi_s3_bucket }}
                  - Region: {{ pulumi_s3_region }}
                  
                  Test Status: PASSED
                  ========================================
            
            - name: Display test report
              ansible.builtin.debug:
                msg: "{{ test_report.split('\n') }}"
            
            - name: Save test report
              ansible.builtin.copy:
                content: "{{ test_report }}"
                dest: "/tmp/test-s3-report-{{ test_run_id }}.txt"
              when: not ansible_check_mode
      
      rescue:
        - name: Handle test failure
          block:
            - name: Display failure message
              ansible.builtin.debug:
                msg: |
                  ========================================
                  Test Failed!
                  ========================================
                  Error: {{ ansible_failed_result.msg | default('Unknown error') }}
                  {% if cleanup_on_failure %}
                  Attempting cleanup...
                  {% endif %}
                  ========================================
            
            - name: Cleanup on failure
              when: cleanup_on_failure | bool
              ansible.builtin.include_role:
                name: pulumi_helper
                tasks_from: destroy
              vars:
                pulumi_project_path: "{{ test_project_path }}"
              ignore_errors: true
            
            - name: Fail with error message
              ansible.builtin.fail:
                msg: "Test validation failed. See error above for details."

# 実行例とトラブルシューティング用の情報をコメントとして追加
# 
# 使用方法:
# 1. 環境変数の設定:
#    export PULUMI_CONFIG_PASSPHRASE="your-passphrase"
#    export AWS_PROFILE="your-profile"
#    export PULUMI_S3_BUCKET="your-bucket"  # オプション
#    export PULUMI_S3_REGION="ap-northeast-1"  # オプション
#
# 2. 実行:
#    # フルテスト（デプロイ、検証、削除）
#    ansible-playbook test-s3-validation.yml
#    
#    # デプロイのみ
#    ansible-playbook test-s3-validation.yml -e op=deploy-only
#    
#    # 削除のみ
#    ansible-playbook test-s3-validation.yml -e op=destroy-only
#    
#    # 成功時もスタックを削除
#    ansible-playbook test-s3-validation.yml -e remove_stack_on_success=true
#
# 3. デバッグ:
#    ansible-playbook test-s3-validation.yml -vvv