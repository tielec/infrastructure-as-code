---
# deploy_jenkins_security.yml
# Jenkinsインフラのセキュリティグループをデプロイ

- name: Deploy Security Groups with Pulumi
  block:
    - name: Display security deployment information
      ansible.builtin.debug:
        msg: |
          Deploying Security Groups:
          - Project: {{ project_name }}
          - Security Pulumi Project: {{ security_project_name }}
          - Network Pulumi Project: {{ network_project_name }}
          - Environment: {{ env_name }}
    
    - name: Check if Pulumi security module exists
      ansible.builtin.stat:
        path: "{{ pulumi_path }}/security"
      register: pulumi_security_dir
      
    - name: Fail if Pulumi security module doesn't exist
      ansible.builtin.fail:
        msg: "Pulumi security module not found at {{ pulumi_path }}/security. Please ensure the repository is properly cloned."
      when: not pulumi_security_dir.stat.exists
    
    - name: Check if AWS credentials are configured
      ansible.builtin.shell: aws sts get-caller-identity
      register: aws_cred_check
      changed_when: false
      ignore_errors: true
      
    - name: Display AWS credentials status
      ansible.builtin.debug:
        msg: "AWS credentials: {{ 'Configured correctly' if aws_cred_check.rc == 0 else 'Not configured or invalid' }}"
    
    - name: Configure AWS credentials if not already set
      ansible.builtin.shell: |
        source /root/infrastructure-as-code/scripts/aws-credentials.sh
      args:
        executable: /bin/bash
      when: aws_cred_check.rc != 0
      
    - name: Check if Pulumi stack exists
      ansible.builtin.shell: |
        cd {{ pulumi_path }}/security
        pulumi stack ls | grep {{ env_name }} || echo "stack_not_found"
      register: stack_select_result
      changed_when: false
      failed_when: false
      
    - name: Initialize Pulumi stack if not exists
      ansible.builtin.shell: |
        cd {{ pulumi_path }}/security
        pulumi stack init {{ env_name }}
      when: "'stack_not_found' in stack_select_result.stdout"
    
    - name: Install npm dependencies if needed
      ansible.builtin.shell: |
        cd {{ pulumi_path }}/security
        npm install
      args:
        creates: "{{ pulumi_path }}/security/node_modules"
      
    - name: Create or update Pulumi config for environment
      ansible.builtin.shell: |
        cd {{ pulumi_path }}/security
        pulumi stack select {{ env_name }}
        pulumi config set aws:region {{ aws_region_name }}
        # 正しいプロジェクト名を設定
        pulumi config set {{ security_project_name }}:projectName {{ project_name }}
        # ネットワークスタック名を設定
        pulumi config set {{ security_project_name }}:networkStackName {{ network_project_name }}
      register: pulumi_config_result
      changed_when: pulumi_config_result.rc == 0
      
    # セキュリティグループのindex.tsファイルを確認・更新
    - name: Check and update security index.ts for correct stack reference
      ansible.builtin.shell: |
        cd {{ pulumi_path }}/security
        # オリジナルファイルのバックアップ作成
        cp -f index.ts index.ts.backup || true
        
        # ファイルの内容を表示
        echo "Checking security/index.ts content:"
        grep -n "StackReference" index.ts || echo "StackReference not found in file"
        
        # StackReferenceの行を正しいスタック名に更新
        sed -i 's/const networkStack = new pulumi.StackReference.*/const networkStack = new pulumi.StackReference(`${pulumi.getOrganization()}\/${config.get("networkStackName") || "jenkins-network"}\/${environment}");/g' index.ts
        
        # 変更内容確認
        echo "Updated StackReference line:"
        grep -n "StackReference" index.ts
      register: update_index_result
      changed_when: false
    
    - name: Display update result
      ansible.builtin.debug:
        msg: "{{ update_index_result.stdout_lines }}"
    
    - name: Verify VPC ID exists from network stack
      ansible.builtin.shell: |
        cd {{ pulumi_path }}/network
        pulumi stack output vpcId
      register: vpc_id_check
      changed_when: false
      failed_when: vpc_id_check.rc != 0
        
    - name: Display VPC ID
      ansible.builtin.debug:
        msg: "Using VPC ID: {{ vpc_id_check.stdout | trim }}"
    
    - name: Preview Pulumi deployment
      ansible.builtin.shell: |
        cd {{ pulumi_path }}/security
        pulumi preview
      register: pulumi_preview_result
      changed_when: false
      
    - name: Display Pulumi preview
      ansible.builtin.debug:
        msg: "{{ pulumi_preview_result.stdout_lines }}"
      
    - name: Deploy security stack with Pulumi
      ansible.builtin.shell: |
        cd {{ pulumi_path }}/security
        pulumi up --yes
      register: pulumi_up_result
      changed_when: "'No changes required' not in pulumi_up_result.stdout"
    
    - name: Extract security group IDs from Pulumi output
      ansible.builtin.shell: |
        cd {{ pulumi_path }}/security
        pulumi stack output albSecurityGroupId
        pulumi stack output jenkinsSecurityGroupId
        pulumi stack output jenkinsAgentSecurityGroupId
        pulumi stack output efsSecurityGroupId
      register: sg_ids_result
      changed_when: false
      
    - name: Set security facts for use in other playbooks
      ansible.builtin.set_fact:
        alb_sg_id: "{{ sg_ids_result.stdout_lines[0] | trim }}"
        jenkins_sg_id: "{{ sg_ids_result.stdout_lines[1] | trim }}"
        jenkins_agent_sg_id: "{{ sg_ids_result.stdout_lines[2] | trim }}"
        efs_sg_id: "{{ sg_ids_result.stdout_lines[3] | trim }}"
        security_deployed: true
      
    - name: Summary of security groups deployment
      ansible.builtin.debug:
        msg: |
          Security Groups Deployed Successfully:
          ALB Security Group ID: {{ alb_sg_id }}
          Jenkins Security Group ID: {{ jenkins_sg_id }}
          Jenkins Agent Security Group ID: {{ jenkins_agent_sg_id }}
          EFS Security Group ID: {{ efs_sg_id }}
  
  rescue:
    - name: Set security deployment status on failure
      ansible.builtin.set_fact:
        security_deployed: false
      
    - name: Display error
      ansible.builtin.debug:
        msg: "Failed to deploy security groups. See error details above."
