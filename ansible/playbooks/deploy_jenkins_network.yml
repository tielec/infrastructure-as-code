---
# deploy_jenkins_network.yml
# Jenkinsインフラのネットワークリソース（VPC、サブネット等）をデプロイ

- name: Deploy Network Infrastructure with Pulumi
  block:
    - name: Display network deployment information
      ansible.builtin.debug:
        msg: |
          Deploying Network Infrastructure:
          - Project: {{ project_name }}
          - Network Pulumi Project: {{ network_project_name }}
          - Environment: {{ env_name }}
          - VPC CIDR: {{ infra.aws.vpc_cidr }}
    
    - name: Check if Pulumi network module exists
      ansible.builtin.stat:
        path: "{{ pulumi_path }}/network"
      register: pulumi_network_dir
      
    - name: Fail if Pulumi network module doesn't exist
      ansible.builtin.fail:
        msg: "Pulumi network module not found at {{ pulumi_path }}/network. Please ensure the repository is properly cloned."
      when: not pulumi_network_dir.stat.exists

    - name: Check if AWS credentials are configured
      ansible.builtin.shell: aws sts get-caller-identity
      register: aws_cred_check
      changed_when: false
      ignore_errors: true
      
    - name: Display AWS credentials status
      ansible.builtin.debug:
        msg: "AWS credentials: {{ 'Configured correctly' if aws_cred_check.rc == 0 else 'Not configured or invalid' }}"
    
    - name: Configure AWS credentials if not already set
      ansible.builtin.shell: |
        source /root/infrastructure-as-code/scripts/aws-credentials.sh
      args:
        executable: /bin/bash
      when: aws_cred_check.rc != 0

    - name: Check if Pulumi stack exists
      ansible.builtin.shell: |
        cd {{ pulumi_path }}/network
        pulumi stack ls | grep {{ env_name }} || echo "stack_not_found"
      register: stack_select_result
      changed_when: false
      failed_when: false
      
    - name: Initialize Pulumi stack if not exists
      ansible.builtin.shell: |
        cd {{ pulumi_path }}/network
        pulumi stack init {{ env_name }}
      when: "'stack_not_found' in stack_select_result.stdout"
    
    - name: Install npm dependencies if needed
      ansible.builtin.shell: |
        cd {{ pulumi_path }}/network
        npm install
      args:
        creates: "{{ pulumi_path }}/network/node_modules"
      
    - name: Create or update Pulumi config for environment
      ansible.builtin.shell: |
        cd {{ pulumi_path }}/network
        pulumi stack select {{ env_name }}
        pulumi config set aws:region {{ aws_region_name }}
        # 正しいプロジェクト名を設定
        pulumi config set {{ network_project_name }}:projectName {{ project_name }}
        pulumi config set {{ network_project_name }}:vpcCidr {{ infra.aws.vpc_cidr }}
      register: pulumi_config_result
      changed_when: pulumi_config_result.rc == 0
    
    - name: Preview Pulumi deployment
      ansible.builtin.shell: |
        cd {{ pulumi_path }}/network
        pulumi preview
      register: pulumi_preview_result
      changed_when: false
      
    - name: Display Pulumi preview
      ansible.builtin.debug:
        msg: "{{ pulumi_preview_result.stdout_lines }}"
      
    - name: Deploy network stack with Pulumi
      ansible.builtin.shell: |
        cd {{ pulumi_path }}/network
        pulumi up --yes
      register: pulumi_up_result
      changed_when: "'No changes required' not in pulumi_up_result.stdout"
    
    - name: Extract VPC ID from Pulumi output
      ansible.builtin.shell: |
        cd {{ pulumi_path }}/network
        pulumi stack output vpcId
      register: vpc_id_result
      changed_when: false
      
    - name: Extract subnet IDs from Pulumi output
      ansible.builtin.shell: |
        cd {{ pulumi_path }}/network
        pulumi stack output publicSubnetIds
        pulumi stack output privateSubnetIds
      register: subnet_ids_result
      changed_when: false
      
    - name: Set network facts for use in other playbooks
      ansible.builtin.set_fact:
        vpc_id: "{{ vpc_id_result.stdout | trim }}"
        public_subnet_ids: "{{ subnet_ids_result.stdout_lines[0] | trim }}"
        private_subnet_ids: "{{ subnet_ids_result.stdout_lines[1] | trim }}"
        network_deployed: true
        # スタック参照情報も保存
        network_stack_name: "{{ network_project_name }}"
      
    - name: Summary of network deployment
      ansible.builtin.debug:
        msg: |
          Network Infrastructure Deployed Successfully:
          Stack Name: {{ network_project_name }}
          VPC ID: {{ vpc_id }}
          Public Subnet IDs: {{ public_subnet_ids }}
          Private Subnet IDs: {{ private_subnet_ids }}
  
  rescue:
    - name: Set network deployment status on failure
      ansible.builtin.set_fact:
        network_deployed: false
      
    - name: Display error
      ansible.builtin.debug:
        msg: "Failed to deploy network infrastructure. See error details above."
      
    - name: Fail the playbook
      ansible.builtin.fail:
        msg: "Network deployment failed."
