---
# Jenkins Agent AMI Builder デプロイプレイブック
# カスタムAMIを作成するEC2 Image Builderインフラをデプロイします
#
# 使用方法:
#   ansible-playbook deploy_jenkins_agent_ami.yml -e "env=dev"                    # デフォルト：パイプライン自動実行
#   ansible-playbook deploy_jenkins_agent_ami.yml -e "env=dev trigger_ami_build=false"  # パイプライン実行を抑制

- name: Deploy Jenkins Agent AMI Builder
  hosts: localhost
  connection: local
  gather_facts: yes
  vars:
    # コマンドラインから環境名を受け取る
    env_name: "{{ env | default('dev') }}"
  
  pre_tasks:
    # all.yml から変数を読み込む
    - name: Include group_vars/all.yml
      ansible.builtin.include_vars:
        file: "{{ playbook_dir }}/../inventory/group_vars/all.yml"
    
    # 必要な変数を設定
    - name: Set required variables from all.yml
      ansible.builtin.set_fact:
        project_name: "{{ infra.project_name }}"
        aws_region_name: "{{ infra.aws.default_region }}"
        agent_ami_project_name: "{{ infra.pulumi.agent_ami_project | default('jenkins-agent-ami') }}"
    
    - name: Display deployment information
      ansible.builtin.debug:
        msg:
          - "=========================================="
          - "Jenkins Agent AMI Builder Deployment"
          - "=========================================="
          - "Environment: {{ env_name }}"
          - "Project: {{ project_name }}"
          - "Region: {{ aws_region_name }}"
          - "Trigger Build: {{ trigger_ami_build | default(true) }}"
          - "=========================================="
  
  roles:
    - aws_setup
    - jenkins_agent_ami
      # trigger_ami_buildはコマンドラインから上書き可能
      # デフォルトはtrue（ロールのdefaults/main.ymlで定義）
      # 実行を抑制する場合: -e "trigger_ami_build=false"
