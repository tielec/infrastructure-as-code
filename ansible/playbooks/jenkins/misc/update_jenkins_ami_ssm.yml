---
# Jenkins Agent AMI SSM Parameter Update Playbook
# このプレイブックは、Image Builderで作成された最新のAMI IDを
# SSMパラメータストアに登録します
#
# 使用方法 (ansibleディレクトリから実行):
#   ansible-playbook playbooks/jenkins/misc/update_jenkins_ami_ssm.yml -e "env=dev"
#
# このプレイブックは以下の場合に使用します：
#   - Image Builderのビルドが完了した後
#   - 手動でSSMパラメータを更新したい場合
#   - CI/CDパイプラインから自動実行する場合

- name: Update Jenkins Agent AMI IDs in SSM Parameter Store
  hosts: localhost
  connection: local
  gather_facts: yes
  vars:
    env_name: "{{ env | default('dev') }}"
  
  pre_tasks:
    - name: Include group_vars/all.yml
      ansible.builtin.include_vars:
        file: "{{ inventory_dir }}/group_vars/all.yml"
    
    - name: Set required variables
      ansible.builtin.set_fact:
        project_name: "{{ infra.project_name }}"
        aws_region_name: "{{ infra.aws.default_region }}"
  
  tasks:
    - name: Get Pulumi stack outputs for pipeline ARNs
      ansible.builtin.shell: |
        cd {{ inventory_dir }}/../../pulumi/jenkins-agent-ami
        pulumi stack output --json
      register: stack_outputs
      changed_when: false
      ignore_errors: true
    
    - name: Parse stack outputs
      ansible.builtin.set_fact:
        pipeline_outputs: "{{ stack_outputs.stdout | from_json }}"
      when: stack_outputs is succeeded
    
    - name: Get latest x86_64 AMI from Image Builder
      ansible.builtin.shell: |
        aws imagebuilder list-image-pipeline-images \
          --image-pipeline-arn {{ pipeline_outputs.imagePipelineX86Arn }} \
          --region {{ aws_region_name }} \
          --query 'imageSummaryList[?state.status==`AVAILABLE`] | [0].outputResources.amis[0].image' \
          --output text
      register: x86_ami_result
      when: 
        - pipeline_outputs is defined
        - pipeline_outputs.imagePipelineX86Arn is defined
      changed_when: false
    
    - name: Get latest ARM64 AMI from Image Builder
      ansible.builtin.shell: |
        aws imagebuilder list-image-pipeline-images \
          --image-pipeline-arn {{ pipeline_outputs.imagePipelineArmArn }} \
          --region {{ aws_region_name }} \
          --query 'imageSummaryList[?state.status==`AVAILABLE`] | [0].outputResources.amis[0].image' \
          --output text
      register: arm_ami_result
      when:
        - pipeline_outputs is defined
        - pipeline_outputs.imagePipelineArmArn is defined
      changed_when: false
    
    - name: Get current SSM parameter values
      block:
        - name: Get current x86 AMI ID from SSM
          ansible.builtin.shell: |
            aws ssm get-parameter \
              --name "/{{ project_name }}/{{ env_name }}/jenkins/agent/custom-ami-x86" \
              --region {{ aws_region_name }} \
              --query 'Parameter.Value' \
              --output text 2>/dev/null || echo "ami-placeholder-x86"
          register: current_x86_ami
          changed_when: false
        
        - name: Get current ARM64 AMI ID from SSM
          ansible.builtin.shell: |
            aws ssm get-parameter \
              --name "/{{ project_name }}/{{ env_name }}/jenkins/agent/custom-ami-arm" \
              --region {{ aws_region_name }} \
              --query 'Parameter.Value' \
              --output text 2>/dev/null || echo "ami-placeholder-arm"
          register: current_arm_ami
          changed_when: false
    
    - name: Update x86_64 AMI in SSM if changed
      ansible.builtin.shell: |
        aws ssm put-parameter \
          --name "/{{ project_name }}/{{ env_name }}/jenkins/agent/custom-ami-x86" \
          --value "{{ x86_ami_result.stdout }}" \
          --type "String" \
          --overwrite \
          --region {{ aws_region_name }}
      when:
        - x86_ami_result is defined
        - x86_ami_result is succeeded
        - x86_ami_result.stdout != ""
        - x86_ami_result.stdout != "None"
        - x86_ami_result.stdout != current_x86_ami.stdout
      register: x86_update
    
    - name: Update ARM64 AMI in SSM if changed
      ansible.builtin.shell: |
        aws ssm put-parameter \
          --name "/{{ project_name }}/{{ env_name }}/jenkins/agent/custom-ami-arm" \
          --value "{{ arm_ami_result.stdout }}" \
          --type "String" \
          --overwrite \
          --region {{ aws_region_name }}
      when:
        - arm_ami_result is defined
        - arm_ami_result is succeeded
        - arm_ami_result.stdout != ""
        - arm_ami_result.stdout != "None"
        - arm_ami_result.stdout != current_arm_ami.stdout
      register: arm_update
    
    - name: Display update summary
      ansible.builtin.debug:
        msg:
          - "=========================================="
          - "SSM Parameter Update Summary"
          - "=========================================="
          - "Environment: {{ env_name }}"
          - ""
          - "x86_64 AMI:"
          - "  Current: {{ current_x86_ami.stdout }}"
          - "  New: {{ x86_ami_result.stdout | default('Not available') }}"
          - "  Updated: {{ 'Yes' if x86_update is defined and x86_update is changed else 'No (same or unavailable)' }}"
          - ""
          - "ARM64 AMI:"
          - "  Current: {{ current_arm_ami.stdout }}"
          - "  New: {{ arm_ami_result.stdout | default('Not available') }}"
          - "  Updated: {{ 'Yes' if arm_update is defined and arm_update is changed else 'No (same or unavailable)' }}"
          - ""
          - "{{ 'IMPORTANT: Jenkins Agent stack needs to be redeployed to use new AMIs:' if (x86_update is defined and x86_update is changed) or (arm_update is defined and arm_update is changed) else 'No changes made to SSM parameters.' }}"
          - "{{ '  ansible-playbook deploy_jenkins_agent.yml -e env=' + env_name if (x86_update is defined and x86_update is changed) or (arm_update is defined and arm_update is changed) else '' }}"
          - "=========================================="